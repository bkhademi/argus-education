{"version":3,"sources":["routing.js","DashboardCtrl.js","ReferralCtrl.js","ManageAECCtrl.js","ManageAECAbsenceCtrl.js","StudentDataCtrl.js","ProfileCtrl.js","NavigationCtrl.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChtpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnhJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxhKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"admin1Main.js","sourcesContent":["(function(app){\r\n\"use strict\";\r\n\tapp.config(['$stateProvider','$urlRouterProvider', '$ocLazyLoadProvider','$provide', \r\n\tfunction($stateProvider,$urlRouterProvider, $ocLazyLoadProvider,  $provide){\r\n\t\t$ocLazyLoadProvider.config({\r\n\t\t\t// Set to true if you want to see what and when is dynamically loaded\r\n\t\t\tdebug: false\r\n\t\t});\r\n\t\t$urlRouterProvider.otherwise('/auth');\r\n\t\t$stateProvider\r\n\t\t.state('auth', {\r\n\t\t\turl: '/auth',\r\n\t\t\ttemplateUrl: 'views/login.html',\r\n\t\t\tcontroller: 'AuthController as auth',\r\n\t\t\tdata: {pageTitle: \"Login\", specialClass: \"white-bg\"}\r\n\t\t})\r\n\t\t.state('admin1', {\r\n\t\t\tabstract: true,\r\n\t\t\turl: \"/admin1\",\r\n\t\t\ttemplateUrl: \"views/common/contentArgus.html\",\r\n\t\t\tresolve: { \r\n\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfiles: ['js/plugins/chartJs/Chart.min.js', 'js/plugins/footable/footable.all.min.js', 'css/plugins/footable/footable.core.css']\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'angles',\r\n\t\t\t\t\t\t\tfiles: ['js/plugins/chartJs/angles.js']\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfiles: ['js/plugins/footable/footable.all.min.js', 'css/plugins/footable/footable.core.css']\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'ui.footable',\r\n\t\t\t\t\t\t\tfiles: ['js/plugins/footable/angular-footable.js']\r\n\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tinsertBefore: '#loadBefore',\r\n\t\t\t\t\t\t\tfiles: ['css/plugins/fullcalendar/fullcalendar.css', 'js/plugins/fullcalendar/fullcalendar.min.js', 'js/plugins/fullcalendar/gcal.js']\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'ui.calendar',\r\n\t\t\t\t\t\t\tfiles: ['js/plugins/fullcalendar/calendar.js']\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinsertBefore: '#loadBefore',\r\n\t\t\t\t\t\t\tname: 'localytics.directives',\r\n\t\t\t\t\t\t\tfiles: ['css/plugins/chosen/chosen.css', 'js/plugins/chosen/chosen.jquery.js', 'js/plugins/chosen/chosen.js']\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'cgNotify',\r\n\t\t\t\t\t\t\tfiles: ['css/plugins/angular-notify/angular-notify.min.css', 'js/plugins/angular-notify/angular-notify.min.js']\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'ui.slimscroll',\r\n\t\t\t\t\t\t\tfiles: ['js/plugins/slimscroll/angular.slimscroll.js']\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.state('admin1.dashboard', {\r\n\t\t\turl: \"/dashboard\",\r\n\t\t\ttemplateUrl: 'views/admin1/dashboard.html',\r\n\t\t\tdata: {pageTitle: 'Dashboard'},\r\n\t\t\tcontroller: \"DashAdmin1Ctrl\",\r\n\t\t\tresolve: {\r\n\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfiles: ['js/plugins/d3/d3.min.js', \"js/plugins/jquery-tipsy/jquery.tipsy.js\", \"css/plugins/gauge/gauge_small.css\", \"css/plugins/gauge/gauge.css\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.state('admin1.referral', {\r\n\t\t\turl: \"/adminReferral\",\r\n\t\t\ttemplateUrl: 'views/admin1/Referral.html',\r\n\t\t\tdata: {pageTitle: 'Referral'},\r\n\t\t\tcontroller: 'admin1referalController',\r\n\t\t\tresolve: {\r\n\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})\r\n\t\t.state('admin1.AECList', {\r\n\t\t\turl: \"/AECList\",\r\n\t\t\ttemplateUrl: 'views/sharedItems/manageAEC.html',\r\n\t\t\tdata: {pageTitle: 'AEC List'},\r\n\t\t\tcontroller : 'manageAECController',\r\n\t\t\tresolve: {\r\n\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'BarcodeGenerator',\r\n\t\t\t\t\t\t\tfiles: ['css/plugins/barcode/barcode.css', 'js/plugins/barcode/barcode.js']\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})\r\n\t\t.state('admin1.pending', {\r\n\t\t\turl: \"/pending\",\r\n\t\t\ttemplateUrl: 'views/sharedItems/manageAECabsence.html',\r\n\t\t\tdata: {pageTitle: 'Pending'},\r\n\t\t\tcontroller: 'manageAECAbsenceController',\r\n\t\t\tresolve: {\r\n\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.state('admin1.studentData', {\r\n\t\t\turl: \"/studentData\",\r\n\t\t\ttemplateUrl: 'views/sharedItems/studentInfo.html',\r\n\t\t\tdata: {pageTitle: 'Student Data'},\r\n\t\t\tcontroller: 'studentInfoCtrl',\r\n\t\t\tresolve: {\r\n\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.state('admin1.createStudentPass', {\r\n\t\t\turl: \"/createStudentPass\",\r\n\t\t\ttemplateUrl: 'views/sharedItems/multiplePasses.html',\r\n\t\t\tdata: {pageTitle: 'Create Pass'}\r\n\t\t})\r\n\r\n\t\r\n\t}])\r\n\t\r\n}(angular.module('Argus')));","(function(app){\r\n\t\"use strict\";  \r\n\tapp.controller('DashAdmin1Ctrl', ['$scope', '$modal', 'referrals', 'notify',\r\n\tfunction($scope, $modal, referrals, notify){\r\n\t\t\r\n\t\t \r\n\t\t$scope.studentsToday =0;\r\n\t\tvar date = Date();\r\n\t\tvar dateStr = date.substring(4,7) + ' '+date.substring(8,10) + ' '+date.substring(11,15);\r\n\t\treferrals.query({id:dateStr},function(data){\r\n\t\t\tvar count= 0;\r\n\t\t\tfor(var i = 0; i < data.length ; i++){\r\n\t\t\t\tfor(var j = 0 ; j < data[i].referred.length ; j++){\r\n\t\t\t\t}\r\n\t\t\t\tif(data[i].referred.length !== 0 ){\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t$scope.studentsToday = count;\r\n\t\t});;\r\n\t\t$scope.followUp  = 0;\r\n\t\treferrals.query({id:dateStr, absence:true},function(data){$scope.followUp = data.length;});\r\n\t\t\r\n\t\t$scope.downloadEODReport =function(){\r\n\t\t\tnotify({message:'Now Doing, hold on'});\r\n\t\t\treturn;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Opens modal for average attendance\r\n\t\t */\r\n\t\t$scope.openAverageAttendance = function () {\r\n\t\t\t$scope.studentsToday  = 0;\r\n\t\t\t$scope.FollowUp = 0;\r\n\t\t\t$scope.averageAttendance = 0;\r\n\t\t\t$scope.rating = 0;\r\n\t\t\t\r\n\t\t\tvar averageAttendanceModal = $modal.open({\r\n\t\t\t\ttemplateUrl: 'averageAttendanceModal.html',\r\n\t\t\t\tsize: 'lg',\r\n\t\t\t\tcontroller: function ($scope, $modalInstance, graphOptions, graphData, $timeout) {\r\n\t\t\t\t\t$scope.graphOptions = graphOptions;\r\n\t\t\t\t\t$scope.graphData = graphData\r\n\t\t\t\t\t\r\n\t\t\t\t\t$timeout(function () {\r\n\t\t\t\t\t\t$scope.drawGraph = true;\r\n\t\t\t\t\t}, 100);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.cancel = function () { $modalInstance.dismiss('cancel'); }\r\n\t\t\t\t},\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tgraphOptions : function () { return $scope.lineOptions },\r\n\t\t\t\t\tgraphData: function () { return $scope.lineData }\r\n\t\t\t\t}\r\n\t\t\t})// End assignmentsModal\r\n\t\t};\r\n\t\t/**\r\n\t\t * Opens Modal for Rating's Modal\r\n\t\t */\r\n\t\t$scope.openRating = function () {\r\n\t\t\tvar ratingsModal = $modal.open({\r\n\t\t\t\ttemplateUrl: 'ratingsModal.html',\r\n\t\t\t\tsize: 'lg',\r\n\t\t\t\tcontroller: function ($scope, $modalInstance, graphOptions, graphData, $timeout) {\r\n\t\t\t\t\t$scope.graphOptions = graphOptions;\r\n\t\t\t\t\t$scope.graphData = graphData;\r\n\t\t\t\t\t\r\n\t\t\t\t\t$timeout(function () {\r\n\t\t\t\t\t\t$scope.drawGraph = true;\r\n\t\t\t\t\t}, 100);\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.cancel = function () { $modalInstance.dismiss('cancel'); }\r\n\t\t\t\t},\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tgraphOptions : function () { return $scope.lineOptions },\r\n\t\t\t\t\tgraphData: function () { return $scope.lineData }\r\n\t\t\t\t}\r\n\t\t\t})// End assignmentsModal\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Data for Line chart\r\n\t\t */\r\n\t\t$scope.lineData = {\r\n\t\t\tlabels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Example dataset\",\r\n\t\t\t\t\tfillColor: \"rgba(185, 35, 34, .5)\",\r\n\t\t\t\t\tstrokeColor: \"rgba(185, 35, 34, .8)\",\r\n\t\t\t\t\tpointColor: \"#B92322\",\r\n\t\t\t\t\tpointStrokeColor: \"#fff\",\r\n\t\t\t\t\tpointHighlightFill: \"#fff\",\r\n\t\t\t\t\tpointHighlightStroke: \"rgba(220,220,220,1)\",\r\n\t\t\t\t\tdata: [0, 0, 0, 0, 0, 0, 0]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Options for Line chart\r\n\t\t */\r\n\t\t$scope.lineOptions = {\r\n\t\t\tscaleShowGridLines: true,\r\n\t\t\tscaleGridLineColor: \"rgba(0,0,0,.05)\",\r\n\t\t\tscaleGridLineWidth: 1,\r\n\t\t\tbezierCurve: false,\r\n\t\t\tbezierCurveTension: 0.4,\r\n\t\t\tpointDot: true,\r\n\t\t\tpointDotRadius: 4,\r\n\t\t\tpointDotStrokeWidth: 1,\r\n\t\t\tpointHitDetectionRadius: 20,\r\n\t\t\tdatasetStroke: true,\r\n\t\t\tdatasetStrokeWidth: 2,\r\n\t\t\tdatasetFill: true\r\n\t\t};\r\n\t\t/**\r\n\t\t * Data for Doughnut chart\r\n\t\t */\r\n\t\t$scope.doughnutData = [\r\n\t\t\t{\r\n\t\t\t\tvalue: 300,\r\n\t\t\t\tcolor: \"#2f4050\",\r\n\t\t\t\thighlight: \"#1ab394\",\r\n\t\t\t\tlabel: \"App\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalue: 50,\r\n\t\t\t\tcolor: \"#2f4060\",\r\n\t\t\t\thighlight: \"#1ab394\",\r\n\t\t\t\tlabel: \"Software\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalue: 100,\r\n\t\t\t\tcolor: \"#2f4070\",\r\n\t\t\t\thighlight: \"#1ab394\",\r\n\t\t\t\tlabel: \"Laptop\"\r\n\t\t\t}\r\n\t\t];\r\n\t\t\r\n\t\t/**\r\n\t\t * Options for Doughnut chart\r\n\t\t */\r\n\t\t$scope.doughnutOptions = {\r\n\t\t\tsegmentShowStroke: true,\r\n\t\t\tsegmentStrokeColor: \"#fff\",\r\n\t\t\tsegmentStrokeWidth: 2,\r\n\t\t\tpercentageInnerCutout: 45, // This is 0 for Pie charts\r\n\t\t\tanimationSteps: 100,\r\n\t\t\tanimationEasing: \"easeOutBounce\",\r\n\t\t\tanimateRotate: true,\r\n\t\t\tanimateScale: false\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * List of the techer's tutors if any\r\n\t\t */\r\n\t\t$scope.teachersTeam = [\r\n\t\t\t{fn:\"Adrian Omar\", ln:\"Galicia Mendez\", subjects:[\"Math\", \"Physics\",\"Spanish\"], days:[\"M\",\"W\", \"Sat\"], rate:9.5},\r\n\t\t\t{fn:\"Brandon\", ln:\"Hernandez\", subjects:[\"Math\", \"Physics\",\"Chemistry\", \"Biology\"], days:[\"T\",\"Th\", \"F\"], rate:8.9},\r\n\t\t\t{fn:\"Jose\", ln:\"Martinez\", subjects:[\"Math\", \"Physics\",\"Computer Science\"], days:[\"M\",\"W\", \"Sat\"], rate:2.1},\r\n\t\t]\r\n\t\t\r\n\t}]);\r\n}(angular.module('Argus')));","(function(app){\r\n\t\"use strict\";\r\n\tapp.\r\n\tcontroller(\"admin1referalController\",\r\n\t[\"$scope\", \"assignmentsListService\",  \"teachers\", \"referrals\", \"StudentsService\", '$modal','notify','$http',\r\n\t\tfunction ($scope, assignmentsService,teachers, referrals,students,$modal, notify, $http) {\r\n\t\t\t$scope.selected = {}; // model for the possible selections (selected.student,   or seleted.assignments)\r\n\t\t\t$scope.currentDate = new Date(); // date on the datepicker\r\n\t\t\t$scope.teacherStudents = []; // model for autocomplete  \r\n\t\t\t$scope.refTable = []; // model for dynamic table \r\n\t\t\t$scope.edits = [];  \r\n\t\t\t$scope.eightPeriods = [];\r\n\t\t\t\r\n\t\t\tfunction getTeachers(){\r\n\t\t\t\t$scope.teachers = teachers.query(function(data){\r\n\t\t\t\t\tconsole.log('the teachers')\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tgetTeachers();\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Watch for changes in the datepicker to add students to that date's\r\n\t\t\t * AEC List\r\n\t\t\t */\r\n\t\t\t$scope.$watch('form.date.$viewValue', function (newVal, oldVal) {\r\n\t\t\t\tif (newVal) {//when date has a valid date request the List from that date\r\n\t\t\t\t\tvar processReceivedReferrals  = function(results) {\r\n\t\t\t\t\t\tconsole.log(\"Returned  refferals\");\r\n\t\t\t\t\t\tconsole.log(results);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// adjust the returned referrals \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar AlluniqueTeachers = {};\r\n\t\t\t\t\t\tvar results_length = results.length;\r\n\t\t\t\t\t\tvar referrals=[];\r\n\t\t\t\t\t\tfor(var i = 0; i < results_length; i++){\r\n\t\t\t\t\t\t\tvar student  = results[i];\r\n\t\t\t\t\t\t\tvar uniqueTeachers = {};\r\n\t\t\t\t\t\t\tangular.forEach(student.referred, function(referral, $index2){\r\n\t\t\t\t\t\t\t\tuniqueTeachers[referral.UserId] =  referral.user;\r\n\t\t\t\t\t\t\t\tdelete referral.user;\r\n\t\t\t\t\t\t\t\t//AlluniqueTeachers[referral.StudentId] = uniqueTeachers;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tvar teachersNo =  Object.keys(uniqueTeachers).length;\r\n\t\t\t\t\t\t\tvar teachersKeys = Object.keys(uniqueTeachers);\r\n\t\t\t\t\t\t\tfor(var j = 0; j < teachersNo; j++){\r\n\t\t\t\t\t\t\t\tvar studentCopy= angular.copy(student);\r\n\t\t\t\t\t\t\t\tvar studentReferrals = [];\r\n\t\t\t\t\t\t\t\tstudentCopy.teacher = uniqueTeachers[teachersKeys[j]];\r\n\t\t\t\t\t\t\t\tfor(var k =0; k < student.referred.length; k++){\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tvar referral = student.referred[k];\r\n\t\t\t\t\t\t\t\t\tif(referral.assignment.TeacherId === teachersKeys[j])\r\n\t\t\t\t\t\t\t\t\tstudentReferrals.push(referral.assignment);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstudentCopy.referred = studentReferrals;\r\n\t\t\t\t\t\t\t\tstudentCopy.old = true;\r\n\t\t\t\t\t\t\t\treferrals.push(studentCopy);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresults = referrals\r\n\t\t\t\t\t\tconsole.log(results);\r\n\t\t\t\t\t\tvar data = results;\r\n\t\t\t\t\t\tconsole.log(\"Data For the ref table\");\r\n\t\t\t\t\t\tconsole.log(results);\r\n\t\t\t\t\t\t// console.log(data);\r\n\t\t\t\t\t\tif (!data) {\r\n\t\t\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t\t\t\talert(\"No students for current date\");\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$scope.refTable = data;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//                referrals.query({id:newVal},processReceivedReferrals, function(error) {\r\n\t\t\t\t\t//                    console.log(error);\r\n\t\t\t\t\t//                });\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(\"New Date : \" +newVal );\r\n\t\t\t\t\tconsole.log(\"Old Date : \" +oldVal );\r\n\t\t\t\t\t//console.log(\"New Date : \" +formatDate(newVal) );\r\n\t\t\t\t\t$scope.currentDate = newVal;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t/* REFER A STUDENT LOGIC */\r\n\t\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Called when a student is selected or deselected \r\n\t\t\t * no action for now \r\n\t\t\t */\r\n\t\t\t$scope.onSelectedStudent = function(){\r\n\t\t\t\treturn;\r\n\t\t\t\t// add to the list\r\n\t\t\t\tvar alreadyInList = false;\r\n\t\t\t\tfor(var  i = 0 ; i < $scope.refTable.length; i++){\r\n\t\t\t\t\tif($scope.refTable[i].id === $scope.selected.student.user.id){\r\n\t\t\t\t\t\talreadyInList = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!alreadyInList)\r\n\t\t\t\t$scope.refTable.push($scope.selected.student.user);\r\n\t\t\t\telse\r\n\t\t\t\talert('student is already in the list');\r\n\t\t\t\t// clear the field\r\n\t\t\t\t//$scope.selected.student = null;\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Called when teacher is selected or deselected. Retrieves the selected\r\n\t\t\t * teacher's students if a teacher is selected.  If deselected\r\n\t\t\t * set teacherStudents to null\r\n\t\t\t */\r\n\t\t\t$scope.onSelectedTeacher  = function(){\r\n\t\t\t\tif(!$scope.selected.teacher){// if teacher deselected \r\n\t\t\t\t\t$scope.teacherStudents = null;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar teacherId = $scope.selected.teacher.id;\r\n\t\t\t\tstudents.query({teacherId:teacherId},function(results) {\r\n\t\t\t\t\tconsole.log(\"Teacher students\");\r\n\t\t\t\t\tconsole.log(results);\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.teacherStudents = results;\r\n\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t/** New Assignment Modal\r\n\t\t\t * Opens the New Assignment modal and passes in the teacher selected to be available\r\n\t\t\t * in the modal context, on submit makes a post call to assignments\r\n\t\t\t * to add the current assignment to the teacher \r\n\t\t\t */\r\n\t\t\t$scope.openCreateNewAssignment = function(){\r\n\t\t\t\tvar modalInstance = $modal.open({\r\n\t\t\t\t\ttemplateUrl: 'views/modals/addNewAssignmentModal.html',\r\n\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\tcontroller: function ($scope, teacher) {\r\n\t\t\t\t\t\t$scope.teacher = teacher;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresolve: { // variables that get injected into the controller (taken from current $scope)\r\n\t\t\t\t\t\tteacher: function () { return $scope.selected.teacher; },\r\n\t\t\t\t\t}\r\n\t\t\t\t}) // End modalInstace\r\n\t\t\t\t\r\n\t\t\t\tmodalInstance.result.then(function(data){\r\n\t\t\t\t\tassignmentsService.save({teacher:$scope.selected.teacher, assignment:data}, function(response){\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\tvar teacher = $scope.selected.teacher;\r\n\t\t\t\t\t\tresponse.assignment.Id = response.assignment.Id + \"\";\r\n\t\t\t\t\t\t$scope.selected.teacher.assignments.push(response.assignment);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log('assignment successfully added');\r\n\t\t\t\t\t\tconsole.log($scope.selected.teacher.assignments)\r\n\t\t\t\t\t\t}, function(response){\r\n\t\t\t\t\t\tconsole.warn('assignment unseccessfuly added');\r\n\t\t\t\t\t});\r\n\t\t\t\t});\t\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Adds selected.student with selected.assignments to the refTable\r\n\t\t\t * then clears selected.student\r\n\t\t\t */\r\n\t\t\t$scope.addToList = function(){\r\n\t\t\t\tvar selectedAssignments  = $scope.selected.assignments;\r\n\t\t\t\tvar referralToAdd = $scope.selected.student;\r\n\t\t\t\tvar selectedTeacher = $scope.selected.teacher;\r\n\t\t\t\t$http.get('api/classes/'+$scope.selected.student.id).then(function(response){\r\n\t\t\t\t\tvar last = response.data.pop();\r\n\t\t\t\t\t$scope.eightPeriods.push(last)\r\n\t\t\t\t\tconsole.log($scope.eightPeriods);\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\taddAssignmentsToStudent(selectedAssignments, referralToAdd);\r\n\t\t\t\treferralToAdd.teacher = $scope.selected.teacher;\r\n\t\t\t\t$scope.refTable.push(referralToAdd);\r\n\t\t\t\tconsole.log($scope.refTable);\r\n\t\t\t\t$scope.selected.student = null;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Adds assignments to the student object \r\n\t\t\t * @param  {[objects]} assignments\t: list of assignment objects to be added\r\n\t\t\t * @param \t{object} \tstudent\t\t: \r\n\t\t\t */\r\n\t\t\tfunction addAssignmentsToStudent(assignments, student){\r\n\t\t\t\t\r\n\t\t\t\tif(!student.referred){// current student doesnt have any assignments, add all the selected assignments\t\r\n\t\t\t\t\t//  copy assignments into referred\r\n\t\t\t\t\tstudent.referred = assignments.slice();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (var i = 0; i < assignments.length; i++) {\r\n\t\t\t\t\tvar j = false;\r\n\t\t\t\t\tfor (j = 0; j < student.referred.length; j++) {\r\n\t\t\t\t\t\tif (student.referred[j].Id === assignments[i].Id)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (j === student.referred.length)// assignment is not already in the student\r\n\t\t\t\t\tstudent.referred.unshift(assignments[i]);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tdelete student.selected; // delete the selected property;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * POST API call to referrals. adds all the students in the refTable to the \r\n\t\t\t * current date's AEC list.\r\n\t\t\t * Despite the number of assignmets only 1 entry should be loged in \r\n\t\t\t * into user activities with information containig the assignments\r\n\t\t\t */\r\n\t\t\t$scope.submitReferedStudents = function () {\r\n\t\t\t\t// format the data so it an be easily insterted in the database\r\n\t\t\t\tvar studentsReferred = [];\r\n\t\t\t\tangular.forEach($scope.refTable, function(student){\r\n\t\t\t\t\tangular.forEach(student.referred, function(assignment){\r\n\t\t\t\t\t\tif(student.old)\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar referral = {\r\n\t\t\t\t\t\t\tStudentId:student.id, \r\n\t\t\t\t\t\t\tUserId:assignment.TeacherId,\r\n\t\t\t\t\t\t\tAssignmentId:assignment.Id,\r\n\t\t\t\t\t\t\tRefferalStatus : 0,\r\n\t\t\t\t\t\t\tDate :$scope.currentDate,\r\n\t\t\t\t\t\t\tParentNotified : false,\r\n\t\t\t\t\t\t\tStudentNotified : false\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tstudentsReferred.push(referral);\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\tif(studentsReferred.length )\r\n\t\t\t\t\treferrals.save({data:studentsReferred, date:$scope.currentDate}, function(response){\r\n\r\n\t\t\t\t\t\t}, function(response){\r\n\t\t\t\t\t\t\tnotify({message: \"Submit Failed, Please Contact The Admin\",\r\n\t\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t//ServerDataModel.createAECList($scope.currentDate, $scope.refTable);\r\n\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}])\r\n\t\t\r\n}(angular.module('Argus')));","(function (app) {\r\n\t\"use strict\";\r\n\tapp\r\n\t.controller(\"manageAECController\", [\"$scope\",  \"$filter\", \"$modal\", \"referrals\", \"PassesService\", \"StudentsService\", \"notify\",\r\n\t\tfunction ($scope,  $filter, $modal,  referrals,  passes, students, notify) {\r\n\t\t\t$scope.selected = {};\r\n\t\t\t$scope.refTable = [];// table model\r\n\t\t\t$scope.currentDate = new Date();\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t\t* Watch for changes in the datepicker then load the AECList \r\n\t\t\t\t* For the selected Date. Also adjusts data received\r\n\t\t\t\t* to be easily shown in the view\r\n\t\t\t*/\r\n\t\t\t$scope.$watch('form.date.$viewValue', function (newVal) {\r\n\t\t\t\t\r\n\t\t\t\tif (newVal) {//when date has a valid date request the List from that date\r\n\t\t\t\t\t$scope.currentDate = newVal;\r\n\t\t\t\t\tconsole.log(\"newVal = \" + $scope.form.date.$viewValue);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar valids = [];\r\n\t\t\t\t\t$scope.refTable = referrals.query({id:newVal},function(data){\r\n\t\t\t\t\t\t// adjust the returned referrals \r\n\t\t\t\t\t\tfor(var i = 0; i < data.length ; i++){\r\n\t\t\t\t\t\t\tfor(var j = 0 ; j < data[i].referred.length ; j++){\r\n\t\t\t\t\t\t\t\tdata[i].referred[j].id = data[i].referred[j].Id;\r\n\t\t\t\t\t\t\t\tangular.extend(data[i].referred[j], data[i].referred[j].assignment);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(data[i].referred.length !== 0 ){\r\n\t\t\t\t\t\t\t\tvalids.push(data[i])\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdata[i].student.ParentNotified = data[i].student.ParentNotified===\"1\"?true:false;\r\n\t\t\t\t\t\t\tdata[i].student.Notified = data[i].student.Notified===\"1\"?true:false;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(valids);\r\n\t\t\t\t\t\tvalids.$promise = data.$promise;\r\n\t\t\t\t\t\tvalids.$resolved = data.$resolved;\r\n\t\t\t\t\t\tdata = valids;\r\n\t\t\t\t\t\tif (!data.length) {\r\n\t\t\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t\t\t\talert(\"No students for current date\");\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\t$scope.refTable = data;\r\n\t\t\t\t\t\t\t$scope.passesTable = data;\r\n\t\t\t\t\t\t\tangular.forEach($scope.refTable, function (student) {\r\n\t\t\t\t\t\t\t\tstudent.status = [false,true];\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t\t* Makes API call to get a pdf of the AEC passes for the students\r\n\t\t\t\t* assigned AEC for the current date\r\n\t\t\t*/\r\n\t\t\t$scope.getPasses = function(){\r\n\t\t\t\tpasses.pdf({date:$scope.currentDate, param:'AECList'}, function(data){\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tvar fileURL = URL.createObjectURL(data.response);\r\n\t\t\t\t\twindow.open(fileURL);\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t\t* Select the student that is clicked in the table so that the user doesn't \r\n\t\t\t\t* have to type it \r\n\t\t\t\t* @param {int} $index: reftable index of the clicked student \r\n\t\t\t*/\r\n\t\t\t$scope.onSelect = function($index){\r\n\t\t\t\t$scope.selected.student = $scope.refTable[$index];\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t\t* Makes a download prompt of the current AEC list as a csv file\r\n\t\t\t\t* @param {string} text\r\n\t\t\t*/\r\n\t\t\tvar download = function (text) {\r\n\t\t\t\t\r\n\t\t\t\t//console.log(text);\r\n\t\t\t\tvar element = document.createElement('a');\r\n\t\t\t\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n\t\t\t\telement.setAttribute('download', 'info.csv');\r\n\t\t\t\telement.style.display = 'none';\r\n\t\t\t\tdocument.body.appendChild(element);\r\n\t\t\t\telement.click();\r\n\t\t\t\tdocument.body.removeChild(element);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t\t* Converts the current AEC list into a csv text format so it can\r\n\t\t\t\t* be passed to the download method \r\n\t\t\t*/\r\n\t\t\t$scope.AECListCSV = function(){\t\t\r\n\t\t\t\tvar text = 'TeacherFirst,TeacherLast,FirstName,LastName,StudentId, Grade, Assignment\\n';\r\n\t\t\t\tangular.forEach($scope.refTable,  function(item){\r\n\t\t\t\t\tangular.forEach(item.referred, function(referred){\r\n\t\t\t\t\t\ttext +=    referred.user.FirstName +', ' + referred.user.LastName+\",\"+item.FirstName + ',' + item.LastName + ',' + item.student.StudentId + ',';\r\n\t\t\t\t\t\ttext +=   item.student.Grade +', '+ referred.assignment.Name;  \r\n\t\t\t\t\t\ttext +=  ' \\n';\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\tdownload(text);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t/******** MANAGE AEC **********/\r\n\t\t\t// for the next submit functions remove student from list self-reducing list.\r\n\t\t\t// To avoid duplicate profile entries only 1 entry should be created in\r\n\t\t\t// useractions table and all referrals must be changed in referrals \r\n\t\t\t// table (see backend implementation)\r\n\t\t\t/**\r\n\t\t\t\t* PUT API call to change the referral status to present (ReferralStatus 2)\r\n\t\t\t\t* as well as loggin it in the user actions for the profile \r\n\t\t\t\t* @param {object} data: information returned by modal (student)\r\n\t\t\t*/\r\n\t\t\tvar submitPresent = function (data) {\r\n\t\t\t\t// get assignments info from the checkboxes\r\n\t\t\t\tvar student = data.student;\r\n\t\t\t\t//            var completedAssignments = [];\r\n\t\t\t\t//            angular.forEach(student.referred, function (item) {\r\n\t\t\t\t//                if (item.selected)\r\n\t\t\t\t//                    completedAssignments.push({ assignmentId: item.Id, referralId:item.id });\r\n\t\t\t\t//            })\r\n\t\t\t\t// submit information of student  '$scope.selected.student'  to the database\r\n\t\t\t\tangular.forEach(student.referred, function(item){\r\n\t\t\t\t\treferrals.update({'param':'present','id':item.id, 'Reprint':item.reprint, 'Completed':item.selected},{data:item}, function(response){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t}, function(response){\r\n\t\t\t\t\t\tnotify({message: \"Present Failed, Please Contact The Admin\",\r\n\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t//referrals.update({'param':'present','id':student.id},{ data:completedAssignments });\r\n\t\t\t\t\r\n\t\t\t\t//remove element from table; backend works the logic for completeness and incompleteness\r\n\t\t\t\t// and to put the student in AEC Absence list// here or on backend\r\n\t\t\t\tremoveSelectedStudentFromTableAndClear();\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t\t* PUT API call to change the referral status to reschedule (ReferralStatus 2), \r\n\t\t\t\t* rescheduling all the referrals as well as loggin the reschedule \r\n\t\t\t\t* into user actions for the profile \r\n\t\t\t\t* @param {object} data: information returned by modal (date,comment,student,excused)\r\n\t\t\t*/\r\n\t\t\tvar submitReschedule = function (data) {\r\n\t\t\t\t// get info from comment box and DatePicker       \r\n\t\t\t\t// submit information of student '$scope.selected.student' to the database\r\n\t\t\t\tvar student = data.student;\r\n\t\t\t\tangular.forEach(student.referred, function(item){\r\n\t\t\t\t\treferrals.update({\r\n\t\t\t\t\t\tparam:'reschedule',\r\n\t\t\t\t\t\tcomment:data.comment,\r\n\t\t\t\t\t\texcused:data.excused,\r\n\t\t\t\t\t\tnewDate:data.date,\r\n\t\t\t\t\t\toldDate:$scope.currentDate,\r\n\t\t\t\t\t\tid:item.id},{data:item}, function(response){\r\n\t\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\t}, function (response){\r\n\t\t\t\t\t\tnotify({message: \"Reschedule Failed, Please Contact The Admin\",\r\n\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tremoveSelectedStudentFromTableAndClear();\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t\t* PUT API call to change the referral status to clear(ReferralStatus 3), \r\n\t\t\t\t* rescheduling all the referrals as well as loggin the reschedule \r\n\t\t\t\t* into user actions for the profile \r\n\t\t\t\t* @param {object} data: information returned by modal (comment, student)\r\n\t\t\t*/\r\n\t\t\tvar submitClear = function (data) {\r\n\t\t\t\t\r\n\t\t\t\t// submit information of student '$scope.selected.student' to the database\r\n\t\t\t\treferrals.update({param:'clear', comment:data.comment, id:data.student.referred[0].id}, data,\r\n\t\t\t\tfunction(response){\r\n\t\t\t\t\t\r\n\t\t\t\t}, function(response){\r\n\t\t\t\t\t\tnotify({message: \"Clear Failed, Please Contact The Admin\",\r\n\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t});\r\n\t\t\t\t//remove element from table; backend works the logic for completeness and incompleteness\r\n\t\t\t\t// and to put the student in AEC Absence list// here or on backend\r\n\t\t\t\tremoveSelectedStudentFromTableAndClear();\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t\t* PUT API call to log parent notified information for current student\r\n\t\t\t\t* into user actions for the profile. \r\n\t\t\t\t* In the case that parent requested a reschedule $scope.selected student \r\n\t\t\t\t* is changed to the current student and submit reschedule is \r\n\t\t\t\t* on that student, preprocess of data needed(line 193)\r\n\t\t\t\t* to provide necessary info for sumit Reschedule \r\n\t\t\t\t* @param {object} data: information returned by modal (student,reschedule,newDate)\r\n\t\t\t*/\r\n\t\t\tvar submitParentNotified = function (data) {\r\n\t\t\t\tvar rescheduleComment = \"Parent Requested Reschedule\";\r\n\t\t\t\tconsole.log(data.student);\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t// Remove Student if reschedule\r\n\t\t\t\tif (data.reschedule) {\r\n\t\t\t\t\t// sent a post to the reschedule api point\r\n\t\t\t\t\tangular.extend(data,{comment:rescheduleComment,excused:true, oldDate:$scope.currentDate, date:data.newDate});\r\n\t\t\t\t\t$scope.selected.student = data.student;\r\n\t\t\t\t\tsubmitReschedule(data);\r\n\t\t\t\t\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t// Make A post to update the student parent's information \r\n\t\t\t\t\tvar student = data.student.student;\r\n\t\t\t\t\t\r\n\t\t\t\t\tstudents.update({id:data.student.id}, {\r\n\t\t\t\t\t\tParentNotified:student.ParentNotified?1:0,\r\n\t\t\t\t\t\tParentNotifiedComment:student.ParentNotifiedComment,\r\n\t\t\t\t\t\tValidNumber:student.ValidNumber?1:0,\r\n\t\t\t\t\t\tParentSupportive:student.ParentSupportive?1:0,\r\n\t\t\t\t\t\tGuardianPhone : student.GuardianPhone\r\n\t\t\t\t\t},function(response){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}, function(response){\r\n\t\t\t\t\t\tnotify({message: \"Parent Notified Failed, Please Contact The Admin\",\r\n\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t\t* PUT API call to log student notified information for student clicked\r\n\t\t\t\t* \r\n\t\t\t\t* @param {object} ref: student selected\r\n\t\t\t\t* @param {int} $index: refTable index of student selected\r\n\t\t\t*/\r\n\t\t\t$scope.submitStudentNotified = function(ref, $index){\r\n\t\t\t\t\r\n\t\t\t\tvar studentNotified =ref.student.Notified;\r\n\t\t\t\tstudents.update({id:ref.id}, {Notified:!studentNotified?1:0},function(response){\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log($scope.refTable[$index]);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t\t* PUT API call to change the all unprocessed referrals to absent(ReferralStatus 4)\r\n\t\t\t\t* as well as logging the absent into user actions for the profile \r\n\t\t\t*/\r\n\t\t\t$scope.finishManageAEC = function(){\r\n\t\t\t\tangular.forEach($scope.refTable, function(student){\r\n\t\t\t\t\tangular.forEach(student.referred, function(assignment){\r\n\t\t\t\t\t\treferrals.update({'id':assignment.id},\r\n\t\t\t\t\t\t{'param':'absent' }, function(response){\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}, function(response){\r\n\t\t\t\t\t\tnotify({message: \"Finish Failed, Please Contact The Admin\",\r\n\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t$scope.refTable = [];\r\n\t\t\t}\r\n\t\t\t/********************************************** MODALS   **************************/\r\n\t\t\t\r\n\t\t\t/** Present Modal\r\n\t\t\t\t* Opens the present modal and passes in the student selected to be available\r\n\t\t\t\t* in the modal context, calls the submitPresent function when modal\r\n\t\t\t\t* submit button is clicked, does nothing otherwise\r\n\t\t\t*/\r\n\t\t\t$scope.openPresent = function () {\r\n\t\t\t\tvar modalInstance = $modal.open({\r\n\t\t\t\t\ttemplateUrl: 'views/modals/PresentModal.html',\r\n\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\tcontroller: function ($scope, student) {\r\n\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t$scope.changedStatus = function(){\r\n\t\t\t\t\t\t\talert(item.accepted);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresolve: { // variables that get injected into the controller (taken from current $scope)\r\n\t\t\t\t\t\tstudent: function () { return $scope.selected.student; },\r\n\t\t\t\t\t}\r\n\t\t\t\t}) // End modalInstace\r\n\t\t\t\t\r\n\t\t\t\tmodalInstance.result.then(submitPresent, function(){\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/** Reschedule Modal\r\n\t\t\t\t* Opens the Reschedule modal and passes in the student selected to be available\r\n\t\t\t\t* in the modal context, calls submitReschedule function when modal \r\n\t\t\t\t* submit button is clicked,does nothing otherwise\r\n\t\t\t*/\r\n\t\t\t$scope.openReschedule = function () {\r\n\t\t\t\tvar resModal = $modal.open({\r\n\t\t\t\t\ttemplateUrl: 'views/modals/RescheduleModal.html',\r\n\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\tcontroller: function ($scope, student) {\r\n\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t$scope.date = new Date();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$scope.$watch('form.date.$viewValue', function (newValue, oldValue) {\r\n\t\t\t\t\t\t\tif (newValue){ //when date has a valid date request the List from that date\r\n\t\t\t\t\t\t\t\t$scope.date = newValue;\r\n\t\t\t\t\t\t\t\tconsole.log('date changed');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tstudent: function () { return $scope.selected.student; },\r\n\t\t\t\t\t}\r\n\t\t\t\t});// end modalInstance\r\n\t\t\t\t\r\n\t\t\t\tresModal.result.then(submitReschedule);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/** Clear Modal\r\n\t\t\t\t* Opens the Clear modal and passes in the student selected to be available\r\n\t\t\t\t* in the modal context, calls submitClear function when modal \r\n\t\t\t\t* submit button is clicked,does nothing otherwise\r\n\t\t\t*/\r\n\t\t\t$scope.openClear = function (studentInfo) {\r\n\t\t\t\t\r\n\t\t\t\tvar clrModal = $modal.open({\r\n\t\t\t\t\ttemplateUrl: 'views/modals/ClearModal.html',\r\n\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\tcontroller: function ($scope, student ) {\r\n\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t$scope.title = 'clear'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tstudent: function () { return $scope.selected.student; }\r\n\t\t\t\t\t}\r\n\t\t\t\t})// End clrModal\r\n\t\t\t\t\r\n\t\t\t\tclrModal.result.then(submitClear)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/** Parent Notified Modal\r\n\t\t\t\t* Opens the Parent Notified modal and passes in the student selected to be \r\n\t\t\t\t* available in the modal context, as well as the current date. \r\n\t\t\t\t* calls submitParentNotified function when modal submit \r\n\t\t\t\t* button is clicked,does nothing otherwise\r\n\t\t\t\t* @param {object} stu: student selected for parent notified\r\n\t\t\t*/\r\n\t\t\t$scope.parentNotifiedModal = function (stu) {\r\n\t\t\t\tvar parentModal = $modal.open({\r\n\t\t\t\t\ttemplateUrl: \"views/modals/ParentModal.html\",\r\n\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\tcontroller: function ($scope, $modalInstance, student,date) {\r\n\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t$scope.date = date;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$scope.$watch('form.date.$viewValue', function (newValue) {\r\n\t\t\t\t\t\t\tif (newValue) { //when date has a valid date request the List from that date\r\n\t\t\t\t\t\t\t\t$scope.date = newValue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tstudent: function () { return stu },\r\n\t\t\t\t\t\tdate: function(){return $scope.currentDate}\r\n\t\t\t\t\t}\r\n\t\t\t\t})// end modal\r\n\t\t\t\t\r\n\t\t\t\tparentModal.result.then(submitParentNotified,\r\n\t\t\t\tfunction () {\r\n\t\t\t\t\t// change parent notified button it back to what it was\r\n\t\t\t\t\tstu.student.ParentNotified = !stu.student.ParentNotified;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t\t* Removes $scope.selected student from the refTable and then\r\n\t\t\t\t* sets it to null (clear field)\r\n\t\t\t\t* \r\n\t\t\t*/\r\n\t\t\tvar removeSelectedStudentFromTableAndClear = function(){\r\n\t\t\t\tfor (var i = 0; i < $scope.refTable.length; i++)\r\n\t\t\t\tif ($scope.selected.student.id === $scope.refTable[i].id){\r\n\t\t\t\t\t$scope.refTable.splice(i, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t$scope.selected.student = null;\r\n\t\t\t}\r\n\t\t\t}]);\r\n\t\r\n}(angular.module('Argus')));\t\t\t\t\t\t","(function(app){\r\n\t\"use strict\";\r\n\tapp\r\n\t.controller(\"manageAECAbsenceController\", \r\n\t[\"$scope\",  \"$modal\", \"referrals\",\"PassesService\",\"UserActionsService\",'BbyArgusGeneralDBService',\r\n\t\tfunction ($scope, $modal,referrals, passes, useractions, generaldb) {\r\n\t\t\t$scope.selected = {};\r\n\t\t\t$scope.refTable = [];// table model\r\n\t\t\t$scope.currentDate = new Date(); // date on the date picker\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Watch for changes in the datepicker then load the AECAbsence list\r\n\t\t\t */\r\n\t\t\t$scope.$watch('form.date.$viewValue', function (newVal, oldVal) {\r\n\t\t\t\t\r\n\t\t\t\tif (newVal) {//when date has a valid date request the List from that date\r\n\t\t\t\t\t$scope.currentDate = newVal;\r\n\t\t\t\t\tconsole.log(\"newVal = \" + $scope.form.date.$viewValue);\r\n\t\t\t\t\t\r\n\t\t\t\t\treferrals.query({id:newVal, absence:true},function(data){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!data.length) {\r\n\t\t\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t\t\t\talert(\"No students for current date\");\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$scope.refTable = data;\r\n\t\t\t\t\t\t\t$scope.passesTable = data;\r\n\t\t\t\t\t\t\tangular.forEach($scope.refTable, function (student) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tstudent.status = [false, true];\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tgeneraldb.query(function(data){\r\n\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Makes API call to get a pdf of the AECAbsence passes for the students\r\n\t\t\t * assigned AEC for the current date\r\n\t\t\t */\r\n\t\t\t$scope.getPasses = function(){\r\n\t\t\t\t$scope.getPasses = function(){\r\n\t\t\t\t\tpasses.pdf({date:$scope.currentDate, param:'absence'}, function(data){\r\n\t\t\t\t\t\tvar fileURL = URL.createObjectURL(data.response);\r\n\t\t\t\t\t\twindow.open(fileURL);\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Select the student that is clicked in the table so that the user doesn't \r\n\t\t\t * have to type it \r\n\t\t\t * @param {int} $index: reftable index of the clicked student \r\n\t\t\t */\r\n\t\t\t$scope.onSelect = function($index){\r\n\t\t\t\t$scope.selected.student = $scope.refTable[$index];\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Makes a download prompt of the current AEC list as a csv file\r\n\t\t\t * @param {string} text\r\n\t\t\t */\r\n\t\t\tvar download = function (text) {\r\n\t\t\t\t\r\n\t\t\t\tvar element = document.createElement('a');\r\n\t\t\t\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n\t\t\t\telement.setAttribute('download', 'info.csv');\r\n\t\t\t\telement.style.display = 'none';\r\n\t\t\t\tdocument.body.appendChild(element);\r\n\t\t\t\telement.click();\r\n\t\t\t\tdocument.body.removeChild(element);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t/**\r\n\t\t\t * Converts the Kids that were marked with SentOut or Walkout  into a csv text \r\n\t\t\t * format so it can downloaded and Referred to O-Room\r\n\t\t\t * be passed to the download method \r\n\t\t\t */\r\n\t\t\t$scope.oRoomListCSV = function(){\r\n\t\t\t\tuseractions.query({param:'ORoom'}, function(data){\r\n\t\t\t\t\t//headings\r\n\t\t\t\t\tvar text = 'FirstName,LastName,StudentId\\n';\r\n\t\t\t\t\tangular.forEach(data,  function(item){\r\n\t\t\t\t\t\ttext +=  item.FirstName + ',' + item.LastName + ',' + item.UserName;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttext +=  ' \\n';\r\n\t\t\t\t\t})\r\n\t\t\t\t\tdownload(text);\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t/******** MANAGE AEC Absence **********/\r\n\t\t\t// for the next submit functions remove student from list self-reducing list.\r\n\t\t\t// To avoid duplicate profile entries only 1 entry should be created in\r\n\t\t\t// useractions table and all referrals must be changed in referrals \r\n\t\t\t// table (see backend implementation)\r\n\t\t\t/**\r\n\t\t\t * PUT API call to change the referral status to referred (ReferralStatus 0)\r\n\t\t\t * as well as loggin it in the user actions for the profile \r\n\t\t\t * @param {object} data: information returned by modal \r\n\t\t\t * \t(noShow,walkOut, SentOut, schoolAbsent, disciplinary, clear,comment )\r\n\t\t\t */\r\n\t\t\tvar submitComment = function (data) {// data:{comment, noShow, walkOut, sentOut}\r\n\t\t\t\tvar student = $scope.selected.student;\r\n\t\t\t\tvar status = data.noShow?0:data.walkOut?1:data.sentOut?2:data.schoolAbsent?3:data.disciplinary?4:data.clear?5:-1;\r\n\t\t\t\t\r\n\t\t\t\t// submit info of student '$scope.selected.student' to database\r\n\t\t\t\tvar dataToSent = {param:'AbsentComment', comment:data.comment, status:status}\r\n\t\t\t\treferrals.update({id:student.id}, dataToSent);\r\n\t\t\t\t\r\n\t\t\t\tvar indexOfStudent = $scope.refTable.indexOf($scope.selected.student);\r\n\t\t\t\t$scope.refTable.splice(indexOfStudent, 1);\r\n\t\t\t\t$scope.selected.student = null;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/********** MODALS   **********/\t\t\r\n\t\t\t/** Comment Modal\r\n\t\t\t * Opens the Comment modal and passes in the student selected to be available\r\n\t\t\t * in the modal context, calls the SubmitComment function when modal\r\n\t\t\t * submit button is clicked, does nothing otherwise\r\n\t\t\t */\r\n\t\t\t$scope.openComment = function (studentInfo) {\r\n\t\t\t\tvar commentModal = $modal.open({\r\n\t\t\t\t\ttemplateUrl: 'views/modals/CommentAbsenceModal.html',\r\n\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\tcontroller: function ($scope, student) {\r\n\t\t\t\t\t\t$scope.title = \"Comment\";\r\n\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tstudent: function () { return $scope.selected.student; },\r\n\t\t\t\t\t}\r\n\t\t\t\t})// End commentModal\r\n\t\t\t\t\r\n\t\t\t\tcommentModal.result.then(submitComment)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}])\t\r\n}(angular.module('Argus')));","(function(app){\r\n\t\"use strict\";\r\n\tapp\r\n\t.controller(\"studentInfoCtrl\", [\"$scope\", \"students\",  function ($scope, students) {\r\n\t\t$scope.students;  // model for autocomplete\r\n\t\t$scope.toShow = []; //list of profiles to show on the view\r\n\t\t//student information from the database \r\n\t\tstudents.getAllStudents(function(data){\r\n\t\t\t$scope.students = data;\r\n\t\t});\r\n\t\t\r\n\t\t$scope.studentInfo = { name: 'naomi', address: '1600ffdf' }\r\n\t\t;\r\n\t\t$scope.max = 4;\r\n\t\t$scope.profiles = ['', '', '', ''];\r\n\t\t$scope.selected = {};\r\n\t\t$scope.active = 0;\r\n\t\t$scope.onEnter = function () {\r\n\t\t\t// get more information of the selected student \r\n\t\t\tstudents.getStudent({id:$scope.selected.student.Id}, function(data){\r\n\t\t\t\t$scope.selected.student = data;\r\n\t\t\t\t$scope.toShow.push($scope.selected.student)\r\n\t\t\t\t$scope.active++; // increase number of active profiles\r\n\t\t\t\t$scope.selected.student = null; // clear search field\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t//$scope.profiles[$scope.active] = $item; //\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t};\r\n\t\t$scope.remove = function ($index) {\r\n\t\t\t$scope.toShow.splice($index, 1);\r\n\t\t\t//$scope.profiles[$index] = '';\r\n\t\t\t$scope.active--;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}])\t\r\n}(angular.module('Argus')));","(function(app){\r\n\tapp\r\n\t.controller(\"ProfileCtrl\", [\"$scope\",\"students\",\"$http\", function ($scope, students, $http) {\r\n\t\t$scope.schedule = []; // holds  student's schedule\r\n\t\t$scope.activities = []; // holds student'activities\r\n\t\t$scope.checks = [];\r\n\t\t$scope.currentDate = new Date();\r\n\t\t\r\n\t\t$scope.$watch('checks', function (n, o) {\r\n\t\t\tconsole.log(n);\r\n\t\t},true)\r\n\t\t\r\n\t\t//console.log($scope.student)// contains the student to display\r\n\t\t\r\n\t\t$scope.$watch('student', function (newVal, oldVal) {\r\n\t\t\tconsole.info('student changed')\r\n\t\t\tconsole.log(newVal);\r\n\t\t\t$scope.schedule = newVal.professor_classes;\r\n\t\t\tvar parentName = newVal.GuardianName?newVal.GuardianName.split(',') :[\"No\", \" name\"] ;\r\n\t\t\t$scope.parents = [{fn:parentName[0], ln: parentName[1], phone:newVal.GuardianPhone  ||\"none\" , mphone:'None', email:'None' }]\r\n\t\t\t$http.get('api/classes/'+newVal.Id).then(function(response){\r\n\t\t\t\t$scope.schedule = response.data;\r\n\t\t\t\tconsole.log($scope.schedule);\r\n\t\t\t})\r\n\t\t\t$scope.activities = newVal.user.activities_affected;\r\n\t\t\tangular.forEach($scope.activities, function(act){\r\n\t\t\t\tact.ActionType = parseInt(act.ActionType);\r\n\t\t\t\tswitch(act.ActionType){\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\tact.activity = 'Referred';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\tact.activity = 'Present';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\tact.activity = 'Reschedule';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3: \r\n\t\t\t\t\tact.activity = ' Cleared';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\tact.activity = 'Absent';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\tact.activity = 'Absent Processed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\tact.activity = 'Parent Notified';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\tact.activity = 'unknown' + act.ActionType;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\t//        studentActivitiesService.getAll()\r\n\t\t//        .then(function (data) {\r\n\t\t//            $scope.activities = data;\r\n\t\t//        }, function (err) {\r\n\t\t//            console.log(err);\r\n\t\t//        })\r\n\t\t/*  Grab All information from database */\r\n\t\t\r\n\t\t/*******************  Left Side Controllers ***************************/\r\n\t\t\r\n\t\t//        classesService.get($scope.student.ID)\r\n\t\t//            .success(function (data) {\r\n\t\t//                $scope.schedule = data;\r\n\t\t//            })\r\n\t\t$scope.schedule = [\r\n\t\t\t{ period: 1, className: \"Integrated Math III\", teacher: \"Mr. Brandon\", room: 'A' },\r\n\t\t\t{ period: 1, className: \"Advanced Math II\", teacher: \"Mr. Brandon\", room: 'A' },\r\n\t\t\t{ period: 1, className: \"Integrated Math III\", teacher: \"Mr. Brandon\", room: 'B' },\r\n\t\t\t{ period: 1, className: \"Integrated Math III\", teacher: \"Mr. Brandon\", room: 'B+' },\r\n\t\t\t{ period: 1, className: \"Integrated Math III\", teacher: \"Mr. Brandon\", room: 'C' },\r\n\t\t\t{ period: 1, className: \"Integrated Math III\", teacher: \"Mr. Brandon\", room: 'C-' }\r\n\t\t];\r\n\t\t$scope.colors = ['bg-green', 'bg-info', ];\r\n\t\t$scope.parents = [\r\n\t\t\t{ Fn: \"Max\", ln: \"Quinteros\", phone: \"6192451818\", mphone: \"\", email: \"parent@argus.com\" },\r\n\t\t\t{ Fn: \"Max\", ln: \"Quinteros\", phone: \"6192451818\", mphone: \"\", email: \"max@argus.com\" }\r\n\t\t];\r\n\t\t$scope.tog = 0;\r\n\t\t$scope.click = function (index) {\r\n\t\t\t$scope.tog = index;\r\n\t\t};\r\n\t\t\r\n\t\t/*******************  Right Side Controllers*********************/\r\n\t\t//        studentActivitiesService.get($scope.student.ID)\r\n\t\t//            .success(function (data) {\r\n\t\t//                if (data) {\r\n\t\t//                    $scope.activities = data;\r\n\t\t//                } else {\r\n\t\t//                    $scope.activities = [];\r\n\t\t//                }\r\n\t\t//            })\r\n\t\t\r\n\t\t$scope.currentDate;\r\n\t\t$scope.$watch(\"profileForm.date.$modelValue\", function (newVal, oldVal) {\r\n\t\t\t//console.info(\"date changedto :\" + newVal)\r\n\t\t})\r\n\t\t\r\n\t\t\r\n\t\t$scope.showDetail = false;\r\n\t\t$scope.toggleShowDetail = function (index) {\r\n\t\t\t$scope.showDetail = !$scope.showDetail;\r\n\t\t\t$scope.selected = $scope.activities[index];\r\n\t\t};\r\n\t\t\r\n\t\t$scope.showComment = false;\r\n\t\t$scope.toggleShowComment = function (index) {\r\n\t\t\t$scope.showComment = !$scope.showComment;\r\n\t\t\t$scope.selected = $scope.activities[index];\r\n\t\t}\r\n\t\t\r\n\t\t$scope.addComment = function () {\r\n\t\t\tvar entry =\r\n\t\t\t{ date: formatDate(new Date), activity: \"comment\", Comment: $scope.comment, Staff: \" Montes\" }\r\n\t\t\t$scope.activities.push(entry)\r\n\t\t\t$scope.comment = '';\r\n\t\t}\r\n\t\t$scope.activities = [\r\n\t\t\t{ date: \"2015-01-15\", activity: \"AEC\" },\r\n\t\t\t{ date: \"2015-01-21\", activity: \"ARC\" },\r\n\t\t\t{ date: \"2015-01-22\", activity: \"AEC Clear\" },\r\n\t\t\t{ date: \"2015-04-03\", activity: \"AEC Reschedule\" },\r\n\t\t\t{ date: \"2015-05-03\", activity: \"ARC Clear\" },\r\n\t\t\t{ date: \"2015-06-21\", activity: \"AEC Reschedule\" },\r\n\t\t\t{ date: \"2015-06-01\", activity: \"ARC\" },\r\n\t\t\t{ date: \"2015-08-03\", activity: \"ARC\" },\r\n\t\t\t{ date: \"2015-12-25\", activity: \"AEC\" },\r\n\t\t];\r\n\t\t\r\n\t\tfunction formatDate(date) {\r\n\t\t\treturn (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();\r\n\t\t}\r\n\t\t\r\n\t\t$scope.filter = [];\r\n\t\t$scope.getActivities = function () {\r\n\t\t\treturn ($scope.activities || []).map(function (w) {\r\n\t\t\t\treturn w.activity;\r\n\t\t\t\t}).filter(function (w, idx, arr) {\r\n\t\t\t\treturn arr.indexOf(w) === idx;\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\t$scope.filterByCategory = function (act) {\r\n\t\t\treturn $scope.filter[act.activity] || noFilter($scope.filter);\r\n\t\t}// date selected on the checkboxes;\r\n\t\tfunction noFilter(filterObj) {\r\n\t\t\tfor (var key in filterObj) {\r\n\t\t\t\tif (filterObj[key]) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}])\r\n\t\r\n}(angular.module('Argus')));","(function (app) {\n\t\"use strict\";\n\tapp.controller('NavigationCtrl', function () {\n\t\t\tvar path = \"../Client/Views/dashItems/\";\n\t\t\tvar vm = this;\n\t\t\t/**\n\t\t\t * Navigation bar places with their links and icons\n\t\t\t */\n\t\t\tvm.tabs = [ \n\t\t\t\t{\n\t\t\t\t\tid: 'Dashboard',\n\t\t\t\t\ttext: ['Dashboard', 'System'],\n\t\t\t\t\troute: path + 'referal.html',\n\t\t\t\t\tlink: \"admin1.dashboard\",\n\t\t\t\t\ticon: 'dashboard fa-2x'\n\t\t\t\t}, {\n\t\t\t\t\tid: 'Referral System',\n\t\t\t\t\ttext: ['Referral', 'System'],\n\t\t\t\t\troute: path + 'referral.html',\n\t\t\t\t\tlink: \"admin1.referral\",\n\t\t\t\t\ticon: 'eye fa-2x'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'AEC List',\n\t\t\t\t\ttext: ['AEC', 'List'],\n\t\t\t\t\troute: path + 'manageAEC.html',\n\t\t\t\t\tlink: \"admin1.AECList\",\n\t\t\t\t\ticon: 'list-alt fa-2x'\n\t\t\t\t}, {\n\t\t\t\t\tid: 'Absence List',\n\t\t\t\t\ttext: ['Absence', 'List'],\n\t\t\t\t\troute: path + 'manageAECAbsence.html',\n\t\t\t\t\tlink: \"admin1.pending\",\n\t\t\t\t\ticon: 'exclamation fa-2x'\n\t\t\t\t}, {\n\t\t\t\t\tid: 'Student Data',\n\t\t\t\t\ttext: ['Student', 'Data'],\n\t\t\t\t\troute: path + 'studentInfo.html',\n\t\t\t\t\tlink: \"admin1.studentData\",\n\t\t\t\t\ticon: 'user fa-2x'\n\t\t\t\t}\n\t\t\t\t//\t\t, {\n\t\t\t\t//            id: 'Create Student Pass',\n\t\t\t\t//            text: ['Create', 'Pass'],\n\t\t\t\t//            route: path + \"multiplePasses.html\",\n\t\t\t\t//            link: \"admin1.createStudentPass\",\n\t\t\t\t//            icon: 'file fa-2x'\n\t\t\t\t//        }\n\t\t\t];\n\t\t});\n}(angular.module('Argus')));"],"sourceRoot":"/source/"}