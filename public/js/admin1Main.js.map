{"version":3,"sources":["DashboardCtrl.js","NavigationCtrl.js","routing.js","ORoomCoordinatorReferralCtrl.js","ISSLiveCtrl.js","LiveActivityCtrl.js","LunchDetentionLiveCtrl.js","OSSLiveCtrl.js","OroomLiveCtrl.js","ProfileCtrl.js","ISSCtrl.js","LunchDetentionAttendanceCtrl.js","OSSCtrl.js","OroomAttendanceCtrl.js","attendanceRostersCtrl.js","ReportsAtRiskCtrl.js","ReportsCtrl.js","ReportsEODCtrl.js","ReportsOroomActivityCtrl.js","ReportsProgressionCtrl.js","issFollowupListCtrl.js","issListCtrl.js","navigation.js","ActivitiesCtrl.js","ReferralsCtrl.js","Routing.js","UsersCtrl.js","ManageReteachAbsenceCtrl.js","ManageReteachCtrl.js","ReteachReferralCtrl.js","ManageASPStudentsDunbarCtrl.js","ManageASPStudentsEstacadoCtrl.js","ManageCtrl.js","ManageAECAbsenceCtrl.js","ManageAECCtrl.js","ReferralCtrl.js","oRoomActivityLogAdminCtrl.js","StudentDataCtrl.js"],"names":[],"mappingshhbrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ADvnnjtzlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrjzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzttxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ApBzqBpKA;AACA;AACA;AACA;AACA;AACA;AtBLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AuBzrtZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A1BzjlhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A4BntxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrhjgthXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"admin1Main.js","sourcesContent":["/* global angular */\r\n\r\n(function(app){\r\n\t\"use strict\";  \r\n\tapp.controller('DashReteachCtrl', ['$scope', '$modal', 'referrals', 'notify',\r\n\tfunction($scope, $modal, referrals, notify){\r\n\t\t\r\n\t\t \r\n\t\t$scope.studentsToday =0;\r\n\t\tvar date = Date();\r\n\t\t$scope.counters = {};\r\n\t\tvar dateStr = date.substring(4,7) + ' '+date.substring(8,10) + ' '+date.substring(11,15);\r\n\t\treferrals.query({id:dateStr},function(data){\r\n\t\t\t$scope.counters.aec = data.length;\r\n\t\t});\r\n\t\treferrals.query({id:dateStr, absence:true},function(data){\r\n\t\t\t$scope.counters.aecAbsent = data.length;\r\n\t\t});\r\n\t\t\r\n\t\t$scope.downloadEODReport =function(){\r\n\t\t\t//notify({message:'t'});\r\n\t\t\treturn;\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Opens modal for average attendance\r\n\t\t */\r\n\t\t$scope.openAverageAttendance = function () {\r\n\t\t\t$scope.studentsToday  = 0;\r\n\t\t\t$scope.FollowUp = 0;\r\n\t\t\t$scope.averageAttendance = 0;\r\n\t\t\t$scope.rating = 0;\r\n\t\t\t\r\n\t\t\tvar averageAttendanceModal = $modal.open({\r\n\t\t\t\ttemplateUrl: 'averageAttendanceModal.html',\r\n\t\t\t\tsize: 'lg',\r\n\t\t\t\tcontroller: function ($scope, $modalInstance, graphOptions, graphData, $timeout) {\r\n\t\t\t\t\t$scope.graphOptions = graphOptions;\r\n\t\t\t\t\t$scope.graphData = graphData;\r\n\t\t\t\t\t\r\n\t\t\t\t\t$timeout(function () {\r\n\t\t\t\t\t\t$scope.drawGraph = true;\r\n\t\t\t\t\t}, 100);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.cancel = function () { $modalInstance.dismiss('cancel'); };\r\n\t\t\t\t},\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tgraphOptions : function () { return $scope.lineOptions; },\r\n\t\t\t\t\tgraphData: function () { return $scope.lineData; }\r\n\t\t\t\t}\r\n\t\t\t});// End assignmentsModal\r\n\t\t};\r\n\t\t/**\r\n\t\t * Opens Modal for Rating's Modal\r\n\t\t */\r\n\t\t$scope.openRating = function () {\r\n\t\t\tvar ratingsModal = $modal.open({\r\n\t\t\t\ttemplateUrl: 'ratingsModal.html',\r\n\t\t\t\tsize: 'lg',\r\n\t\t\t\tcontroller: function ($scope, $modalInstance, graphOptions, graphData, $timeout) {\r\n\t\t\t\t\t$scope.graphOptions = graphOptions;\r\n\t\t\t\t\t$scope.graphData = graphData;\r\n\t\t\t\t\t\r\n\t\t\t\t\t$timeout(function () {\r\n\t\t\t\t\t\t$scope.drawGraph = true;\r\n\t\t\t\t\t}, 100);\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.cancel = function () { $modalInstance.dismiss('cancel'); };\r\n\t\t\t\t},\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tgraphOptions : function () { return $scope.lineOptions; },\r\n\t\t\t\t\tgraphData: function () { return $scope.lineData; }\r\n\t\t\t\t}\r\n\t\t\t});// End assignmentsModal\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Data for Line chart\r\n\t\t */\r\n\t\t$scope.lineData = {\r\n\t\t\tlabels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Example dataset\",\r\n\t\t\t\t\tfillColor: \"rgba(185, 35, 34, .5)\",\r\n\t\t\t\t\tstrokeColor: \"rgba(185, 35, 34, .8)\",\r\n\t\t\t\t\tpointColor: \"#B92322\",\r\n\t\t\t\t\tpointStrokeColor: \"#fff\",\r\n\t\t\t\t\tpointHighlightFill: \"#fff\",\r\n\t\t\t\t\tpointHighlightStroke: \"rgba(220,220,220,1)\",\r\n\t\t\t\t\tdata: [0, 0, 0, 0, 0, 0, 0]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * Options for Line chart\r\n\t\t */\r\n\t\t$scope.lineOptions = {\r\n\t\t\tscaleShowGridLines: true,\r\n\t\t\tscaleGridLineColor: \"rgba(0,0,0,.05)\",\r\n\t\t\tscaleGridLineWidth: 1,\r\n\t\t\tbezierCurve: false,\r\n\t\t\tbezierCurveTension: 0.4,\r\n\t\t\tpointDot: true,\r\n\t\t\tpointDotRadius: 4,\r\n\t\t\tpointDotStrokeWidth: 1,\r\n\t\t\tpointHitDetectionRadius: 20,\r\n\t\t\tdatasetStroke: true,\r\n\t\t\tdatasetStrokeWidth: 2,\r\n\t\t\tdatasetFill: true\r\n\t\t};\r\n\t\t/**\r\n\t\t * Data for Doughnut chart\r\n\t\t */\r\n\t\t$scope.doughnutData = [\r\n\t\t\t{\r\n\t\t\t\tvalue: 300,\r\n\t\t\t\tcolor: \"#2f4050\",\r\n\t\t\t\thighlight: \"#1ab394\",\r\n\t\t\t\tlabel: \"App\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalue: 50,\r\n\t\t\t\tcolor: \"#2f4060\",\r\n\t\t\t\thighlight: \"#1ab394\",\r\n\t\t\t\tlabel: \"Software\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalue: 100,\r\n\t\t\t\tcolor: \"#2f4070\",\r\n\t\t\t\thighlight: \"#1ab394\",\r\n\t\t\t\tlabel: \"Laptop\"\r\n\t\t\t}\r\n\t\t];\r\n\t\t\r\n\t\t/**\r\n\t\t * Options for Doughnut chart\r\n\t\t */\r\n\t\t$scope.doughnutOptions = {\r\n\t\t\tsegmentShowStroke: true,\r\n\t\t\tsegmentStrokeColor: \"#fff\",\r\n\t\t\tsegmentStrokeWidth: 2,\r\n\t\t\tpercentageInnerCutout: 45, // This is 0 for Pie charts\r\n\t\t\tanimationSteps: 100,\r\n\t\t\tanimationEasing: \"easeOutBounce\",\r\n\t\t\tanimateRotate: true,\r\n\t\t\tanimateScale: false\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * List of the techer's tutors if any\r\n\t\t */\r\n\t\t$scope.teachersTeam = [\r\n\t\t\t{fn:\"Adrian Omar\", ln:\"Galicia Mendez\", subjects:[\"Math\", \"Physics\",\"Spanish\"], days:[\"M\",\"W\", \"Sat\"], rate:9.5},\r\n\t\t\t{fn:\"Brandon\", ln:\"Hernandez\", subjects:[\"Math\", \"Physics\",\"Chemistry\", \"Biology\"], days:[\"T\",\"Th\", \"F\"], rate:8.9},\r\n\t\t\t{fn:\"Jose\", ln:\"Martinez\", subjects:[\"Math\", \"Physics\",\"Computer Science\"], days:[\"M\",\"W\", \"Sat\"], rate:2.1}\r\n\t\t];\r\n\t\t\r\n\t}]);\r\n}(angular.module('Argus')));","/* global angular */\n\n(function (app) {\n\t\"use strict\";\n\tapp.controller('NavigationASPCtrl', function () {\n\t\tvar path = \"../Client/Views/dashItems/\";\n\t\tvar vm = this;\n\t\t/**\n\t\t * Navigation bar places with their links and icons\n\t\t */\n\t\tvm.tabs = [\n//\t\t\t{\n//\t\t\t\tid: 'Dashboard',\n//\t\t\t\tlink: \"asp.dashboard\",\n//\t\t\t\ticon: 'dashboard fa-2x'\n//\t\t\t}, \n{\n\t\t\t\tid: 'Attendance',\n\t\t\t\tlink: \"asp.manage\",\n\t\t\t\ticon: 'eye fa-2x'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'Manage Students',\n\t\t\t\tlink: \"asp.manageStudents\",\n\t\t\t\ticon: 'list-alt fa-2x'\n\t\t\t}\n//\t\t\t, {\n//\t\t\t\tid: 'Follow-up List',\n//\t\t\t\tlink: \"asp.pending\",\n//\t\t\t\ticon: 'exclamation fa-2x'\n//\t\t\t}, {\n//\t\t\t\tid: 'Student Data',\n//\t\t\t\tlink: \"asp.studentData\",\n//\t\t\t\ticon: 'user fa-2x'\n//\t\t\t}\n\t\t];\n\t});\n}(angular.module('Argus')));","/* global angular */\r\n\r\n(function (app) {\r\n\t\"use strict\";\r\n\tapp.config(['$stateProvider', '$urlRouterProvider', '$ocLazyLoadProvider', '$provide',\r\n\t\tfunction ($stateProvider, $urlRouterProvider, $ocLazyLoadProvider, $provide ) {\r\n//\t\t\tvar user = JSON.parse(localStorage.getItem('user'));\r\n//\t\t\tvar schoolId = user.SchoolId;\r\n\t\t\t$stateProvider\r\n\t\t\t\t.state('asp', {\r\n\t\t\t\t\tabstract: true,\r\n\t\t\t\t\turl: \"/asp\",\r\n\t\t\t\t\ttemplateUrl: \"views/common/contentArgus.html\",\r\n\t\t\t\t\tcontroller: \"NavigationASPCtrl\",\r\n\t\t\t\t\tcontrollerAs: 'navigation',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/chartJs/Chart.min.js', 'js/plugins/footable/footable.all.min.js', 'css/plugins/footable/footable.core.css']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'angles',\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/chartJs/angles.js']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/footable/footable.all.min.js', 'css/plugins/footable/footable.core.css']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'ui.footable',\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/footable/angular-footable.js']\r\n\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\tinsertBefore: '#loadBefore',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/fullcalendar/fullcalendar.css', 'js/plugins/fullcalendar/fullcalendar.min.js', 'js/plugins/fullcalendar/gcal.js']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'ui.calendar',\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/fullcalendar/calendar.js']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tinsertBefore: '#loadBefore',\r\n\t\t\t\t\t\t\t\t\tname: 'localytics.directives',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/chosen/chosen.css', 'js/plugins/chosen/chosen.jquery.js', 'js/plugins/chosen/chosen.js']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'cgNotify',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/angular-notify/angular-notify.min.css', 'js/plugins/angular-notify/angular-notify.min.js']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'ui.slimscroll',\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/slimscroll/angular.slimscroll.js']\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.state('asp.dashboard', {\r\n\t\t\t\t\turl: \"/dashboard\",\r\n\t\t\t\t\ttemplateUrl: 'views/aspcoordinator/dashboard.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Dashboard'},\r\n\t\t\t\t\tcontroller: \"DashAdmin2Ctrl\",\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/d3/d3.min.js', \"js/plugins/jquery-tipsy/jquery.tipsy.js\", \"css/plugins/gauge/gauge_small.css\", \"css/plugins/gauge/gauge.css\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.state('asp.manage', {\r\n\t\t\t\t\turl: \"/manage\",\r\n\t\t\t\t\ttemplateUrl: 'views/aspcoordinator/manage.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Attendance'},\r\n\t\t\t\t\tcontroller: 'ManageCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.state('asp.manageStudents', {\r\n\t\t\t\t\turl: \"/ManageStudents\",\r\n\t\t\t\t\ttemplateUrl: /*schoolId === 2? 'views/aspcoordinator/manageStudentsDunbar.html':*/'views/aspcoordinator/manageStudentsEstacado.html',\r\n\t\t\t\t\tdata: {pageTitle: 'ASP Students'},\r\n\t\t\t\t\tcontroller: /*schoolId === 2? 'ManageASPStudentsDunbarCtrl':*/'ManageASPStudentsEstacadoCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t});\r\n//\t\t\t\t.state('asp.pending', {\r\n//\t\t\t\t\turl: \"/pending\",\r\n//\t\t\t\t\ttemplateUrl: 'views/sharedItems/manageAECabsence.html',\r\n//\t\t\t\t\tdata: {pageTitle: 'Pending'},\r\n//\t\t\t\t\tcontroller: 'manageAECAbsenceController',\r\n//\t\t\t\t\tresolve: {\r\n//\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n//\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n//\t\t\t\t\t\t\t\t{\r\n//\t\t\t\t\t\t\t\t\tname: 'datePicker',\r\n//\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n//\t\t\t\t\t\t\t\t}\r\n//\t\t\t\t\t\t\t]);\r\n//\t\t\t\t\t\t}\r\n//\t\t\t\t\t}\r\n//\t\t\t\t})\r\n\t\t\t\t\r\n\r\n\t\t}]);\r\n\r\n\r\n}(angular.module('Argus')));","/* global angular */\n\n(function (app) {\n\tapp.controller('ORoomCoordinatorReferralCtrl',\n\t\t['$scope', '$modal', 'notify', 'StudentsService', 'teachers', 'DevService', 'LunchService', 'OroomService', 'ISSService', 'CountersService',\n\t\t\tfunction ($scope, $modal, notify, students, teachers, dev, lunchs, orooms, isss, counters) {\n\n\t\t\t\t$scope.selected = {};\n\t\t\t\t$scope.schoolStudents = students.query({admin: true, light: true}, function () {\n\t\t\t\t}, function (error) {\n\t\t\t\t\tdev.openError(error);\n\t\t\t\t});\n\n\t\t\t\t$scope.teachers = teachers.query();\n\n\t\t\t\t$scope.assignLunch = function () {\n\t\t\t\t\tvar modalInstance = $modal.open({\n\t\t\t\t\t\ttemplateUrl: 'views/modals/lunchDetentionModal.html',\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t\tcontroller: function ($scope, student, PeriodsService) {\n\t\t\t\t\t\t\t$scope.periods = PeriodsService.query();\n\t\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tstudent: function () {\n\n\n\t\t\t\t\t\t\t\treturn $scope.selected.student;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tmodalInstance.result.then(function () {// on SUBMIT\n\t\t\t\t\t\t// post the comment and other things to the database \n\t\t\t\t\t\tvar student = $scope.selected.student;\n\t\t\t\t\t\tvar urlParams = {};\n\t\t\t\t\t\tvar payload = {\n\t\t\t\t\t\t\tStudentId: student.Id,\n\t\t\t\t\t\t\tPeriodId: student.period ? student.period.Id : 0,\n\t\t\t\t\t\t\tTardyTime: student.tardyTime\n\t\t\t\t\t\t};\n\n\n\t\t\t\t\t\tlunchs.save(urlParams, payload, function (data) {\n\t\t\t\t\t\t\tnotify('success');\n\t\t\t\t\t\t}, dev.openError);\n\n\t\t\t\t\t\t$scope.selected.student = null;\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t$scope.assignORoom = function () {\n\t\t\t\t\tvar modalInstance = $modal.open({\n\t\t\t\t\t\ttemplateUrl: 'views/modals/assignOroomModal.html',\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t\tcontroller: function ($scope, PeriodsService, student, teachers) {\n\t\t\t\t\t\t\t$scope.periods = PeriodsService.query();\n\t\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t\t$scope.teachers = teachers;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\t\treturn $scope.selected.student;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tteachers: function () {\n\t\t\t\t\t\t\t\treturn $scope.teachers;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tmodalInstance.result.then(function () {// on SUBMIT\n\t\t\t\t\t\tvar student = $scope.selected.student;\n\t\t\t\t\t\tconsole.log(student);\n\t\t\t\t\t\t// post the comment and other things to the database \n\n\t\t\t\t\t\tvar payload = {\n\t\t\t\t\t\t\t//Date:$scope.currentDate,\n\t\t\t\t\t\t\tStudentId: student.Id,\n\t\t\t\t\t\t\tTeacherId: student.teacher ? student.teacher.id : 0,\n\t\t\t\t\t\t\tReferralType: \"First Time - Teacher\",\n\t\t\t\t\t\t\tComment: student.comment\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\torooms.save({ormlist: true}, payload, function () {\n\t\t\t\t\t\t\tnotify('success');\n\t\t\t\t\t\t}, dev.openError);\n\n\t\t\t\t\t\t$scope.selected.student = null;\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t$scope.assignISS = function () {\n\t\t\t\t\tvar modalInstance = $modal.open({\n\t\t\t\t\t\ttemplateUrl: 'views/modals/ISSReferralAdminModal.html',\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t\tcontroller: function ($scope, student, PeriodsService) {\n\t\t\t\t\t\t\t$scope.periods = PeriodsService.query();\n\t\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\t\treturn $scope.selected.student;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tmodalInstance.result.then(function () {// on SUBMIT\n\t\t\t\t\t\tvar student = $scope.selected.student;\n\t\t\t\t\t\t// post the comment and other things to the database \n\t\t\t\t\t\tisss.save({\n\t\t\t\t\t\t\tStudentId: student.Id,\n\t\t\t\t\t\t\tReferralTypeId: 10,\n\t\t\t\t\t\t\tActionType: 21,\n\t\t\t\t\t\t\tComment: student.comment\n\t\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\t\tnotify(data.msg);\n\t\t\t\t\t\t}, dev.openError);\n\n\t\t\t\t\t\t$scope.selected.student = null;\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t$scope.changeAndComment = function () {\n\t\t\t\t\tvar modalInstance = $modal.open({\n\t\t\t\t\t\ttemplateUrl: 'views/modals/oRoomCoordinatorUpdateAdminModal.html',\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t\tcontroller: function ($scope, student) {\n\t\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t\tconsole.log(student);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\t\treturn students.get({id: $scope.selected.student.Id}, function (data) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t$scope.selected.student.counters = data.counters;\n\t\t\t\t\t\t\t\t\treturn $scope.selected.student;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn $scope.selected.student;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tmodalInstance.result.then(function (data) {// on SUBMIT\n\t\t\t\t\t\tvar item = $scope.selected.student;\n\t\t\t\t\t\t// post the comment and other things to the database \n\t\t\t\t\t\tvar urlParams = {\n\t\t\t\t\t\t\tid: item.Id\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tcounters.update(urlParams,\n\t\t\t\t\t\t\t{counters: item.counters,\n\t\t\t\t\t\t\t\tComment: data.comment\n\t\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\tnotify('success');\n\t\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t\tdev.openError(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$scope.selected.student = null;\n\t\t\t\t\t});\n\t\t\t\t};\n\n\n\t\t\t}]);\n}(angular.module('Argus')));\n\n","/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\n/* global angular */\n\n(function (app) {\n\tapp.controller('ISSLiveCtrl', ['$scope', '$interval','notify','ISSService',\n\t\tfunction ($scope, $interval, notify, isss) {\n\t\t\t\n\t\t\tvar intervalPromise = $interval(function () {\n\t\t\t\tgetISSList();\n\t\t\t}, 2000);\n\t\t\t\n\t\t\t$scope.$on('$destroy', function(){\n\t\t\t\t$interval.cancel(intervalPromise);\n\t\t\t});\n\t\t\t\n\t\t\tfunction getISSList(date){\n\t\t\t\tisss.query({date:date}, function (data) {\n\t\t\t\t\t$scope.iss = data;\n\t\t\t\t});\n\t\t\t};\n\t\t\t\n\t\t}]);\n}(angular.module('Argus')));","/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/* global angular */\n\n(function (app) {\n\tapp.controller('oRoomActivityLogCtrl',\n\t\t['$scope', 'notify','$interval','FormatTimeService',\n\t\t\tfunction ($scope, notify, $interval, time) {\n\t\t\t\t$scope.currentList = 'oroom';\n\t\t\t\t$scope.currentList = 'oroom';\n\t\t\t\t$scope.refTable = [];\n\t\t\t\t$scope.lunchTableA = [];\n\t\t\t\t$scope.lunchTableB = [];\n\t\t\t\t$scope.iss = [];\n\t\t\t\t$scope.oss = [];\n\t\t\t\t$scope.currentDate = formatDate(new Date());\n\t\t\t\t\n\t\t\t\t$interval(function(){\n\t\t\t\t\t$scope.currentTime = time.formatAMPM(new Date());\n\t\t\t\t}, 1000);\n\t\t\t\t\n\t\t\t\t\n\t\t\t}]);\n}(angular.module('Argus')));","/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\n/* global angular */\n\n(function (app) {\n\tapp.controller('LunchDetentionLiveCtrl', ['$scope', '$interval', 'notify', 'DevService', 'LunchService',\n\t\tfunction ($scope, $interval, notify, dev, lunchs) {\n\n\t\t\t$scope.lunchTableA = [];\n\t\t\t$scope.lunchTableB = [];\n\n\t\t\tvar intervalPromise = $interval(function () {\n\t\t\t\tgetLunchLists();\n\t\t\t}, 2000);\n\n\n\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t$interval.cancel(intervalPromise);\n\t\t\t});\n\n\t\t\tfunction getLunchLists(date) {\n\t\t\t\tlunchs.query({date: date}, function (data) {\n\t\t\t\t\t// separate the lists by the lunch type of the students\n\t\t\t\t\t$scope.lunchTableA = [];\n\t\t\t\t\t$scope.lunchTableB = [];\n\t\t\t\t\t$scope.lunchTableC = [];\n\t\t\t\t\t$scope.lunchTable = data;\n\t\t\t\t\tangular.forEach(data, function (item) {\n\t\t\t\t\t\tif (item.LunchType === 'A Lunch')\n\t\t\t\t\t\t\t$scope.lunchTableA.push(item);\n\t\t\t\t\t\telse if (item.LunchType === 'B Lunch')\n\t\t\t\t\t\t\t$scope.lunchTableB.push(item);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t$scope.lunchTableC.push(item);\n\n\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t}\n\t\t\t;\n\t\t}]);\n}(angular.module('Argus')));","/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/* global angular */\n\n(function (app) {\n\tapp.controller('OSSLiveCtrl', ['$scope', '$interval','notify', 'OSSService',\n\t\tfunction ($scope, $interval, notify, osss) {\n\t\t\t\n\t\t\tvar intervalPromise = $interval(function () {\n\t\t\t\tgetOSSList(); \n\t\t\t}, 2000);\n\t\t\t\n\t\t\t$scope.$on('$destroy', function(){\n\t\t\t\t$interval.cancel(intervalPromise);\n\t\t\t});\n\t\t\t\n\t\t\tfunction getOSSList(date){\n\t\t\t\tosss.query({date:date}, function (data) {\n\t\t\t\t\t$scope.oss = data;\n\t\t\t\t});\n\t\t\t};\n\t\t\t\n\t\t}]);\n}(angular.module('Argus')));","/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\n/* global angular */\n\n(function (app) {\n\tapp.controller('OroomLiveCtrl', ['$scope', '$interval', 'notify', 'OroomService', 'PeriodsService', 'FormatTimeService', '$timeout','$rootScope',\n\t\tfunction ($scope, $interval, notify, orooms, periods, time, $timeout, $rootScope) {\n\t\t\tvar intervalPromise = $interval(interval, 2000);\n\t\t\t\n\t\t\t$scope.$on('$destroy',function(){\n\t\t\t\t$interval.cancel(intervalPromise); \n\t\t\t});\n\n\t\t\tfunction interval() {\n\n\t\t\t\tvar now = new Date();\n\t\t\t\t$scope.currentTime = formatAMPM(now);\n\t\t\t\t$scope.currentDate = formatDate(now);\n\t\t\t\t$scope.currentPeriod = getPeriod(now);\n\t\t\t\t//var newPeriod = getPeriod(now);\n\t\t\t\t\n\t\t\t\tgetORoomLists($scope.currentPeriod);\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$scope.changePeriodTables = function (newPeriod, manual) {\n\t\t\t\t$scope.currentPeriod = newPeriod;\n\t\t\t\t\n\t\t\t};\n\n\n\t\t\t$scope.periods = periods.query(function (data) {\n\t\t\t\t$scope.currentPeriod = getPeriod(new Date());\n\t\t\t\tinterval();\n\t\t\t});\n\n\t\t\tvar formatAMPM = time.formatAMPM;\n\t\t\tvar formatDate = time.formatDate;\n\t\t\tvar formatTime24 = time.formatTime24;\n\n\t\t\tfunction getPeriod(date) {\n\t\t\t\tvar currentPeriod = null;\n\t\t\t\tvar datestr = formatTime24(date);\n\n\t\t\t\tangular.forEach($scope.periods, function (item) {\n\t\t\t\t\tif (datestr > item.StartTime) {\n\t\t\t\t\t\t//console.log('datestr < ' + item.StartTime);\n\t\t\t\t\t\tif (datestr < item.EndTime) {\n\t\t\t\t\t\t\t//console.log('datestr < ' + item.EndTime);\n\t\t\t\t\t\t\tcurrentPeriod = item;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn currentPeriod;\n\t\t\t}\n\n\n\t\t\tfunction getORoomLists(period) {\n\t\t\t\torooms.get({}, function (data) {\n\t\t\t\t\tvar ormList = [];\n\t\t\t\t\tangular.forEach(data.OroomList, function(item,$index){\n\t\t\t\t\t\tif(item.user.SchoolId === $rootScope.currentUser.SchoolId){\n\t\t\t\t\t\t\tormList.push(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t$scope.refTable = data.reftable;\n\t\t\t\t\t$scope.oroomlist = ormList;\n\t\t\t\t});\n\t\t\t}\n\t\t\tgetORoomLists();\n\n\n\t\t}]);\n}(angular.module('Argus')));","/* global angular */\r\n\r\n(function (app) {\r\n\tapp\r\n\t\t.controller(\"ProfileCtrl\",\r\n\t\t\t[\"$scope\", \"StudentsService\", \"$http\", '$rootScope', 'ProfessorClassesService', 'RoomsService', function ($scope, students, $http, $rootScope, professorclasses, rooms) {\r\n\t\t\t\t\t$scope.schedule = []; // holds  student's schedule\r\n\t\t\t\t\t$scope.activities = []; // holds student'activities\r\n\t\t\t\t\t$scope.checks = [];\r\n\t\t\t\t\t$scope.currentDate = new Date();\r\n\r\n\t\t\t\t\t$scope.$watch('checks', function (n, o) {\r\n//\t\t\tconsole.log(n);\r\n\t\t\t\t\t}, true);\r\n\t\t\t\t\t$scope.role = $rootScope.currentUser.role;\r\n\t\t\t\t\t$scope.updateStudent = function () {\r\n\t\t\t\t\t\tstudents.update({id: $scope.student.Id, updateStudent: true}, {\r\n\t\t\t\t\t\t\tGuardianName: $scope.student.GuardianName,\r\n\t\t\t\t\t\t\tGuardianPhone: $scope.student.GuardianPhone,\r\n\t\t\t\t\t\t\tGuardianMPhone: $scope.student.GuardianMPhone,\r\n\t\t\t\t\t\t\tGuardianEmail: $scope.student.GuardianEmail\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\t\t\t\t\t$scope.rooms = rooms.query();\r\n\r\n\t\t\t\t\t$scope.onRoomChanged = function (professorclass) {\r\n\t\t\t\t\t\tconsole.log(professorclass);\r\n\t\t\t\t\t\tprofessorclasses.update({id: professorclass.Id}, {RoomId: professorclass.room.Id}, function (data) {\r\n\t\t\t\t\t\t\tconsole.log('success');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t$scope.downloadActivity = function () {\r\n\t\t\t\t\t\tvar text = '';\r\n\t\t\t\t\t\tvar heading = 'Date,ActionBy,Activity,Comment \\n';\r\n\t\t\t\t\t\ttext += heading;\r\n\t\t\t\t\t\tangular.forEach($scope.activities, function (act) {\r\n\t\t\t\t\t\t\ttext += act.ActionDate.split(' ')[0] + ',';\r\n\t\t\t\t\t\t\ttext += act.user.FirstName + ' ' + act.user.LastName + ',';\r\n\t\t\t\t\t\t\ttext += act.activity.Name + ',';\r\n\t\t\t\t\t\t\ttext += act.Comment + ',';\r\n\t\t\t\t\t\t\ttext += \"\\n\";\r\n\t\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\t\tdownload(text, $scope.student);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar download = function (text, student) {\r\n\r\n\t\t\t\t\t\t//console.log(text);\r\n\t\t\t\t\t\tvar element = document.createElement('a');\r\n\t\t\t\t\t\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n\t\t\t\t\t\telement.setAttribute('download', 'ActivityFor-' + student.user.FirstName + '_' + student.user.LastName + '.csv');\r\n\t\t\t\t\t\telement.style.display = 'none';\r\n\t\t\t\t\t\tdocument.body.appendChild(element);\r\n\t\t\t\t\t\telement.click();\r\n\t\t\t\t\t\tdocument.body.removeChild(element);\r\n\t\t\t\t\t};\r\n\r\n\r\n\t\t\t\t\t//console.log($scope.student)// contains the student to display \r\n\r\n\t\t\t\t\t$scope.$watch('student', function (newVal, oldVal) {\r\n\r\n\t\t\t\t\t\t$scope.schedule = newVal.classes;\r\n\t\t\t\t\t\tvar parentName = newVal.GuardianName ? newVal.GuardianName.split(',') : [\"No\", \" name\"];\r\n\t\t\t\t\t\t$scope.parents = [{\r\n\t\t\t\t\t\t\t\tfn: parentName[0],\r\n\t\t\t\t\t\t\t\tln: parentName[1],\r\n\t\t\t\t\t\t\t\tphone: newVal.GuardianPhone || \"none\",\r\n\t\t\t\t\t\t\t\tmphone: 'None',\r\n\t\t\t\t\t\t\t\temail: 'None'}];\r\n\r\n\t\t\t\t\t\t$scope.activities = newVal.user.activities_affected;\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/*******************  Right Side Controllers*********************/\r\n\t\t\t\t\t$scope.currentDate;\r\n\t\t\t\t\t$scope.$watch(\"profileForm.date.$modelValue\", function (newVal, oldVal) {\r\n\t\t\t\t\t\t//console.info(\"date changedto :\" + newVal)\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\t$scope.showDetail = false;\r\n\t\t\t\t\t$scope.toggleShowDetail = function (index) {\r\n\t\t\t\t\t\t$scope.showDetail = !$scope.showDetail;\r\n\t\t\t\t\t\t$scope.selected = $scope.activities[index];\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t$scope.showComment = false;\r\n\t\t\t\t\t$scope.toggleShowComment = function (index) {\r\n\t\t\t\t\t\t$scope.showComment = !$scope.showComment;\r\n\t\t\t\t\t\t$scope.selected = $scope.activities[index];\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t$scope.addComment = function () {\r\n\t\t\t\t\t\tvar entry =\r\n\t\t\t\t\t\t\t{date: formatDate(new Date),\r\n\t\t\t\t\t\t\t\tactivity: \"comment\",\r\n\t\t\t\t\t\t\t\tComment: $scope.comment,\r\n\t\t\t\t\t\t\t\ttaff: $rootScope.currentUser.FirstName + ' ' + $rootScope.currentUser.LastName};\r\n\t\t\t\t\t\t$scope.activities.push(entry);\r\n\t\t\t\t\t\t$scope.comment = '';\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t$scope.graduationYear = 2015 + (12 - parseInt($scope.student.Grade, 10));\r\n\r\n\t\t\t\t\tfunction formatDate(date) {\r\n\t\t\t\t\t\treturn (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.filter = [];\r\n\t\t\t\t\t$scope.getActivities = function () {\r\n\t\t\t\t\t\treturn ($scope.activities || []).map(function (w) {\r\n\t\t\t\t\t\t\treturn w.activity.Name;\r\n\t\t\t\t\t\t}).filter(function (w, idx, arr) {\r\n\t\t\t\t\t\t\treturn arr.indexOf(w) === idx;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t$scope.filterByCategory = function (act) {\r\n\t\t\t\t\t\treturn $scope.filter[act.activity.Name] || noFilter($scope.filter);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t// date selected on the checkboxes;\r\n\t\t\t\t\tfunction noFilter(filterObj) {\r\n\t\t\t\t\t\tfor (var key in filterObj) {\r\n\t\t\t\t\t\t\tif (filterObj[key]) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t}]);\r\n\r\n}(angular.module('Argus')));","\n/* global angular */\n\n(function (app) {\n\tapp.controller('ISSRosterController', ['$scope', 'notify', '$modal', 'ISSService',\n\t\tfunction ($scope, notify, $modal, isss) {\n\t\t\t$scope.getList = function () {\n\t\t\t\t$scope.iss = isss.query({roster: true}, function (data) {\n\t\t\t\t\tangular.forEach(data, function (item) {\n\t\t\t\t\t\tif (item.counters.ORoomsToBeServed > 0) {\n\t\t\t\t\t\t\titem.overlap = {class: 'bg-danger', msg: 'Has ORoom'};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t\tangular.forEach(data, function (item) {\n\t\t\t\t\t\tangular.forEach(item.referred, function (ref) {\n\t\t\t\t\t\t\tif (ref.ReferralTypeId === 12) {\n\t\t\t\t\t\t\t\titem.overlap = {class: 'bg-warning', msg: 'Has AEC'};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t});\n\n\t\t\t\t\tangular.forEach(data, function (item) {\n\t\t\t\t\t\tif (item.counters.OSSPMP > 0) {\n\t\t\t\t\t\t\titem.overlap = {class: 'bg-danger', msg: 'Has OSS'};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\t\t\t$scope.getList();\n\n\t\t\t$scope.issAttendance = function (student, $index) {\n\n\n\t\t\t\tvar overlap = false;\n\t\t\t\tvar overlapPlace = '';\n\n\t\t\t\tif (student.counters.OSSPMP > 0) {\n\t\t\t\t\toverlapPlace = 'OSS';\n\t\t\t\t\toverlap = true;\n\t\t\t\t}\n\t\t\t\tif (!!student.overlap && student.overlap.msg === 'Has AEC') {\n\t\t\t\t\t// show present for AEC\n\t\t\t\t}\n\n\n\t\t\t\tif (overlap) {\n\t\t\t\t\tmodalInstance = $modal.open({\n\t\t\t\t\t\ttemplateUrl: 'views/modals/AttendanceUnavailableModal2.html',\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t\tcontroller: function ($scope, student, activity) {\n\t\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t\tconsole.log(student);\n\t\t\t\t\t\t\t$scope.activity = activity;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\t\treturn student;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tactivity: function () {\n\t\t\t\t\t\t\t\treturn overlapPlace;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar modalInstance = $modal.open({\n\t\t\t\t\ttemplateUrl: 'views/modals/attendanceISSModal.html',\n\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\tsize: 'lg',\n\t\t\t\t\tcontroller: function ($scope, student, PeriodsService) {\n\t\t\t\t\t\t$scope.periods = PeriodsService.query();\n\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t},\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\treturn student;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tmodalInstance.result.then(function () {// on SUBMIT\n\t\t\t\t\t// post the comment and other things to the database \n\t\t\t\t\tisss.update({id: student.referred[0].Id}, {\n\t\t\t\t\t\tActionType: student.radioModel,\n\t\t\t\t\t\tComment: student.comment,\n\t\t\t\t\t\tStudentId: student.StudentId\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tnotify(data.msg);\n\t\t\t\t\t\t$scope.iss.splice($index, 1);\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tnotify('error');\n\t\t\t\t\t});\n\n\n\t\t\t\t\t//$scope.selected.student = null;\n\t\t\t\t}, function () {// on modal DISMISS\n\n\t\t\t\t});\n\n\n\n\t\t\t};\n\n\t\t\t$scope.printList = function () {\n\t\t\t\tvar heading = 'First Name, Last Name, Student ID, 1st Per., 2nd Per., Ref. Type, '\n\t\t\t\t\t+ 'ISS Days, ORM Days, Overlap, Attendance,  \\n';\n\t\t\t\tvar text = heading;\n\t\t\t\tangular.forEach($scope.iss, function (item) {\n\t\t\t\t\ttext += item.user.FirstName + ', ' + item.user.LastName + ', ';\n\t\t\t\t\ttext += item.StudentId + ',' + item.classes[0].professor_class.room.Name + ',' + item.classes[1].professor_class.room.Name + ',';\n\t\t\t\t\ttext += item.referred[0].referral_type.Name + ', ';\n\t\t\t\t\ttext += item.counters.ISSDays + ', ';\n\t\t\t\t\ttext += item.counters.ORoomsToBeServed + ', ';\n\t\t\t\t\ttext += item.overlap.msg + ',';\n\t\t\t\t\ttext += item.referred[0].activity.Name;\n\n\t\t\t\t\ttext += '\\n';\n\t\t\t\t});\n\n\t\t\t\t$scope.download(text, 'ISS');\n\t\t\t};\n\n\t\t}]);\n}(angular.module('Argus')));","/* global angular */\n\n(function (app) {\n\tapp.controller('LunchDetentionRosterCtrl', ['$scope', 'notify', '$modal', 'LunchService', '$rootScope',\n\t\tfunction ($scope, notify, $modal, lunchs, $rootScope) {\n\t\t\tlunchs.query({roster: true}, function (data) {\n\t\t\t\t$scope.lunchTableA = [];\n\t\t\t\t$scope.lunchTableB = [];\n\t\t\t\t$scope.lunchTableC = [];\n\t\t\t\t$scope.lunchTable = data;\n\t\t\t\t$scope.ngOptions = {data: 'ngData'};\n\t\t\t\t$scope.ngOptions2 = {\n\t\t\t\t\tdata: 'lunchTable',\n\t\t\t\t\tshowGroupPanel: true,\n\t\t\t\t\tjqueryUIDraggable: true\n\t\t\t\t};\n\n\t\t\t\tangular.forEach(data, function (item, $index) {\n\n\t\t\t\t\tif (item.LunchType === 'A Lunch')\n\t\t\t\t\t\t$scope.lunchTableA.push(item);\n\t\t\t\t\telse if (item.LunchType === 'B Lunch')\n\t\t\t\t\t\t$scope.lunchTableB.push(item);\n\t\t\t\t\telse\n\t\t\t\t\t\t$scope.lunchTableC.push(item);\n\n\t\t\t\t\tif (item.counters.ISSDays > 0) {\n\t\t\t\t\t\titem.overlap = {class: 'bg-danger', msg: 'Has ISS'};\n//\t\t\t\t\t\tvar referred = [];\n//\t\t\t\t\t\tangular.forEach(item.referred , function(ref){\n//\t\t\t\t\t\t\tif((ref.ReferralTypeId === 5 || ref.ReferralTypeId === 6 || ref.ReferralTypeId === 7 || ref.ReferralTypeId === 17 ))\n//\t\t\t\t\t\t\t\treferred.push(ref);\n//\t\t\t\t\t\t});\n\t\t\t\t\t\t//item.referred = referred;\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}, function () {\n\t\t\t\tnotify('error');\n\t\t\t});\n\n\t\t\t$scope.lunchAttendance = function (student, $index) {\n\t\t\t\tconsole.log('lunch attendance');\n\t\t\t\tvar modalInstance;\n\n\t\t\t\tvar overlap = false;\n\t\t\t\tvar overlapPlace = '';\n\n\n\t\t\t\tif (student.counters.ISSDays > 0) {\n\t\t\t\t\toverlapPlace = 'ISS';\n\t\t\t\t\toverlap = true;\n\t\t\t\t}\n//\t\t\t\tif (student.counters.OSSPMP > 0) {\n//\t\t\t\t\toverlapPlace = 'OSS';\n//\t\t\t\t\toverlap = true;\n//\t\t\t\t}\n\n\n\t\t\t\tif (overlap) {\n\t\t\t\t\tmodalInstance = $modal.open({\n\t\t\t\t\t\ttemplateUrl: 'views/modals/AttendanceUnavailableModal.html',\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t\tcontroller: function ($scope, student, activity) {\n\t\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t\tconsole.log(student);\n\t\t\t\t\t\t\t$scope.activity = activity;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\t\treturn student;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tactivity: function () {\n\t\t\t\t\t\t\t\treturn overlapPlace;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tmodalInstance = $modal.open({\n\t\t\t\t\ttemplateUrl: 'views/modals/attendanceLunchModal.html',\n\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\tsize: 'lg',\n\t\t\t\t\tcontroller: function ($scope, student, PeriodsService) {\n\t\t\t\t\t\t$scope.periods = PeriodsService.query();\n\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t},\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\treturn student;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tmodalInstance.result.then(function () {// on SUBMIT\n\t\t\t\t\t// post the comment and other things to the database \n\t\t\t\t\tlunchs.update({id: student.referred[0].Id, attendance: true}, {\n\t\t\t\t\t\tActionType: student.radioModel,\n\t\t\t\t\t\tComment: student.comment,\n\t\t\t\t\t\tStudentId: student.Id\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tnotify(data.msg);\n\t\t\t\t\t\tif ($rootScope.currentUser.SchoolId === 2) {// dunbar\n\t\t\t\t\t\t\t$scope.lunchTable.splice($index, 1);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar lunch = student.LunchType;\n\t\t\t\t\t\tif (lunch === 'A Lunch') {\n\t\t\t\t\t\t\t$scope.lunchTableA.splice($index, 1);\n\t\t\t\t\t\t} else if (lunch === 'B Lunch') {\n\t\t\t\t\t\t\t$scope.lunchTableB.splice($index, 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$scope.lunchTableC.splice($index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($rootScope.currentUser.SchoolId !== 1) {\n\t\t\t\t\t\t\t$scope.lunchTable.splice($index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tnotify('error');\n\t\t\t\t\t});\n\n\n\n\t\t\t\t}, function () {// on modal DISMISS\n\n\t\t\t\t});\n\n\n\t\t\t};\n\t\t\t$scope.printListAll = function () {\n\t\t\t\tvar heading = 'First Name,' + 'Last Name,' + 'Student ID, ' +\n\t\t\t\t\t'Grade, ' + 'Attendance' + ', ' + 'Progression, Overlap\\n';\n\t\t\t\tvar text = heading;\n\t\t\t\tangular.forEach($scope.lunchTable, function (item) {\n\t\t\t\t\ttext += item.user.FirstName + ', ' + item.user.LastName + ', ';\n\t\t\t\t\ttext += item.StudentId + ',' + item.Grade + ', ';\n\t\t\t\t\ttext += item.activity ? item.activity.Name : '' + ', ' + (item.referred[0] ? item.referred[0].referral_type.Name : '');\n\t\t\t\t\ttext += ',' + (item.overlap ? item.overlap.msg : '');\n\t\t\t\t\ttext += '\\n';\n\t\t\t\t});\n\t\t\t\tnotify('printing');\n\t\t\t\t$scope.download(text);\n\t\t\t};\n\n\t\t\t$scope.printEstacado = function () {\n\n\t\t\t};\n\t\t}]);\n}(angular.module('Argus')));","/* global angular */\n\n(function (app) {\n\tapp.controller('OSSRosterController',\n\t\t['$scope', 'notify', '$modal', 'OSSService', 'FormatTimeService', 'ISSService', 'CountersService',\n\t\t\tfunction ($scope, notify, $modal, osss, time, isss, counters) {\n\t\t\t\t$scope.oss = osss.query({roster: true}, function (data) {\n\t\t\t\t\tangular.forEach(data, function (item) {\n\t\t\t\t\t\titem.Date = time.formatDate(new Date(item.Date));\n\t\t\t\t\t});\n\t\t\t\t}, function () {\n\t\t\t\t\tnotify('error');\n\t\t\t\t});\n\n\t\t\t\t$scope.ossAttendance = function (student, $index) {\n\t\t\t\t\tvar modalInstance = $modal.open({\n\t\t\t\t\t\ttemplateUrl: 'views/modals/attendaceModal.html',\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t\tcontroller: function ($scope, student, teachers) {\n\t\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t\t$scope.currentDate = new Date();\n\t\t\t\t\t\t\t$scope.teachers = teachers.query();\n\t\t\t\t\t\t\t$scope.$watch('form.date.$viewValue', function (newV, oldV) {\n\t\t\t\t\t\t\t\tstudent.date = newV ? newV : oldV;\n\t\t\t\t\t\t\t\tconsole.log(newV);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\t\treturn student;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tmodalInstance.result.then(function (data) {\n\t\t\t\t\t\tswitch (student.radioModel) {\n\t\t\t\t\t\t\tcase '1':\n\t\t\t\t\t\t\t\tcounters.update({id: student.student_user.id},\n\t\t\t\t\t\t\t\t{counters: student.student_user.student.counters,\n\t\t\t\t\t\t\t\t\tComment: student.comment\n\t\t\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\t\t\tnotify('success');\n\t\t\t\t\t\t\t\t\tosss.update({id: student.Id},\n\t\t\t\t\t\t\t\t\t{ OssPresent: true});\n\n\t\t\t\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t\t\t\tnotify('error');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '2':\n\t\t\t\t\t\t\t\tosss.update({id: student.Id},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tComment: student.comment\n\t\t\t\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\t\t\t\tnotify(data.msg);\n\t\t\t\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t\t\t\tnotify('error');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase '3':\n\t\t\t\t\t\t\t\tisss.update({id: student.Id, followup: true}, {\n\t\t\t\t\t\t\t\t\tDate: student.date,\n\t\t\t\t\t\t\t\t\tTime: student.time,\n\t\t\t\t\t\t\t\t\tActionType: 46,\n\t\t\t\t\t\t\t\t\tComment: student.comment,\n\t\t\t\t\t\t\t\t\tStudentId: student.StudentId,\n\t\t\t\t\t\t\t\t\tTeacherId: student.teacher.id\n\t\t\t\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\t\t\t\tnotify(data.msg);\n\t\t\t\t\t\t\t\t\t$scope.oss.splice($index, 1);\n\t\t\t\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t\t\t\tnotify('error');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.oss.splice($index, 1);\n\t\t\t\t\t});\n\n//\t\t\t\tosss.update({id:student.Id, attendance:true}, {\n//\t\t\t\t\tActionType:student.activity.Id\n//\t\t\t\t});\n\n\n\t\t\t\t};\n\n\t\t\t}]);\n}(angular.module('Argus')));","/* global angular */\n\n(function (app) {\n\tapp.controller('OroomRosterCtrl', ['$scope', 'notify', '$modal', 'OroomService', \"AECListService\",'UtilService',\n\t\tfunction ($scope, notify, $modal, orooms, aec, utils) {\n\t\t\t//$scope.currentDate = new Date();\n\n\n\t\t\t$scope.getList = function () {\n\t\t\t\torooms.get({roster: true}, function (data) {\n\t\t\t\t\t$scope.refTable = data.OroomList;\n\t\t\t\t\t$scope.count.oroom = data.OroomList.length;\n//\t\t\t\tangular.forEach(data.OroomList, function (item) {\n//\t\t\t\t\tif (item.counters.ISSDays > 0) {\n//\t\t\t\t\t\titem.overlap = {class: 'bg-danger', msg: 'Has ISS'};\n//\t\t\t\t\t\tvar referred = [];\n//\t\t\t\t\t\tangular.forEach(item.referred , function(ref){\n//\t\t\t\t\t\t\tif((ref.ReferralTypeId === 5 || ref.ReferralTypeId === 6 || ref.ReferralTypeId === 7 || ref.ReferralTypeId === 17 ))\n//\t\t\t\t\t\t\t\treferred.push(ref);\n//\t\t\t\t\t\t});\n//\t\t\t\t\t\titem.referred = referred;\n//\t\t\t\t\t}\n//\t\t\t\t});\n\n/*\t\t\t\t\tvar to_remove_indexes = [];\n\t\t\t\t\t\n\t\t\t\t\tangular.forEach(data.OroomList, function (item, $index) {\n\n\n\t\t\t\t\t\tvar referred = [];\n\t\t\t\t\t\tvar hasOroom = false;\n\t\t\t\t\t\tangular.forEach(item.referred, function (ref, $index) {\n\t\t\t\t\t\t\tif (ref.ReferralTypeId === 12) {\n\t\t\t\t\t\t\t\titem.overlap = {class: 'bg-warning', msg: 'Has AEC'};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar hasiss = false;\n\t\t\t\t\t\tangular.forEach(item.referred, function (ref, $index) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif ((ref.ReferralTypeId === 5 || ref.ReferralTypeId === 6 || ref.ReferralTypeId === 7\n\t\t\t\t\t\t\t\t|| ref.ReferralTypeId === 10 || ref.ReferralTypeId === 17 || ref.ReferralTypeId === 15 )) {\n\t\t\t\t\t\t\t\t\thasiss = true;\n\t\t\t\t\t\t\t\t\titem.overlap = {class: 'bg-danger', msg: 'Has ISS'};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treferred.push(ref);\n\n\t\t\t\t\t\t\tif ((ref.ReferralTypeId === 1 || ref.ReferralTypeId === 2 || ref.ReferralTypeId === 3 || ref.ReferralTypeId === 16 || ref.ReferralTypeId === 10 || ref.ReferralTypeId === 19)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\thasOroom = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(hasiss){\n\t\t\t\t\t\t\t//console.log('Has ISS');\n\t\t\t\t\t\t\t//console.log(item);\n\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\tif (!hasOroom) {\n\t\t\t\t\t\t\tconsole.log('doesnt have oroom');\n\t\t\t\t\t\t\tto_remove_indexes.push($index);\n\t\t\t\t\t\t}\n\t\t\t\t\t\titem.referred = referred;\n\n\t\t\t\t\t});\n\n\t\t\t\t\tangular.forEach(to_remove_indexes, function (index, $index) {\n\t\t\t\t\t\tconsole.log(data.OroomList[index]);\n\t\t\t\t\t\tdata.OroomList.splice(index, 1);\n\t\t\t\t\t});\n*/\n\t\t\t\t\tutils.markOroomOverlaps(data.OroomList);\n\t\t\t\t\t//console.log(data.OroomList);\n\t\t\t\t});\n\t\t\t};\n\t\t\t$scope.getList();\n\t\t\t$scope.oRoomAttendance = function (student, $index) {\n\t\t\t\tvar modalInstance;\n\t\t\t\tconsole.log('o-room attendance');\n\n\t\t\t\tvar overlap = false;\n\t\t\t\tvar overlapPlace = '';\n\n\t\t\t\tif (student.counters.ISSDays > 0) {\n\t\t\t\t\toverlapPlace = 'ISS';\n\t\t\t\t\toverlap = true;\n\t\t\t\t}\n//\t\t\t\t\tif (student.counters.OSSPMP > 0) {\n//\t\t\t\t\t\toverlapPlace = 'OSS';\n//\t\t\t\t\t\toverlap = true;\n//\t\t\t\t\t}\n\n\t\t\t\tif (overlap) {\n\t\t\t\t\tmodalInstance = $modal.open({\n\t\t\t\t\t\ttemplateUrl: 'views/modals/AttendanceUnavailableModal.html',\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t\tcontroller: function ($scope, student, activity) {\n\t\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t\tconsole.log(student);\n\t\t\t\t\t\t\t$scope.activity = activity;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\t\treturn student;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tactivity: function () {\n\t\t\t\t\t\t\t\treturn overlapPlace;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//\n\t\t\t\tmodalInstance = $modal.open({\n\t\t\t\t\ttemplateUrl: 'views/modals/attendanceOroomModal.html',\n\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\tsize: 'lg',\n\t\t\t\t\tcontroller: function ($scope, student, PeriodsService) {\n\t\t\t\t\t\t$scope.periods = PeriodsService.query();\n//\t\t\t\t\t\tstudent.hasAEC = false;\n//\t\t\t\t\t\t$scope.showAssignments = false;\n//\t\t\t\t\t\tif(student.overlap && student.overlap.msg === 'Has AEC'){\n//\t\t\t\t\t\t\tconsole.log('this student has AEC');\n//\t\t\t\t\t\t\tstudent.hasAEC = true;\n//\t\t\t\t\t\t}\n//\t\t\t\t\t\t$scope.referredAEC = 1;\n//\t\t\t\t\t\t\n//\t\t\t\t\t\t$scope.$watch('student.radioModel', function(n,o){\n//\t\t\t\t\t\t\tif(n && n == 24 && student.hasAEC ){\n//\t\t\t\t\t\t\t\t$scope.showAssignments = true;\n//\t\t\t\t\t\t\t}else{\n//\t\t\t\t\t\t\t\t$scope.showAssignments = false;\n//\t\t\t\t\t\t\t}\n//\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t},\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\treturn student;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tmodalInstance.result.then(function () {// on SUBMIT\n\t\t\t\t\t// post the comment and other things to the database \n\t\t\t\t\t\n\t\t\t\t\tif(student.radioModel == 24 && student.hasAEC){\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar aecPresent = '49';\n\t\t\t\t\t\tvar comment = student.comment || '';\n\t\t\t\t\t\tangular.forEach(student.referred, function(item){\n\t\t\t\t\t\t\tif(item.ReferralTypeId !== 12)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\tconsole.log(item);\n\t\t\t\t\t\t\tif(item.assignment.selected){\n\t\t\t\t\t\t\t\tcomment += '(' + item.assignment.Name +' completed)';\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tcomment += '(' + item.assignment.Name +' incomplete)';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tstudent.comment = comment;\n\t\t\t\t\t\tconsole.log(student.comment);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\torooms.update({id: student.referred[0].Id, attendance: true}, {\n\t\t\t\t\t\tActionType: student.radioModel,\n\t\t\t\t\t\tComment: student.comment,\n\t\t\t\t\t\tStudentId: student.id\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tnotify(data.msg);\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tnotify('error, Before continuing please contact an admin');\n\t\t\t\t\t});\n\n\t\t\t\t\t$scope.refTable.splice($index, 1);\n\t\t\t\t\t//$scope.selected.student = null;\n\t\t\t\t}, function () {// on modal DISMISS\n\n\t\t\t\t});\n\n\t\t\t};\n\n\t\t\t$scope.printList = function () {\n\t\t\t\tvar heading = 'First Name, Last Name, Student ID, Pending Days, Referral Type, 8th period, Attendance\\n';\n\t\t\t\tvar text = heading;\n\t\t\t\tangular.forEach($scope.refTable, function (item) {\n\t\t\t\t\ttext += item.user.FirstName + ', ' + item.user.LastName + ', ';\n\t\t\t\t\ttext += item.user.UserName + ',' + item.counters.ORoomsToBeServed + ', ';\n\t\t\t\t\ttext += item.referred[0].referral_type.Name + ', ';\n\t\t\t\t\ttext += item.classes[7] ? item.classes[7].professor_class.room.Name : 'N/A';\n\n\t\t\t\t\ttext += '\\n';\n\t\t\t\t});\n\n\t\t\t\t$scope.download(text, 'O-Room');\n\t\t\t};\n\t\t}]);\n}(angular.module('Argus')));\n","/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\n/* global angular */\n\n(function (app) {\n\tapp.controller('attendanceRostersCtrl',\n\t\t['$scope', '$modal', 'notify',  'StudentsService','OroomService', 'LunchService','ISSService','OSSService',\n\t\t\tfunction ($scope, $modal, notify, students, orooms, lunchs, isss, osss) {\n\t\t\t\t$scope.currentList = 'oroom';\n\t\t\t\t$scope.count =  {};\n\t\t\t\t$scope.refTable = [];\n\t\t\t\t$scope.lunchTableA = [];\n\t\t\t\t$scope.lunchTableB = [];\n\t\t\t\t$scope.iss = [];\n\t\t\t\t$scope.oss = [];\n\t\t\t\t$scope.currentDate = formatDate(new Date());\n\n\t\t\t\t$scope.activities = [\n\t\t\t\t\t{name: \"Present\", Id: 38},\n\t\t\t\t\t{name: \"No Show\", Id: 39},\n\t\t\t\t\t{name: \"Left School\", Id: 40},\n\t\t\t\t\t{name: \"School Absent\", Id: 41},\n\t\t\t\t\t{name: \"Sent Out\", Id: 42},\n\t\t\t\t\t{name: \"Walked Out\", Id: 42},\n\t\t\t\t\t{name: \"Other\", Id: 44}\n\t\t\t\t];\n\t\t\t\t$scope.download = function (text,type) {\n\t\t\t\t\ttype = type? type:'';\n\t\t\t\t\t//console.log(text);\n\t\t\t\t\tvar element = document.createElement('a');\n\t\t\t\t\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n\t\t\t\t\telement.setAttribute('download', 'roster'+type+'.csv');\n\t\t\t\t\telement.style.display = 'none';\n\t\t\t\t\tdocument.body.appendChild(element);\n\t\t\t\t\telement.click();\n\t\t\t\t\tdocument.body.removeChild(element);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlunchs.query({roster:true},function(data){ $scope.count.lunch = data.length;});\n\t\t\t\torooms.get({count:true}, function(data){ $scope.count.oroom = data.OroomList;});\n\t\t\t\tisss.get({roster:true, count:true}, function(data){$scope.count.iss = data.count;});\n\t\t\t\tosss.get({roster:true, count:true}, function(data){$scope.count.oss = data.count;});\n\t\t\t}]);\n}(angular.module('Argus')));","/* global angular */\n\n(function (app) {\n\tapp.controller('ReportsAtRiskCtrl', ['$scope', 'notify','$modal', function ($scope, notify,$modal) {\n\t\t\tnotify('ReportsAtRiskCtrl');\n\t\t\t$scope.eodReports = [\n\t\t\t\t{name:'AEC', value:1},\n\t\t\t\t{name:'O-Room', value:2},\n\t\t\t\t{name:'Reteach', value:3},\n\t\t\t\t{name:'ISS', value:4},\n\t\t\t\t{name:'OSS PMP', value:5}\n\t\t\t];\n\t\t\t$scope.eod.selected = {name:0, value:0 };\n\t\t\t\n\t\t\tangular.forEach($scope.eod.issStudents, function(item){\n\t\t\t\titem.class = 'bg-danger';\n\t\t\t});\n\t\t}]);\n}(angular.module('Argus')));\n","/* global angular */\n\n(function (app) {\n\tapp.controller('ReportsCtrl', ['$scope', 'notify','$modal', function ($scope, notify,$modal) {\n\t\t\t$scope.eod = {};\n\t\t\t$scope.eod.issStudents = [\n\t\t\t\t{StudentId:'100109607', FirstName:'Mark',LastName:'Gonzales', Attendance:'Present', Progression:''  },\n\t\t\t\t{StudentId:'100344318', FirstName:'David ',LastName:'White', Attendance:'Present', Progression:''  },\n\t\t\t\t{StudentId:'100344318', FirstName:'David ',LastName:'White', Attendance:'Present', Progression:''  },\n\t\t\t\t{StudentId:'100344318', FirstName:'David ',LastName:'White', Attendance:'Present', Progression:''  },\n\t\t\t\t{StudentId:'100344318', FirstName:'David ',LastName:'White', Attendance:'Present', Progression:''  },\n\t\t\t\t{StudentId:'100344318', FirstName:'David ',LastName:'White', Attendance:'Present', Progression:''  },\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t{StudentId:'100131834', FirstName:'Sara ',LastName:'Marquez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'100131834', FirstName:'Sara ',LastName:'Marquez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'102234384', FirstName:'Henry ',LastName:'Lopez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'100131834', FirstName:'Sara ',LastName:'Marquez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'102234384', FirstName:'Henry ',LastName:'Lopez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'100131834', FirstName:'Sara ',LastName:'Marquez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'100131834', FirstName:'Sara ',LastName:'Marquez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'100131834', FirstName:'Sara ',LastName:'Marquez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'102234384', FirstName:'Henry ',LastName:'Lopez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'100131834', FirstName:'Sara ',LastName:'Marquez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'100131834', FirstName:'Sara ',LastName:'Marquez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'102234384', FirstName:'Henry ',LastName:'Lopez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'100131834', FirstName:'Sara ',LastName:'Marquez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'102234384', FirstName:'Henry ',LastName:'Lopez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t{StudentId:'100131834', FirstName:'Sara ',LastName:'Marquez', Attendance:'Sent-Out', Progression:'ISS --> OSS'  },\n\t\t\t\t\n\t\t\t\t{StudentId:'100131423', FirstName:'Tyron ',LastName:'Black', Attendance:'Absent', Progression:'ISS --> Re-ISS'  },\n\t\t\t\t{StudentId:'100131423', FirstName:'Tyron ',LastName:'Black', Attendance:'Absent', Progression:'ISS --> Re-ISS'  },\n\t\t\t\t{StudentId:'100131423', FirstName:'Tyron ',LastName:'Black', Attendance:'Absent', Progression:'ISS --> Re-ISS'  },\n\t\t\t\t{StudentId:'100131423', FirstName:'Tyron ',LastName:'Black', Attendance:'Absent', Progression:'ISS --> Re-ISS'  },\n\t\t\t\t{StudentId:'100131423', FirstName:'Tyron ',LastName:'Black', Attendance:'Absent', Progression:'ISS --> Re-ISS'  },\n\t\t\t\t{StudentId:'100131423', FirstName:'Tyron ',LastName:'Black', Attendance:'Absent', Progression:'ISS --> Re-ISS'  },\n\t\t\t\t{StudentId:'100131423', FirstName:'Tyron ',LastName:'Black', Attendance:'Absent', Progression:'ISS --> Re-ISS'  }\n\t\t\t\t\n\t\t\t];\n\t\t}]);\n}(angular.module('Argus')));\n","/* global angular */\r\n\r\n(function (app) {\r\n\tapp.controller('ReportsEODCtrl',\r\n\t\t['$scope', 'notify', '$modal', '$http', 'FormatTimeService', '$rootScope',\r\n\t\t\tfunction ($scope, notify, $modal, $http, time, $rootScope) {\r\n\t\t\t\t$scope.eodReports = [\r\n\t\t\t\t\t{name: 'AEC', value: 1, url: 'report-eod-aec'},\r\n\t\t\t\t\t{name: 'O-Room', value: 2, url: 'report-eod-oroom'},\r\n//\t\t\t\t\t{name: 'Reteach', value: 3, url:'report-eod-reteach'},\r\n\t\t\t\t\t{name: 'ISS', value: 4, url: 'report-eod-iss'},\r\n\t\t\t\t\t{name: 'OSS PMP', value: 5, url: 'report-edo-oss'},\r\n\t\t\t\t\t{name: 'Lunch', value: 6, url: 'report-eod-lunchd'}\r\n\t\t\t\t];\r\n\t\t\t\t$scope.eod = {};\r\n\t\t\t\t$scope.eod.selected = $scope.eodReports[1];\r\n\t\t\t\t$scope.eodCounters = {\r\n\t\t\t\t\texpected: 0,\r\n\t\t\t\t\tpresent: 0,\r\n\t\t\t\t\tnoShows: 0,\r\n\t\t\t\t\tsentOuts: 0,\r\n\t\t\t\t\twalkedOuts: 0,\r\n\t\t\t\t\tschoolAbsent: 0,\r\n\t\t\t\t\tleftSchool: 0,\r\n\t\t\t\t\tother: 0,\r\n\t\t\t\t\treschedules:0,\r\n\t\t\t\t\tclears:0,\r\n\t\t\t\t\tabsents:0\r\n\t\t\t\t};\r\n\t\t\t\t$scope.percentages = {\r\n\t\t\t\t\ttodays: 0,\r\n\t\t\t\t\taverageThusFar: 0,\r\n\t\t\t\t\tdifference: 0\r\n\t\t\t\t};\r\n\t\t\t\t$scope.currentDate = new Date();\r\n\t\t\t\t$scope.$watch('date.date.$viewValue', function (newValue, oldValue) {\r\n\t\t\t\t\tif (newValue) {\r\n\t\t\t\t\t\tdate = time.formatDate(new Date(newValue));\r\n\t\t\t\t\t\t$scope.reportChanged();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t$scope.reportChanged = function () {\r\n\t\t\t\t\t$http.get('api/' + $scope.eod.selected.url + '?date=' + date).then(processResponse, function () {\r\n\t\t\t\t\t\tnotify('error');\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfunction processResponse(response) {\r\n\t\t\t\t\tvar list = response.data;\r\n\t\t\t\t\t$scope.orooms = list;\r\n\t\t\t\t\t//$scope.eodCounters.expected = list.length;\r\n\t\t\t\t\tangular.forEach(list, function (item) {\r\n\t\t\t\t\t\tif (item.student.SchoolId !== $rootScope.currentUser.SchoolId)\r\n\t\t\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\t\tswitch ($scope.eod.selected.value) {\r\n\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\t\tcheckAEC(item.ActionType);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\tcheckOroom(item.ActionType);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\tcheckISS(item.ActionType);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t\t\tcheckOSS(item.ActionType);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t\t\tcheckLunchD(item.ActionType);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar i = 0;\r\n//\t\t\t\t\tangular.forEach($scope.eodCounters, function (item, key) {\r\n//\t\t\t\t\t\tif (item !== list.length)\r\n//\t\t\t\t\t\t\t$scope.flotPieData[i++].data = item;\r\n//\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log($scope.eodCounters);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction checkOroom(actionTypeId) {\r\n\t\t\t\t\tswitch (actionTypeId) {\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\tcase 44:\r\n\t\t\t\t\t\tcase 59:\r\n\t\t\t\t\t\tcase 73:\r\n\t\t\t\t\t\t$scope.eodCounters.expected++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 24:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t$scope.eodCounters.present++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 25:\r\n\t\t\t\t\t\t\t$scope.eodCounters.noShows++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 28:\r\n\t\t\t\t\t\t\t$scope.eodCounters.sentOuts++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 29:\r\n\t\t\t\t\t\t\t$scope.eodCounters.walkedOuts++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 27:\r\n\t\t\t\t\t\t\t$scope.eodCounters.schoolAbsent++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 26:\r\n\t\t\t\t\t\t\t$scope.eodCounters.leftSchool++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 30:\r\n\t\t\t\t\t\t\t$scope.eodCounters.other++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction checkAEC(actionTypeId) {\r\n\t\t\t\t\tswitch (actionTypeId) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase 48:\r\n\t\t\t\t\t\t$scope.eodCounters.expected++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 49:\r\n\t\t\t\t\t\t\t$scope.eodCounters.present++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 52:\r\n\t\t\t\t\t\t\t$scope.eodCounters.noShows++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 55:\r\n\t\t\t\t\t\t\t$scope.eodCounters.sentOuts++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 56:\r\n\t\t\t\t\t\t\t$scope.eodCounters.walkedOuts++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 54:\r\n\t\t\t\t\t\t\t$scope.eodCounters.schoolAbsent++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 53:\r\n\t\t\t\t\t\t\t$scope.eodCounters.leftSchool++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 57:\r\n\t\t\t\t\t\t\t$scope.eodCounters.other++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 50:\r\n\t\t\t\t\t\t\t$scope.eodCounters.reschedules++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 51:\r\n\t\t\t\t\t\t\t$scope.eodCounters.clears++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 58:\r\n\t\t\t\t\t\t\t$scope.eodCounters.absents++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction checkISS(actionTypeId) {\r\n\t\t\t\t\tswitch (actionTypeId) {\r\n\t\t\t\t\t\tcase 20: //ORMD->ISS\r\n\t\t\t\t\t\tcase 21: // Ref ISS\r\n\t\t\t\t\t\tcase 45: //  ORM->ISS\r\n\t\t\t\t\t\t\t$scope.eodCounters.expected++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 38:\r\n\t\t\t\t\t\t\t$scope.eodCounters.present++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 39:\r\n\t\t\t\t\t\t\t$scope.eodCounters.noShows++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 42:\r\n\t\t\t\t\t\t\t$scope.eodCounters.sentOuts++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 43:\r\n\t\t\t\t\t\t\t$scope.eodCounters.walkedOuts++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 41:\r\n\t\t\t\t\t\t\t$scope.eodCounters.schoolAbsent++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 40:\r\n\t\t\t\t\t\t\t$scope.eodCounters.leftSchool++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 47:\r\n\t\t\t\t\t\t\t$scope.eodCounters.other++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction checkOSS(actionTypeId) {\r\n\t\t\t\t\tswitch (actionTypeId) {\r\n\t\t\t\t\t\tcase 24:\r\n\t\t\t\t\t\t\t$scope.eodCounters.present++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 25:\r\n\t\t\t\t\t\t\t$scope.eodCounters.noShows++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 28:\r\n\t\t\t\t\t\t\t$scope.eodCounters.sentOuts++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 29:\r\n\t\t\t\t\t\t\t$scope.eodCounters.walkedOuts++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 27:\r\n\t\t\t\t\t\t\t$scope.eodCounters.schoolAbsent++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 26:\r\n\t\t\t\t\t\t\t$scope.eodCounters.leftSchool++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 30:\r\n\t\t\t\t\t\t\t$scope.eodCounters.other++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction checkLunchD(actionTypeId) {\r\n\t\t\t\t\tswitch (actionTypeId) {\r\n\t\t\t\t\t\tcase 31:\r\n\t\t\t\t\t\t\t$scope.eodCounters.present++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 32:\r\n\t\t\t\t\t\t\t$scope.eodCounters.noShows++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 35:\r\n\t\t\t\t\t\t\t$scope.eodCounters.sentOuts++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 36:\r\n\t\t\t\t\t\t\t$scope.eodCounters.walkedOuts++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 34:\r\n\t\t\t\t\t\t\t$scope.eodCounters.schoolAbsent++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 33:\r\n\t\t\t\t\t\t\t$scope.eodCounters.leftSchool++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 37:\r\n\t\t\t\t\t\t\t$scope.eodCounters.other++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$scope.flotPieData = [\r\n//\t\t\t\t{\r\n//\t\t\t\t\tlabel: \"Expected\",\r\n//\t\t\t\t\tdata: 5,\r\n//\t\t\t\t\tcolor: \"#d3d3d3\"\r\n//\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"Present\",\r\n\t\t\t\t\t\tdata: 5,\r\n\t\t\t\t\t\tcolor: \"#bababa\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"No Show's\",\r\n\t\t\t\t\t\tdata: 5,\r\n\t\t\t\t\t\tcolor: \"#79d2c0\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"Sent Out's\",\r\n\t\t\t\t\t\tdata: 5,\r\n\t\t\t\t\t\tcolor: \"#1ab394\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"Walked Out's\",\r\n\t\t\t\t\t\tdata: 5,\r\n\t\t\t\t\t\tcolor: \"#1ab394\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"School Absent\",\r\n\t\t\t\t\t\tdata: 5,\r\n\t\t\t\t\t\tcolor: \"#1ab394\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"Left School\",\r\n\t\t\t\t\t\tdata: 5,\r\n\t\t\t\t\t\tcolor: \"#1ab394\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"Other\",\r\n\t\t\t\t\t\tdata: 5,\r\n\t\t\t\t\t\tcolor: \"#1ab394\"\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t];\r\n\t\t\t\t/**\r\n\t\t\t\t * Pie Chart Options\r\n\t\t\t\t */\r\n\t\t\t\t$scope.flotPieOptions = {\r\n\t\t\t\t\tseries: {\r\n\t\t\t\t\t\tpie: {\r\n\t\t\t\t\t\t\tshow: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\thoverable: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttooltip: true,\r\n\t\t\t\t\ttooltipOpts: {\r\n\t\t\t\t\t\tcontent: \"%p.0%, %s\", // show percentages, rounding to 2 decimal places\r\n\t\t\t\t\t\tshifts: {\r\n\t\t\t\t\t\t\tx: 20,\r\n\t\t\t\t\t\t\ty: 0\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdefaultTheme: true\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tangular.forEach($scope.eod.issStudents, function (item) {\r\n\t\t\t\t\tif (item.Attendance === 'Absent')\r\n\t\t\t\t\t\titem.class = 'bg-gray';\r\n\t\t\t\t\telse if (item.Attendance === 'Sent-Out')\r\n\t\t\t\t\t\titem.class = 'bg-danger';\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\titem.class = 'bg-green';\r\n\t\t\t\t});\r\n\t\t\t}]);\r\n}(angular.module('Argus')));\r\n\r\n","/* global angular */\n\n(function (app) {\n\tapp.controller('ReportsOroomActivityCtrl', ['$scope', 'notify', '$modal', '$http', 'FormatTimeService', '$rootScope',\n\t\tfunction ($scope, notify, $modal, $http, time, $rootScope) {\n\t\t\t$scope.currentDate = new Date();\n\t\t\t$scope.list = [];\n\t\t\t$scope.counters = {};\n\t\t\t$scope.activities = [{Name: \"In O-Room\", Id: 1},\n\t\t\t\t{Name: \"Assign ISS\", Id: 2},\n\t\t\t\t{Name: \"Walked-Out\", Id: 3},\n\t\t\t\t{Name: \"No Show\", Id: 4},\n\t\t\t\t{Name: \"Other\", Id: 5}\n\t\t\t];\n\t\t\t$scope.$watch('date.date.$viewValue', function (newValue, oldValue) {\n\t\t\t\tif (newValue) {\n\t\t\t\t\tvar date = time.formatDate(new Date(newValue));\n\t\t\t\t\t$http.get('/api/report-oroomactivity' + '/?date=' + date).then(function (response) {\n\n\t\t\t\t\t\t$scope.counters = {\n\t\t\t\t\t\t\tstudents: 0,\n\t\t\t\t\t\t\treferredIn: 0,\n\t\t\t\t\t\t\tinOroom: 0,\n\t\t\t\t\t\t\tassignISS: 0,\n\t\t\t\t\t\t\twalkedOuts: 0,\n\t\t\t\t\t\t\tnoShows: 0,\n\t\t\t\t\t\t\tother: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\t$scope.list = response.data;\n\t\t\t\t\t\t$scope.counters.students = response.data.length;\n\t\t\t\t\t\tangular.forEach($scope.list, function (item) {\n\n\t\t\t\t\t\t\tif (item.ReferralIn === 1) {\n\t\t\t\t\t\t\t\t$scope.counters.referredIn++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tswitch (item.activity.Id) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\t$scope.counters.inOroom++;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t$scope.counters.assignISS++;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t$scope.counters.walkedOuts++;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t$scope.counters.noShows++;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\t\t\t$scope.counters.other++;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar i = 0;\n\t\t\t\t\t\tangular.forEach($scope.counters, function (item, key) {\n\t\t\t\t\t\t\tif (key !== 'students' && key !== 'referredIn')\n\t\t\t\t\t\t\t\t$scope.flotPieData[i++].data = item;\n\t\t\t\t\t\t\telse if (key === 'referredIn' ){\n\t\t\t\t\t\t\t\t$scope.flotPieDataReferralIn[0].data = item;\n\t\t\t\t\t\t\t\t$scope.flotPieDataReferralIn[1].data=  $scope.counters.students-item;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$scope.flotPieData = [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"In Oroom\",\n\t\t\t\t\tdata: 5,\n\t\t\t\t\tcolor: \"#bababa\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Assign ISS\",\n\t\t\t\t\tdata: 5,\n\t\t\t\t\tcolor: \"#79d2c0\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Walked Out's\",\n\t\t\t\t\tdata: 5,\n\t\t\t\t\tcolor: \"#1ab394\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"No Show\",\n\t\t\t\t\tdata: 5,\n\t\t\t\t\tcolor: \"#1ab394\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Other\",\n\t\t\t\t\tdata: 5,\n\t\t\t\t\tcolor: \"#1ab394\"\n\t\t\t\t}\n\t\t\t];\n\t\t\t$scope.flotPieDataReferralIn = [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"YES\",\n\t\t\t\t\tdata: 5,\n\t\t\t\t\tcolor: \"#bababa\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"NO\",\n\t\t\t\t\tdata: 5,\n\t\t\t\t\tcolor: \"#79d2c0\"\n\t\t\t\t}\n\t\t\t];\n\n\t\t\t/**\n\t\t\t * Pie Chart Options\n\t\t\t */\n\t\t\t$scope.flotPieOptions = {\n\t\t\t\tseries: {\n\t\t\t\t\tpie: {\n\t\t\t\t\t\tshow: true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgrid: {\n\t\t\t\t\thoverable: true\n\t\t\t\t},\n\t\t\t\ttooltip: true,\n\t\t\t\ttooltipOpts: {\n\t\t\t\t\tcontent: \"%p.0%, %s\", // show percentages, rounding to 2 decimal places\n\t\t\t\t\tshifts: {\n\t\t\t\t\t\tx: 20,\n\t\t\t\t\t\ty: 0\n\t\t\t\t\t},\n\t\t\t\t\tdefaultTheme: true\n\t\t\t\t}\n\t\t\t};\n\n\n\n\n\t\t}]);\n}(angular.module('Argus')));","/* global angular */\n\n(function (app) {\n\tapp.controller('ReportsProgressionCtrl', ['$scope', 'notify', '$modal', function ($scope, notify, $modal) {\n\t\t\tnotify('ReportsProgressionCtrl');\n\t\t\t$scope.startingPoints = [\n\t\t\t\t{name: 'Reteach', value: 1},\n\t\t\t\t{name: 'AEC', value: 1},\n\t\t\t\t{name: 'O-Room', value: 2},\n\t\t\t\t{name: 'O-Room+1', value: 3},\n\t\t\t\t{name: 'ISS', value: 4},\n\t\t\t\t{name: 'OSS PMP', value: 5}\n\t\t\t];\n\n\n\n\t\t\t$scope.starting = undefined;\n\t\t\t$scope.eod.issStudents1 = [\n\t\t\t\t{StudentId: '100109607', FirstName: 'Mark', LastName: 'Gonzales', Date: '12/10/2015'},\n\t\t\t\t{StudentId: '100131423', FirstName: 'Adrian ', LastName: 'Black', Date: '12/10/2015', class: 'bg-warning'},\n\t\t\t\t{StudentId: '100131834', FirstName: 'Sara ', LastName: 'Marquez', Date: '12/10/2015'},\n\t\t\t\t{StudentId: '100344318', FirstName: 'David ', LastName: 'White', Date: '12/10/2015'},\n\t\t\t\t{StudentId: '102234384', FirstName: 'Henry ', LastName: 'Lopez', Date: '12/10/2015'},\n\t\t\t\t{StudentId: '100131423', FirstName: 'Tyron ', LastName: 'Black', Date: '12/10/2015'},\n\t\t\t\t{StudentId: '100131834', FirstName: 'Sara ', LastName: 'Marquez', Date: '12/10/2015'},\n\t\t\t\t{StudentId: '100344318', FirstName: 'David ', LastName: 'White', Date: '12/10/2015'},\n\t\t\t\t{StudentId: '100131834', FirstName: 'Sara ', LastName: 'Marquez', Date: '12/10/2015'},\n\t\t\t\t{StudentId: '100344318', FirstName: 'David ', LastName: 'White', Date: '12/10/2015'}];\n\n\t\t\t$scope.eod.issStudents2 = [\n\t\t\t\t{StudentId: '100344318', FirstName: 'David ', LastName: 'White', Date: '12/11/2015'},\n\t\t\t\t{StudentId: '102234384', FirstName: 'Henry ', LastName: 'Lopez', Date: '12/11/2015'},\n\t\t\t\t{StudentId: '100131423', FirstName: 'Tyron ', LastName: 'Black', Date: '12/11/2015'},\n\t\t\t\t{StudentId: '100131834', FirstName: 'Sara ', LastName: 'Marquez', Date: '12/11/2015'},\n\t\t\t\t{StudentId: '100344318', FirstName: 'Adrian ', LastName: 'Black', Date: '12/11/2015', class: 'bg-warning'},\n\t\t\t\t{StudentId: '100131834', FirstName: 'Sara ', LastName: 'Marquez', Date: '12/11/2015'},\n\t\t\t\t{StudentId: '100344318', FirstName: 'David ', LastName: 'White', Date: '12/11/2015'}];\n\n\n\t\t\t$scope.eod.issStudents3 = [\n\t\t\t\t{StudentId: '100109607', FirstName: 'Mark', LastName: 'Gonzales', Date: '12/12/2015'},\n\t\t\t\t{StudentId: '100131423', FirstName: 'Tyron ', LastName: 'Black', Date: '12/12/2015'},\n\t\t\t\t{StudentId: '100131834', FirstName: 'Adrian ', LastName: 'Black', Date: '12/12/2015', class: 'bg-warning'},\n\t\t\t\t{StudentId: '100344318', FirstName: 'David ', LastName: 'White', Date: '12/12/2015'},\n\t\t\t\t{StudentId: '102234384', FirstName: 'Henry ', LastName: 'Lopez', Date: '12/12/2015'},\n\t\t\t\t{StudentId: '100344318', FirstName: 'David ', LastName: 'White', Date: '12/12/2015'}];\n\n\n\t\t\t$scope.eod.issStudents4 = [\n\t\t\t\t{StudentId: '100109607', FirstName: 'Mark', LastName: 'Gonzales', Date: '12/13/2015'},\n\t\t\t\t{StudentId: '100131423', FirstName: 'Tyron ', LastName: 'Black', Date: '12/13/2015'},\n\t\t\t\t{StudentId: '100131834', FirstName: 'Adrian ', LastName: 'Black', Date: '12/13/2015', class: 'bg-warning'},\n\t\t\t\t{StudentId: '100131834', FirstName: 'Sara ', LastName: 'Marquez', Date: '12/13/2015'},\n\t\t\t\t{StudentId: '100344318', FirstName: 'David ', LastName: 'White', Date: '12/13/2015'}];\n\n\t\t\t$scope.eod.issStudents5 = [\n\t\t\t\t{StudentId: '100344318', FirstName: 'David ', LastName: 'White', Date: '12/14/2015'},\n\t\t\t\t{StudentId: '100131834', FirstName: 'Adrian ', LastName: 'Black', Date: '12/14/2015', class: 'bg-warning'},\n\t\t\t\t{StudentId: '100344318', FirstName: 'David ', LastName: 'White', Date: '12/14/2015'}];\n\t\t\t$scope.selected = $scope.eod.issStudents1[1];\n\t\t}]);\n}(angular.module('Argus')));\n","/* global angular */\n\n(function (app) {\n\tapp.controller('IssFollowupListCtrl', \n\t['$scope', 'notify','ISSService','$modal', function ($scope, notify, isss, $modal) {\n\t\t\t$scope.iss = isss.query({followup:true});\n\t\t\t\n\t\t\t$scope.issFollowupAttendance = function (student,$index) {\n\t\t\t\tvar modalInstance = $modal.open({\n\t\t\t\t\ttemplateUrl: 'views/modals/ISSFollowupModal.html',\n\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\tsize: 'lg',\n\t\t\t\t\tcontroller: function ($scope, student, teachers) {\n\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t$scope.currentDate = new Date();\n\t\t\t\t\t\t$scope.teachers = teachers.query();\n\t\t\t\t\t\t$scope.$watch('form.date.$viewValue', function(newV, oldV){\n\t\t\t\t\t\t\tstudent.date = newV?newV:oldV;\n\t\t\t\t\t\t\tconsole.log(newV);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\treturn student;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tmodalInstance.result.then(function () {// on SUBMIT\n\t\t\t\t\t// post the comment and other things to the database \n\t\t\t\t\tisss.update({id:student.Id ,followup:true },{\n\t\t\t\t\t\tDate: student.date,\n\t\t\t\t\t\tTime: student.time,\n\t\t\t\t\t\tActionType: 46,\n\t\t\t\t\t\tComment: student.comment,\n\t\t\t\t\t\tStudentId: student.StudentId,\n\t\t\t\t\t\tTeacherId: student.teacher.id\n\t\t\t\t\t}, function(data){\n\t\t\t\t\t\tnotify(data.msg);\n\t\t\t\t\t\t$scope.iss.splice($index,1);\n\t\t\t\t\t}, function(error){\n\t\t\t\t\t\tnotify('error');\n\t\t\t\t\t});\n\n\t\t\t\t\t \n\t\t\t\t\t//$scope.selected.student = null;\n\t\t\t\t}, function () {// on modal DISMISS\n\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t};\n\t\t}]);\n}(angular.module('Argus')));\n\n","/* global angular */\n\n(function (app) {\n\tapp.controller('IssListCtrl', ['$scope', 'notify', '$modal', 'ISSService',\n\t\tfunction ($scope, notify, $modal, isss) {\n\t\t\t$scope.iss = isss.query({roster: true});\n\t\t\t\n\t\t\t$scope.getISSList = function(){\n\t\t\t\t$scope.iss = isss.query({roster: true});\n\t\t\t};\n\t\t\t$scope.activities = [\n\t\t\t\t{name: \"Present\", Id:38 },\n//\t\t\t\t{name: \"No Show\", Id: 12},\n\t\t\t\t{name: \"Left School\", Id: 40},\n\t\t\t\t{name: \"School Absent\", Id: 41},\n\t\t\t\t{name: \"Sent Out\", Id: 42},\n\t\t\t\t{name: \"Walked Out\", Id: 43}\n\t\t\t];\n\n\t\t\t$scope.issAttendance = function (item,  oldActValue) {\n\t\t\t\t//oldActValue = oldActValue?angular.fromJson(oldActValue) : '';\n\t\t\t\t\n//\t\t\t\tif(item.activity.Id === 13 || item.activity.Id === 14  ){\n//\t\t\t\t\tvar confirmation = confirm('Are you sure the student activity is '+ item.activity.name\n//\t\t\t\t\t\t+ '. A push notification will be sent to all users');\n//\t\t\t\t\t\n//\t\t\t\t\tif(!confirmation){\n//\t\t\t\t\t\titem.activity = oldActValue;\n//\t\t\t\t\t\treturn;\n//\t\t\t\t\t}\n\t\t\t\t\t\n//\t\t\t\t\tvar modalInstance = $modal.open({\n//\t\t\t\t\t\ttemplateUrl: 'views/modals/ISSNotificationDocumentationModal.html',\n//\t\t\t\t\t\tsize: 'lg',\n//\t\t\t\t\t\tcontroller:function($scope, student){\n//\t\t\t\t\t\t\t$scope.student  = student;\n//\t\t\t\t\t\t\t$scope.title = 'ISS'\n//\t\t\t\t\t\t},\n//\t\t\t\t\t\tresolve: {\n//\t\t\t\t\t\t\tstudent :function(){return item;}\n//\t\t\t\t\t\t}\n//\t\t\t\t\t});\n//\t\t\t\t\t\n//\t\t\t\t\tmodalInstance.result.then(function(data){\n//\t\t\t\t\t\t// submit notification\n//\t\t\t\t\t});\n//\t\t\t\t\n//\t\t\t\t\t\n//\t\t\t\t\n//\t\t\t\t\n//\t\t\t\t\n\t\t\t\t\n\t\t\t\t//}\n\t\t\t\t\n\t\t\t\tif (!item) {\n\t\t\t\t\tisss.update({id: item.referred[0].Id, attendance: true}, {\n\t\t\t\t\t\tActivityTypeId: 0\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//console.log(item);\n\t\t\t\tisss.update({id: item.referred[0].Id, attendance: true}, {\n\t\t\t\t\tActivityTypeId: item.activity? item.activity.Id:0\n\t\t\t\t});\n\n\t\t\t};\n\t\t}]);\n}(angular.module('Argus')));\n ","/* global angular */\n\n(function (app) {\n\t\"use strict\";\n\tapp.controller('NavigationISSCtrl', function () {\n\t\tvar path = \"../Client/Views/dashItems/\";\n\t\tvar vm = this;\n\t\t/**\n\t\t * Navigation bar places with their links and icons\n\t\t */\n\t\tvm.tabs = [\n\t\t\t\n\t\t\t{\n\t\t\t\tid: 'ISS List',\n\t\t\t\tlink: \"iss.Lists.iss\",\n\t\t\t\ticon: 'list-alt fa-2x'\n\t\t\t}, {\n\t\t\t\tid: 'ISS Followup List',\n\t\t\t\tlink: \"iss.pending\",\n\t\t\t\ticon: 'exclamation fa-2x'\n\t\t\t}\n\t\t];\n\t});\n}(angular.module('Argus')));\n\n","(function (app) {\n\tapp.controller('ActivitiesCtrl', ['$scope', function ($scope) {\n\t\t\t\n\t\t}]);\n}(angular.module('Argus')));\n","/* global angular */\n\n(function (app) {\n\tapp.controller('ReferralsCtrl',\n\t\t['$scope', 'AdminReferralsService', 'UserActionsService', 'SchoolsService', 'StudentsService', 'ActivitiesService','CountersService', '$http', 'notify','$q',\n\t\t\tfunction ($scope, referrals, actions, schools, students, activities, counters, $http, notify, $q) {\n\t\t\t\t$scope.selected = {};\n\t\t\t\t$scope.referral = {};\n\t\t\t\t$scope.action = {};\n\t\t\t\t$scope.schools = schools.query();\n\t\t\t\t$scope.activities = activities.query();\n\n\t\t\t\t$scope.getSchoolStudents = function (school) {\n\t\t\t\t\t$scope.students = students.query({schoolId: school.Id});\n\t\t\t\t};\n\n\t\t\t\t$scope.getAll = function () {\n\t\t\t\t\tvar student = $scope.selected.student;\n\t\t\t\t\t$scope.referrals = referrals.query({id: student.Id});\n\t\t\t\t\t$scope.actions = actions.query({id: student.Id});\n\t\t\t\t\t$scope.counters = counters.get({id:student.Id});\n\t\t\t\t};\n\n\t\t\t\t$scope.getReferrals = function () {\n\t\t\t\t\tvar student = $scope.selected.student;\n\t\t\t\t\t$scope.referrals = referrals.query({id: student.Id});\n\t\t\t\t};\n\t\t\t\t$scope.getActions = function () {\n\t\t\t\t\tvar student = $scope.selected.student;\n\t\t\t\t\t$scope.actions = actions.query({id: student.Id});\n\t\t\t\t};\n\t\t\t\t$scope.getCounter = function(){\n\t\t\t\t\tvar student = $scope.selected.student;\n\t\t\t\t\t$scope.counters = counters.get({id:student.Id});\n\t\t\t\t};\n\n\t\t\t\t$http.get('api/referraltypes').then(function (response) {\n\t\t\t\t\t$scope.referraltypes = response.data;\n\t\t\t\t});\n\n\t\t\t\t$scope.referralUpdate = function (referral) {\n\t\t\t\t\tconsole.log(referral); \n\n\t\t\t\t\t// do an update request\n\t\t\t\t};\n\t\t\t\t$scope.actionUpdate = function (action) {\n\t\t\t\t\tconsole.log(action);\n\t\t\t\t\t// do an update request\n\t\t\t\t};\n\n\t\t\t\t$scope.selectItem = function (item) {\n\t\t\t\t\t$scope.referral = item;\n\t\t\t\t};\n\n\t\t\t\t$scope.onDeleteReferral = function ($index, showNotification,remove) {\n\t\t\t\t\tvar item = $scope.referrals[$index];\n\t\t\t\t\treturn referrals.remove({id: item.Id}, function () {\n\t\t\t\t\t\tremove && $scope.referrals.splice($index, 1);\n\t\t\t\t\t\tshowNotification && notify('successfully deleted');\n\t\t\t\t\t}, function () {\n\t\t\t\t\t\tnotify('error');\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t$scope.deleteAllReferrals = function () {\n\t\t\t\t\tvar promises = [];\n\t\t\t\t\tangular.forEach($scope.referrals, function (item, $index) {\n\t\t\t\t\t\tvar promise = $scope.onDeleteReferral($index, false,false).$promise;\n\t\t\t\t\t\t\n\t\t\t\t\t\tpromises.push(promise);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$q.all(promises).then(function (){\n\t\t\t\t\t\t$scope.referrals = [];\n\t\t\t\t\t});\n\t\t\t\t\t\n\n\t\t\t\t};\n\t\t\t\t$scope.deleteAllActions = function () {\n\t\t\t\t\tvar promises = [];\n\t\t\t\t\tangular.forEach($scope.actions, function (item, $index) {\n\t\t\t\t\t\tvar promise = $scope.onDeleteAction($index, false, false).$promise;\n\t\t\t\t\t\tdebugger;\n\t\t\t\t\t\tpromises.push(promise);\n\t\t\t\t\t});\n\t\t\t\t\t$q.all(promises).then(function (){\n\t\t\t\t\t\t$scope.actions = [];\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t};\n\n\t\t\t\t$scope.onDeleteAction = function ($index, showNotification,remove) {\n\t\t\t\t\tvar item = $scope.actions[$index];\n\t\t\t\t\treturn actions.remove({id: item.Id}, function () {\n\t\t\t\t\t\tremove && $scope.actions.splice($index, 1);\n\t\t\t\t\t\tshowNotification && notify('successfully deleted');\n\t\t\t\t\t}, function () {\n\t\t\t\t\t\tnotify('error');\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}]);\n}(angular.module('Argus')));\n","/* global angular */\r\n\r\n(function (app) {\r\n\t\"use strict\";\r\n\tapp.config(['$stateProvider', '$urlRouterProvider', '$ocLazyLoadProvider', '$provide',\r\n\t\tfunction ($stateProvider, $urlRouterProvider, $ocLazyLoadProvider, $provide) {\r\n\r\n\t\t\t$stateProvider\r\n\t\t\t\t.state('sysadmin', {\r\n\t\t\t\t\tabstract: true,\r\n\t\t\t\t\turl: \"/sysadmin\",\r\n\t\t\t\t\ttemplateUrl: \"views/common/contentArgus.html\",\r\n\t\t\t\t\tcontroller: \"NavigationSysAdminCtrl\",\r\n\t\t\t\t\tcontrollerAs: 'navigation',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/chartJs/Chart.min.js', 'js/plugins/footable/footable.all.min.js', 'css/plugins/footable/footable.core.css']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'angles',\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/chartJs/angles.js']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/footable/footable.all.min.js', 'css/plugins/footable/footable.core.css']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'ui.footable',\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/footable/angular-footable.js']\r\n\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\tinsertBefore: '#loadBefore',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/fullcalendar/fullcalendar.css', 'js/plugins/fullcalendar/fullcalendar.min.js', 'js/plugins/fullcalendar/gcal.js']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'ui.calendar',\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/fullcalendar/calendar.js']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tinsertBefore: '#loadBefore',\r\n\t\t\t\t\t\t\t\t\tname: 'localytics.directives',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/chosen/chosen.css', 'js/plugins/chosen/chosen.jquery.js', 'js/plugins/chosen/chosen.js']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'cgNotify',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/angular-notify/angular-notify.min.css', 'js/plugins/angular-notify/angular-notify.min.js']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'ui.slimscroll',\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/slimscroll/angular.slimscroll.js']\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.dashboard', {\r\n\t\t\t\t\turl: \"/dashboard\",\r\n\t\t\t\t\ttemplateUrl: 'views/sysadmin/dashboard.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Dashboard'},\r\n\t\t\t\t\tcontroller: \"DashAdmin1Ctrl\",\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfiles: ['js/plugins/d3/d3.min.js', \"js/plugins/jquery-tipsy/jquery.tipsy.js\", \"css/plugins/gauge/gauge_small.css\", \"css/plugins/gauge/gauge.css\"]\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\t.state('sysadmin.referrals', {\r\n\t\t\t\t\turl: \"/Referrals\",\r\n\t\t\t\t\ttemplateUrl: 'views/sysadmin/referrals.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Referral'},\r\n\t\t\t\t\tcontroller: 'ReferralsCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.activities', {\r\n\t\t\t\t\turl: \"/Activities\",\r\n\t\t\t\t\ttemplateUrl: 'views/sysadmin/activities.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Referral'},\r\n\t\t\t\t\tcontroller: 'ActivitiesCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.users', {\r\n\t\t\t\t\turl: \"/Users\",\r\n\t\t\t\t\ttemplateUrl: 'views/sysadmin/users.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Referral'},\r\n\t\t\t\t\tcontroller: 'UsersCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t.state('sysadmin.referral', {\r\n\t\t\t\t\turl: \"/adminReferral\",\r\n\t\t\t\t\ttemplateUrl: 'views/admin1/Referral.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Referral'},\r\n\t\t\t\t\tcontroller: 'admin1referalController',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.AECList', {\r\n\t\t\t\t\turl: \"/AECList\",\r\n\t\t\t\t\ttemplateUrl: 'views/sharedItems/manageAEC.html',\r\n\t\t\t\t\tdata: {pageTitle: 'AEC List'},\r\n\t\t\t\t\tcontroller: 'manageAECController',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'BarcodeGenerator',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/barcode/barcode.css', 'js/plugins/barcode/barcode.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.pending', {\r\n\t\t\t\t\turl: \"/pending\",\r\n\t\t\t\t\ttemplateUrl: 'views/sharedItems/manageAECabsence.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Pending'},\r\n\t\t\t\t\tcontroller: 'manageAECAbsenceController',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.studentData', {\r\n\t\t\t\t\turl: \"/studentData\",\r\n\t\t\t\t\ttemplateUrl: 'views/sharedItems/studentInfo.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Student Data'},\r\n\t\t\t\t\tcontroller: 'studentInfoCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.createStudentPass', {\r\n\t\t\t\t\turl: \"/createStudentPass\",\r\n\t\t\t\t\ttemplateUrl: 'views/sharedItems/multiplePasses.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Create Pass'}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.oroomActivityLogAdmin', {\r\n\t\t\t\t\turl: \"/OroomActivityLogA\",\r\n\t\t\t\t\ttemplateUrl: 'views/admin2/oroomActivityLogAdmin.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Oroom Activity Log'},\r\n\t\t\t\t\tcontroller: 'oRoomActivityLogAdminCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\t/* oroom Activity Log */\r\n\t\t\t\t.state('sysadmin.oroomActivitiLog', {\r\n\t\t\t\t\turl: \"/OroomActivityLog\",\r\n\t\t\t\t\ttemplateUrl: 'views/admin2/oroomActivityLog.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Oroom Activity Log'},\r\n\t\t\t\t\tcontroller: 'oRoomActivityLogCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\t.state('sysadmin.oroomActivitiLog.oroom', {\r\n\t\t\t\t\turl: \"/Oroom\",\r\n\t\t\t\t\ttemplateUrl: 'views/live/oroom.html',\r\n\t\t\t\t\tdata: {pageTitle: 'oroom'},\r\n\t\t\t\t\tcontroller: 'OroomLiveCtrl',\r\n\t\t\t\t\tresolve: {}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.oroomActivitiLog.lunchDetention', {\r\n\t\t\t\t\turl: \"/LunchDetention\",\r\n\t\t\t\t\ttemplateUrl: 'views/live/lunchDetention.html',\r\n\t\t\t\t\tdata: {pageTitle: 'LunchD'},\r\n\t\t\t\t\tcontroller: 'LunchDetentionLiveCtrl',\r\n\t\t\t\t\tresolve: {}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.oroomActivitiLog.iss', {\r\n\t\t\t\t\turl: \"/ISS\",\r\n\t\t\t\t\ttemplateUrl: 'views/live/iss.html',\r\n\t\t\t\t\tdata: {pageTitle: 'ISS'},\r\n\t\t\t\t\tcontroller: 'ISSLiveCtrl',\r\n\t\t\t\t\tresolve: {}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.oroomActivitiLog.oss', {\r\n\t\t\t\t\turl: \"/OSS\",\r\n\t\t\t\t\ttemplateUrl: 'views/live/oss.html',\r\n\t\t\t\t\tdata: {pageTitle: 'OSS'},\r\n\t\t\t\t\tcontroller: 'OSSLiveCtrl',\r\n\t\t\t\t\tresolve: {}\r\n\t\t\t\t})\r\n\r\n\r\n\t\t\t\t.state('sysadmin.CoordinatorReferralSystem', {\r\n\t\t\t\t\turl: \"/OroomCoordinatorReferral\",\r\n\t\t\t\t\ttemplateUrl: 'views/admin2/referralSystem.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Referral'},\r\n\t\t\t\t\tcontroller: 'ORoomCoordinatorReferralCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/clockpicker/clockpicker.css', 'js/plugins/clockpicker/clockpicker.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\t/* Attendance Rosters */\r\n\t\t\t\t.state('sysadmin.attendanceRosters', {\r\n\t\t\t\t\turl: \"/attendanceRosters\",\r\n\t\t\t\t\ttemplateUrl: 'views/admin2/attendanceRosters.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Referral'},\r\n\t\t\t\t\tcontroller: 'attendanceRostersCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/clockpicker/clockpicker.css', 'js/plugins/clockpicker/clockpicker.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.attendanceRosters.oroom', {\r\n\t\t\t\t\turl: \"/Oroom\",\r\n\t\t\t\t\ttemplateUrl: 'views/rosters/oroom.html',\r\n\t\t\t\t\tdata: {pageTitle: 'oroom'},\r\n\t\t\t\t\tcontroller: 'OroomRosterCtrl',\r\n\t\t\t\t\tresolve: {}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.attendanceRosters.lunchDetention', {\r\n\t\t\t\t\turl: \"/LunchDetention\",\r\n\t\t\t\t\ttemplateUrl: 'views/rosters/lunchDetention.html',\r\n\t\t\t\t\tdata: {pageTitle: 'LunchD'},\r\n\t\t\t\t\tcontroller: 'LunchDetentionRosterCtrl',\r\n\t\t\t\t\tresolve: {}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.attendanceRosters.iss', {\r\n\t\t\t\t\turl: \"/ISS\",\r\n\t\t\t\t\ttemplateUrl: 'views/rosters/iss.html',\r\n\t\t\t\t\tdata: {pageTitle: 'ISS'},\r\n\t\t\t\t\tcontroller: 'ISSRosterController',\r\n\t\t\t\t\tresolve: {}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.attendanceRosters.oss', {\r\n\t\t\t\t\turl: \"/OSS\",\r\n\t\t\t\t\ttemplateUrl: 'views/rosters/oss.html',\r\n\t\t\t\t\tdata: {pageTitle: 'OSS'},\r\n\t\t\t\t\tcontroller: 'OSSRosterController',\r\n\t\t\t\t\tresolve: {}\r\n\t\t\t\t})\r\n\r\n\r\n\r\n\t\t\t\t/* Reports */\r\n\t\t\t\t.state('sysadmin.reports', {\r\n\t\t\t\t\turl: '/Reports',\r\n\t\t\t\t\ttemplateUrl: 'views/reports/reports.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Reports'},\r\n\t\t\t\t\tcontroller: 'ReportsCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tname: 'datePicker',\r\n\t\t\t\t\t\t\t\t\tfiles: ['css/plugins/datapicker/angular-datapicker.css', 'js/plugins/datapicker/angular-datepicker.js']\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t])\r\n\t\t\t\t\t\t\t\t;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.reports.eod', {\r\n\t\t\t\t\turl: '/EOD',\r\n\t\t\t\t\ttemplateUrl: 'views/reports/reports.eod.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Reports'},\r\n\t\t\t\t\tcontroller: 'ReportsEODCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tserie: true,\r\n\t\t\t\t\t\t\t\t\tname: 'angular-flot',\r\n\t\t\t\t\t\t\t\t\tfiles: [\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/jquery.flot.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/jquery.flot.time.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/jquery.flot.tooltip.min.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/jquery.flot.spline.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/jquery.flot.resize.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/jquery.flot.pie.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/curvedLines.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/angular-flot.js' ]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.reports.oroomActivity', {\r\n\t\t\t\t\turl: '/OroomActivity',\r\n\t\t\t\t\ttemplateUrl: 'views/reports/reports.oroomActivity.html',\r\n\t\t\t\t\tdata: {pageTitle: 'OroomActivity'},\r\n\t\t\t\t\tcontroller: 'ReportsOroomActivityCtrl',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tloadPlugin: function ($ocLazyLoad) {\r\n\t\t\t\t\t\t\treturn $ocLazyLoad.load([\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tserie: true,\r\n\t\t\t\t\t\t\t\t\tname: 'angular-flot',\r\n\t\t\t\t\t\t\t\t\tfiles: [\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/jquery.flot.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/jquery.flot.time.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/jquery.flot.tooltip.min.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/jquery.flot.spline.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/jquery.flot.resize.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/jquery.flot.pie.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/curvedLines.js',\r\n\t\t\t\t\t\t\t\t\t\t'js/plugins/flot/angular-flot.js' ]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.reports.progression', {\r\n\t\t\t\t\turl: '/Progression',\r\n\t\t\t\t\ttemplateUrl: 'views/reports/reports.progression.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Reports'},\r\n\t\t\t\t\tcontroller: 'ReportsProgressionCtrl'\r\n\t\t\t\t})\r\n\t\t\t\t.state('sysadmin.reports.atRisk', {\r\n\t\t\t\t\turl: '/At_Risk',\r\n\t\t\t\t\ttemplateUrl: 'views/reports/reports.atRisk.html',\r\n\t\t\t\t\tdata: {pageTitle: 'Reports'},\r\n\t\t\t\t\tcontroller: 'ReportsAtRiskCtrl'\r\n\t\t\t\t});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t}]);\r\n\r\n}(angular.module('Argus')));","/* global angular */\n\n(function (app) {\n\tapp.controller('UsersCtrl',\n\t\t['$scope', 'UsersService', 'RolesService','StudentsService', 'notify','$modal','$rootScope', \n\t\t\tfunction ($scope, users, roles,students, notify, $modal, $rootScope) {\n\t\t\t\t$scope.selected = {};\n\t\t\t\t$scope.userInfo = {};\n\t\t\t\t$scope.roles = roles.query();\n\t\t\t\t$scope.showLoginFields = false;\n\t\t\t\t$scope.schools = [\n\t\t\t\t\t{Id: 1, Name: 'Estacado High School'},\n\t\t\t\t\t{Id: 2, Name: 'Dunbar College Preparatory Academy'},\n\t\t\t\t\t{Id: 3, Name: 'Ervin Elementary School'},\n\t\t\t\t\t{Id: 4, Name: 'Adrian School'}\n\t\t\t\t];\n\t\t\t\tvar openCreateNewStudent = function () {\n\t\t\t\t\tvar student = {UserInfo: {}, StuInfo: {}, ProfessorClasses: []};\n\t\t\t\t\tvar modalInstance = $modal.open({\n\t\t\t\t\t\ttemplateUrl: 'views/modals/CreateStudentModal.html',\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t\tcontroller: function ($scope, student, ProfessorClassesService) {\n\t\t\t\t\t\t\t$scope.schools = [\n\t\t\t\t\t\t\t\t{Id: 1, Name: 'Estacado High School'},\n\t\t\t\t\t\t\t\t{Id: 2, Name: 'Dunbar College Preparatory Academy'},\n\t\t\t\t\t\t\t\t{Id: 3, Name: 'Ervin Elementary School'},\n\t\t\t\t\t\t\t\t{Id: 4, Name: 'Adrian School'}\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t$scope.classes = ProfessorClassesService.query();\n\t\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\t\treturn student;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tmodalInstance.result.then(function () {// on SUBMIT\n\t\t\t\t\t\t\tstudent.StuInfo.StudentId = student.UserInfo.UserName;\n\t\t\t\t\t\t\tstudent.UserInfo.SchoolId = student.UserInfo.SchoolId.Id;\n\t\t\t\t\t\t\tangular.forEach(student.ProfessorClasses, function (item) {\n\t\t\t\t\t\t\t\tconsole.log(item);\n\t\t\t\t\t\t\t\titem.ProfessorClassId = item.ProfessorClass.Id;\n\t\t\t\t\t\t\t\tdelete item.ProfessorClass;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tstudent.userInfo = student.UserInfo;\n\t\t\t\t\t\t\tstudents.save(student, function (data) {\n\t\t\t\t\t\t\t\tstudents.query({admin: true, light: true}, function (data) {\n\t\t\t\t\t\t\t\t\tstudents.students = data;\n\t\t\t\t\t\t\t\t\t$rootScope.$broadcast('studentsUpdated', {students: data});\n\t\t\t\t\t\t\t\t});\n\n\n\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, function () {// on modal DISMISS\n\n\t\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t$scope.onRoleChanged = function () {\n\t\t\t\t\tvar role = $scope.selected.role;\n\t\t\t\t\tif (!(role.Name === \"Teacher\" || role.Name === \"Student\")) {\n\t\t\t\t\t\t$scope.showLoginFields = true;\n\t\t\t\t\t\t$scope.showStudentFields = false;\n\t\t\t\t\t}\n\t\t\t\t\telse if (role.Name === \"Student\") {\n\t\t\t\t\t\topenCreateNewStudent();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$scope.showLoginFields = false;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t$scope.createUser = function () {\n\t\t\t\t\t// remove objects/arrays from userInfo\n\t\t\t\t\t$scope.userInfo.SchoolId = $scope.userInfo.SchoolId.Id;\n\t\t\t\t\t\n\t\t\t\t\tusers.save({\n\t\t\t\t\t\tuserInfo: $scope.userInfo,\n\t\t\t\t\t\trole: $scope.selected.role\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tnotify('user successfully Saved');\n\t\t\t\t\t\t$scope.userInfo = {};\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}]); \n}(angular.module('Argus')));\n\n\n","/* global angular */\r\n\r\n(function (app) {\r\n\t\"use strict\";\r\n\tapp\r\n\t\t.controller(\"ManageReteachAbsenceCtrl\",\r\n\t\t\t[\"$scope\", \"$modal\", \"referrals\", \"PassesService\", \"UserActionsService\", 'notify', 'ReteachAbsenceListService','UtilService',\r\n\t\t\t\tfunction ($scope, $modal, referrals, passes, useractions, notify, aec,utils) {\r\n\t\t\t\t\t$scope.selected = {};\r\n\t\t\t\t\t$scope.refTable = [];// table model\r\n\t\t\t\t\t$scope.currentDate = new Date(); // date on the date picker\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Watch for changes in the datepicker then load the AECAbsence list\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.$watch('form.date.$viewValue', function (newVal, oldVal) {\r\n\r\n\t\t\t\t\t\tif (newVal) {//when date has a valid date request the List from that date\r\n\t\t\t\t\t\t\t$scope.currentDate = newVal;\r\n\t\t\t\t\t\t\tconsole.log(\"newVal = \" + $scope.form.date.$viewValue);\r\n\r\n\t\t\t\t\t\t\t$scope.refTable = aec.query({id: newVal, absence: true}, function (data) {\r\n \r\n\t\t\t\t\t\t\t\tif (!data.length) {\r\n\t\t\t\t\t\t\t\t\tnotify({message: \"No students for current date\",\r\n\t\t\t\t\t\t\t\t\t\tclasses: 'alert-warning', templateUrl: 'views/common/notify.html'});\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t$scope.passesTable = data;\r\n\t\t\t\t\t\t\t\t\tangular.forEach($scope.refTable, function (student) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tstudent.status = [false, true];\r\n\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Makes API call to get a pdf of the AECAbsence passes for the students\r\n\t\t\t\t\t * assigned AEC for the current date\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.getPasses = function () {\r\n\t\t\t\t\t\tnotify({message: \"Now Generating Passes\",\r\n\t\t\t\t\t\t\tclasses: 'alert-successs', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t\t$scope.getPasses = function () {\r\n\t\t\t\t\t\t\tpasses.pdf({date: $scope.currentDate, param: 'absence'}, function (data) {\r\n\t\t\t\t\t\t\t\tvar fileURL = URL.createObjectURL(data.response);\r\n\t\t\t\t\t\t\t\twindow.open(fileURL);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Select the student that is clicked in the table so that the user doesn't \r\n\t\t\t\t\t * have to type it \r\n\t\t\t\t\t * @param {int} $index: reftable index of the clicked student \r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.onSelect = function ($index) {\r\n\t\t\t\t\t\t$scope.selected.student = $scope.refTable[$index];\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.reteachListToCSV = function () {\r\n\t\t\t\t\t\t\t//headings\r\n\t\t\t\t\t\t\tvar text = 'Teacher FirstName, Teacher LastName, Student FirstName,Student LastName,StudentId, Grade, Date\\n';\r\n\t\t\t\t\t\t\tangular.forEach($scope.refTable, function (item) { \r\n\t\t\t\t\t\t\t\ttext += item.referred[0].teacher.FirstName +','+item.referred[0].teacher.LastName+','; \r\n\t\t\t\t\t\t\t\ttext += item.FirstName + ',' + item.LastName + ',' + item.UserName +',';\r\n\t\t\t\t\t\t\t\ttext +=  item.student.Grade + ','+ item.referred[0].Date;\r\n\t\t\t\t\t\t\t\ttext += ' \\n';\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tutils.downloadCSV(text, 'Reteach-Followup-List_'+ $scope.currentDate);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t/******** MANAGE AEC Absence **********/\r\n\t\t\t\t\t// for the next submit functions remove student from list self-reducing list.\r\n\t\t\t\t\t// To avoid duplicate profile entries only 1 entry should be created in\r\n\t\t\t\t\t// useractions table and all referrals must be changed in referrals \r\n\t\t\t\t\t// table (see backend implementation)\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * PUT API call to change the referral status to referred (ReferralStatus 0)\r\n\t\t\t\t\t * as well as loggin it in the user actions for the profile \r\n\t\t\t\t\t * @param {object} data: information returned by modal \r\n\t\t\t\t\t * \t(noShow,walkOut, SentOut, schoolAbsent, disciplinary, clear,comment )\r\n\t\t\t\t\t */\r\n\t\t\t\t\tvar submitComment = function (data) {// data:{comment, noShow, walkOut, sentOut}\r\n\t\t\t\t\t\tvar student = $scope.selected.student;\r\n\t\t\t\t\t\tvar status = data.noShow ? 0 : data.walkOut ? 1 : data.sentOut ? 2 : data.schoolAbsent ? 3 : data.disciplinary ? 4 : data.clear ? 5 : -1;\r\n\r\n\t\t\t\t\t\t// submit info of student '$scope.selected.student' to database\r\n\t\t\t\t\t\tvar dataToSent = {param: 'AbsentComment', comment: data.comment, status: status}\r\n\t\t\t\t\t\treferrals.update({id: student.id}, dataToSent);\r\n\r\n\t\t\t\t\t\tvar indexOfStudent = $scope.refTable.indexOf($scope.selected.student);\r\n\t\t\t\t\t\t$scope.refTable.splice(indexOfStudent, 1);\r\n\t\t\t\t\t\t$scope.selected.student = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/********** MODALS   **********/\r\n\t\t\t\t\t/** Comment Modal\r\n\t\t\t\t\t * Opens the Comment modal and passes in the student selected to be available\r\n\t\t\t\t\t * in the modal context, calls the SubmitComment function when modal\r\n\t\t\t\t\t * submit button is clicked, does nothing otherwise\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.openComment = function (student) {\r\n\r\n\t\t\t\t\t\tconsole.log(student)\r\n\t\t\t\t\t\tvar commentModal = $modal.open({\r\n\t\t\t\t\t\t\ttemplateUrl: 'views/modals/ReteachCommentAbsenceModal.html',\r\n\t\t\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\t\t\tcontroller: function ($scope, student) {\r\n\t\t\t\t\t\t\t\t$scope.title = \"Reteach Followup Attendance\";\r\n\t\t\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\t\t\tstudent: function () {\r\n\t\t\t\t\t\t\t\t\treturn student;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})// End commentModal\r\n\r\n\t\t\t\t\t\tcommentModal.result.then(function (data) {\r\n\t\t\t\t\t\t\tif (student.radioModel == 66 || student.radioModel == 67) {\r\n\t\t\t\t\t\t\t\tvar referralIds = student.referred.map(function (o) {\r\n\t\t\t\t\t\t\t\t\treturn o.Id;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar payload = {\r\n\t\t\t\t\t\t\t\t\tActionType: student.radioModel,\r\n\t\t\t\t\t\t\t\t\tComment: student.comment,\r\n\t\t\t\t\t\t\t\t\tDate: $scope.currentDate,\r\n\t\t\t\t\t\t\t\t\treferrals: referralIds,\r\n\t\t\t\t\t\t\t\t\treferred: student.referred\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\taec.update({id: student.id}, payload, function (data) {\r\n\t\t\t\t\t\t\t\t\tnotify(data.msg);\r\n\t\t\t\t\t\t\t\t}, function (error) {\r\n\t\t\t\t\t\t\t\t\tnotify('error, Before continuing please contact a System Administrator');\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar referred = student.referred.map(function(o){\r\n\t\t\t\t\t\t\t\t\treturn {Id: o.Id};\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tangular.forEach(student.referred, function (item) {\r\n\t\t\t\t\t\t\t\t\tvar urlEncoded = {id: item.Id};\r\n\t\t\t\t\t\t\t\t\tvar payload = {\r\n\t\t\t\t\t\t\t\t\t\tparam: 'attendance',\r\n\t\t\t\t\t\t\t\t\t\tFolders: item.selected ? true : false,\r\n\t\t\t\t\t\t\t\t\t\tActionType: student.radioModel,\r\n\t\t\t\t\t\t\t\t\t\tComment: student.comment,\r\n\t\t\t\t\t\t\t\t\t\tDate: $scope.currentDate,\r\n\t\t\t\t\t\t\t\t\t\tReferrals: referred\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\taec.update(urlEncoded, payload, function (data) {\r\n\t\t\t\t\t\t\t\t\t\t//notify(data.msg);\r\n\t\t\t\t\t\t\t\t\t}, function (error) {\r\n\t\t\t\t\t\t\t\t\t\tnotify('error, Before continuing please contact an admin');\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tvar indexOfStudent = $scope.refTable.indexOf($scope.selected.student);\r\n\t\t\t\t\t\t$scope.refTable.splice(indexOfStudent, 1);\r\n\t\t\t\t\t\t$scope.selected.student = null;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t}])\r\n}(angular.module('Argus')));","/* global angular */\r\n\r\n(function (app) {\r\n\t\"use strict\";\r\n\tapp\r\n\t\t.controller(\"ManageReteachCtrl\", [\"$scope\", \"$filter\", \"$modal\", \"referrals\", \"PassesService\",\r\n\t\t\t\"StudentsService\", \"notify\", \"ReteachListService\",'UtilService',\r\n\t\t\tfunction ($scope, $filter, $modal, referrals, passes, students, notify, aec,utils) {\r\n\t\t\t\t$scope.selected = {};\r\n\t\t\t\t$scope.refTable = [];// table model\r\n\t\t\t\t$scope.currentDate = new Date();\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Watch for changes in the datepicker then load the AECList \r\n\t\t\t\t * For the selected Date. Also adjusts data received\r\n\t\t\t\t * to be easily shown in the view\r\n\t\t\t\t */\r\n\t\t\t\t$scope.$watch('form.date.$viewValue', function (newVal) {\r\n\r\n\t\t\t\t\tif (newVal) {//when date has a valid date request the List from that date\r\n\t\t\t\t\t\t$scope.currentDate = newVal;\r\n\t\t\t\t\t\tconsole.log(\"newVal = \" + $scope.form.date.$viewValue);\r\n\t\t\t\t\t\t$scope.refTable = aec.query({id: newVal}, function (data) {\r\n\t\t\t\t\t\t\tangular.forEach(data, function (student) {\r\n\t\t\t\t\t\t\t\tstudent.status = {classs: '', action: ''};\r\n\t\t\t\t\t\t\t\tstudent.ActivityTypeId = 0;\r\n\t\t\t\t\t\t\t\tangular.forEach(student.referred, function (ref) {\r\n\t\t\t\t\t\t\t\t\tvar counters = student.counters;\r\n\r\n\t\t\t\t\t\t\t\t\tif (counters && counters.ORoomsToBeServed > 0) {\r\n\t\t\t\t\t\t\t\t\t\tstudent.overlap = {place: 'Has Oroom', class: 'bg-danger'};\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (counters && counters.ISSDays > 0) {\r\n\t\t\t\t\t\t\t\t\t\tstudent.overlap = {place: 'Has ISS', class: 'bg-danger'};\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// check for present\r\n\r\n\t\t\t\t\t\t\t\t\tstudent.ActivityTypeId = ref.ActivityTypeId;\r\n\r\n\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tif (student.ActivityTypeId === 64) {// present , check what assignments were completed\r\n\t\t\t\t\t\t\t\t\tstudent.status.action = 'Present: ';\r\n\t\t\t\t\t\t\t\t\tstudent.status.class = 'bg-green';\r\n\t\t\t\t\t\t\t\t\tstudent.status.action += 'complete';\r\n\r\n\t\t\t\t\t\t\t\t} else if (student.ActivityTypeId === 75) { // sent out\r\n\t\t\t\t\t\t\t\t\tstudent.status.action = 'Sent Out: Oroom-today';\r\n\t\t\t\t\t\t\t\t\tstudent.status.class = 'bg-danger';\r\n\t\t\t\t\t\t\t\t} else if (student.ActivityTypeId === 70) { // walked out\r\n\t\t\t\t\t\t\t\t\tconsole.log('walked out');\r\n\t\t\t\t\t\t\t\t\tstudent.status.action = 'Walked Out: Oroom-tomorrow';\r\n\t\t\t\t\t\t\t\t\tstudent.status.class = 'bg-danger';\r\n\t\t\t\t\t\t\t\t} else if (student.ActivityTypeId === 65) { // rescheduled\r\n\t\t\t\t\t\t\t\t\tstudent.status = {action: 'Rescheduled', class: 'bg-green'};\r\n\t\t\t\t\t\t\t\t} else if (student.ActivityTypeId === 66) {\r\n\t\t\t\t\t\t\t\t\tstudent.status = {action: 'Cleared', class: 'bg-green'};\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (!data.length) {\r\n\t\t\t\t\t\t\t\tnotify({message: \"No students for current date\",\r\n\t\t\t\t\t\t\t\t\tclasses: 'alert-warning', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Makes API call to get a pdf of the AEC passes for the students\r\n\t\t\t\t * assigned AEC for the current date\r\n\t\t\t\t */\r\n\t\t\t\t$scope.getPasses = function () {\r\n\t\t\t\t\tnotify({message: \"Now Generating Passes\",\r\n\t\t\t\t\t\tclasses: 'alert-successs', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\tpasses.pdf({date: $scope.currentDate, param: 'AECList'}, function (data) {\r\n\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\tvar fileURL = URL.createObjectURL(data.response);\r\n\t\t\t\t\t\twindow.open(fileURL);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.getLabels = function () {\r\n\t\t\t\t\tnotify({message: \"Now Generating labels, Hold On\"});\r\n\t\t\t\t\tpasses.pdf({date: $scope.currentDate, param: 'ReteachLabels'}, function (data) {\r\n\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\tvar fileURL = URL.createObjectURL(data.response);\r\n\t\t\t\t\t\twindow.open(fileURL);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * Select the student that is clicked in the table so that the user doesn't \r\n\t\t\t\t * have to type it \r\n\t\t\t\t * @param {int} $index: reftable index of the clicked student \r\n\t\t\t\t */\r\n\t\t\t\t$scope.onSelect = function ($index) {\r\n\t\t\t\t\t$scope.selected.student = $scope.refTable[$index];\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Converts the current AEC list into a csv text format so it can\r\n\t\t\t\t * be passed to the download method \r\n\t\t\t\t */\r\n\t\t\t\t$scope.AECListCSV = function () {\r\n\t\t\t\t\tvar text = 'TeacherFirst,TeacherLast,FirstName,LastName,StudentId, Grade, Overlap, Attendance\\n';\r\n\t\t\t\t\tangular.forEach($scope.refTable, function (item) {\r\n\t\t\t\t\t\tangular.forEach(item.referred, function (referred) {\r\n\t\t\t\t\t\t\ttext += referred.teacher.FirstName + ',' + referred.teacher.LastName + \",\"\r\n\t\t\t\t\t\t\t\t+ item.user.FirstName + ',' + item.user.LastName + ',' + item.StudentId + ','\r\n\t\t\t\t\t\t\t\t+ item.Grade + ',' + referred.Name + ','\r\n\t\t\t\t\t\t\t\t+ (item.overlap ? item.overlap.place : 'N/A')\r\n\t\t\t\t\t\t\t\t+ ',' + item.status.action\r\n\t\t\t\t\t\t\t\t+ ' \\n';\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\tutils.downloadCSV(text,'Reteach-List_' + $scope.currentDate);\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t/******** MANAGE AEC **********/\r\n\t\t\t\t// To avoid duplicate profile entries only 1 entry should be created in\r\n\t\t\t\t// useractions table and all referrals must be changed in referrals \r\n\t\t\t\t// table (see backend implementation)\r\n\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * PUT API call to change the referral status to reschedule (ReferralStatus 2), \r\n\t\t\t\t * rescheduling all the referrals as well as loggin the reschedule \r\n\t\t\t\t * into user actions for the profile \r\n\t\t\t\t * @param {object} data: information returned by modal (date,comment,student,excused)\r\n\t\t\t\t */\r\n\t\t\t\tvar submitReschedule = function (data) {\r\n\t\t\t\t\tvar student = data.student;\r\n\t\t\t\t\t// get info from comment box and DatePicker       \r\n\t\t\t\t\t// submit information of student '$scope.selected.student' to the database\r\n\t\t\t\t\tstudent.status = {action: 'Rescheduled',\r\n\t\t\t\t\t\tclass: 'bg-green'};\r\n\r\n\t\t\t\t\tvar referrals = student.referred.map(function (o) {\r\n\t\t\t\t\t\treturn o.Id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar urlEncoded = {id: student.Id};\r\n\t\t\t\t\tvar payload = {\r\n\t\t\t\t\t\tparam: 'reschedule',\r\n\t\t\t\t\t\tComment: data.comment,\r\n\t\t\t\t\t\tnewDate: data.date,\r\n\t\t\t\t\t\tReferralIds: referrals,\r\n\t\t\t\t\t\texcused: data.excused\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\taec.update(urlEncoded, payload, function (data) {\r\n\t\t\t\t\t\tnotify(data.msg);\r\n\t\t\t\t\t}, function (err) {\r\n\t\t\t\t\t\tnotify({message: \"Reschedule Failed, Please Contact The Admin\",\r\n\t\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tremoveSelectedStudentFromTableAndClear();\r\n\t\t\t\t};\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * PUT API call to change the referral status to clear(ReferralStatus 3), \r\n\t\t\t\t * rescheduling all the referrals as well as loggin the reschedule \r\n\t\t\t\t * into user actions for the profile \r\n\t\t\t\t * @param {object} data: information returned by modal (comment, student)\r\n\t\t\t\t */\r\n\t\t\t\tvar submitClear = function (data) {\r\n\t\t\t\t\tvar student = data.student;\r\n\t\t\t\t\tstudent.status = {action: 'Cleared',\r\n\t\t\t\t\t\tclass: 'bg-green'};\r\n\r\n\t\t\t\t\t// submit information of student '$scope.selected.student' to the database\r\n\r\n\t\t\t\t\tvar referralsIds = student.referred.map(function (o) {\r\n\t\t\t\t\t\treturn o.Id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar urlEncoded = {id: student.Id};\r\n\t\t\t\t\tvar payload = {\r\n\t\t\t\t\t\tparam: 'clear',\r\n\t\t\t\t\t\tComment: data.comment,\r\n\t\t\t\t\t\tReferralIds: referralsIds,\r\n\t\t\t\t\t\tDate: $scope.currentDate\r\n\t\t\t\t\t};\r\n\t\t\t\t\taec.update(urlEncoded, payload, function (data) {\r\n\t\t\t\t\t\tnotify(data.msg);\r\n\t\t\t\t\t}, function (data) {\r\n\t\t\t\t\t\tnotify({message: \"Clear Failed, Please Contact The System Admin\",\r\n\t\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tremoveSelectedStudentFromTableAndClear();\r\n\t\t\t\t};\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * PUT API call to log parent notified information for current student\r\n\t\t\t\t * into user actions for the profile. \r\n\t\t\t\t * In the case that parent requested a reschedule $scope.selected student \r\n\t\t\t\t * is changed to the current student and submit reschedule is \r\n\t\t\t\t * on that student, preprocess of data needed(line 193)\r\n\t\t\t\t * to provide necessary info for sumit Reschedule \r\n\t\t\t\t * @param {object} data: information returned by modal (student,reschedule,newDate)\r\n\t\t\t\t */\r\n\t\t\t\tvar submitParentNotified = function (data) {\r\n\t\t\t\t\tvar rescheduleComment = \"Parent Requested Reschedule\";\r\n\t\t\t\t\tconsole.log(data.student);\r\n\r\n\r\n\t\t\t\t\t// Remove Student if reschedule\r\n\t\t\t\t\tif (data.reschedule) {\r\n\t\t\t\t\t\t// sent a post to the reschedule api point\r\n\t\t\t\t\t\tangular.extend(data, {comment: rescheduleComment, excused: true, oldDate: $scope.currentDate, date: data.newDate});\r\n\t\t\t\t\t\t$scope.selected.student = data.student;\r\n\t\t\t\t\t\tsubmitReschedule(data);\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Make A post to update the student parent's information \r\n\t\t\t\t\t\tvar student = data.student.student;\r\n\r\n\t\t\t\t\t\tstudents.update({id: data.student.id}, {\r\n\t\t\t\t\t\t\tParentNotified: student.ParentNotified ? 1 : 0,\r\n\t\t\t\t\t\t\tParentNotifiedComment: student.ParentNotifiedComment,\r\n\t\t\t\t\t\t\tValidNumber: student.ValidNumber ? 1 : 0,\r\n\t\t\t\t\t\t\tParentSupportive: student.ParentSupportive ? 1 : 0,\r\n\t\t\t\t\t\t\tGuardianPhone: student.GuardianPhone\r\n\t\t\t\t\t\t}, function (response) {\r\n\r\n\t\t\t\t\t\t}, function (response) {\r\n\t\t\t\t\t\t\tnotify({message: \"Parent Notified Failed, Please Contact The Admin\",\r\n\t\t\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * PUT API call to log student notified information for student clicked\r\n\t\t\t\t * \r\n\t\t\t\t * @param {object} ref: student selected\r\n\t\t\t\t * @param {int} $index: refTable index of student selected\r\n\t\t\t\t */\r\n\t\t\t\t$scope.submitStudentNotified = function (ref, $index) {\r\n\r\n\t\t\t\t\tvar studentNotified = ref.student.Notified;\r\n\t\t\t\t\tstudents.update({id: ref.id}, {Notified: !studentNotified ? 1 : 0}, function (response) {\r\n\t\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log($scope.refTable[$index]);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * PUT API call to change the all unprocessed referrals to absent(ReferralStatus 4)\r\n\t\t\t\t * as well as logging the absent into user actions for the profile \r\n\t\t\t\t */\r\n\t\t\t\t$scope.finishManageAEC = function () {\r\n\t\t\t\t\tangular.forEach($scope.refTable, function (student) {\r\n\t\t\t\t\t\t// if no overlap and not action taken by user then send to absent list\r\n\t\t\t\t\t\tif ( !student.status.action && !student.overlap  ) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tangular.forEach(student.referred, function (ref) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\taec.update({'id': ref.Id},\r\n\t\t\t\t\t\t\t\t{'param': 'absent', Date: $scope.currentDate},\r\n\t\t\t\t\t\t\t\tfunction (response) {\r\n\r\n\t\t\t\t\t\t\t\t}, function (response) {\r\n\t\t\t\t\t\t\t\t\tnotify({message: \"Finish Failed, Please Contact The Admin\",\r\n\t\t\t\t\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfunction isOverlap(student) {\r\n\t\t\t\t\tvar overlap = false;\r\n\t\t\t\t\tvar overlapPlace = '';\r\n\r\n\t\t\t\t\tif (student.counters.ORoomsToBeServed > 0) {\r\n\t\t\t\t\t\toverlapPlace = 'O-Room';\r\n\t\t\t\t\t\toverlap = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (student.counters.ISSDays > 0) {\r\n\t\t\t\t\t\toverlapPlace = 'ISS';\r\n\t\t\t\t\t\toverlap = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (student.counters.OSSPMP > 0) {\r\n\t\t\t\t\t\toverlapPlace = 'OSS';\r\n\t\t\t\t\t\toverlap = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//\r\n\t\t\t\t\toverlap = false;\r\n\t\t\t\t\tif (overlap) {\r\n\t\t\t\t\t\tmodalInstance = $modal.open({\r\n\t\t\t\t\t\t\ttemplateUrl: 'views/modals/AttendanceUnavailableModal2.html',\r\n\t\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\r\n\t\t\t\t\t\t\tsize: 'lg',\r\n\t\t\t\t\t\t\tcontroller: function ($scope, student, activity) {\r\n\t\t\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t\t\tconsole.log(student);\r\n\t\t\t\t\t\t\t\t$scope.activity = activity;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\t\t\tstudent: function () {\r\n\t\t\t\t\t\t\t\t\treturn student;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tactivity: function () {\r\n\t\t\t\t\t\t\t\t\treturn overlapPlace;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t/********************************************** MODALS   **************************/\r\n\r\n\t\t\t\t/** Attendance Modal\r\n\t\t\t\t * opens the attendance modal with 3 buttons (present, sent out, walked out \r\n\t\t\t\t * \r\n\t\t\t\t */\r\n\t\t\t\t$scope.AECAttendance = function (student, $index) {\r\n\r\n\t\t\t\t\tif (isOverlap(student)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.log(student);\r\n\t\t\t\t\tvar modalInstance = $modal.open({\r\n\t\t\t\t\t\ttemplateUrl: 'views/modals/attendanceReteachModal.html',\r\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\r\n\t\t\t\t\t\tsize: 'lg',\r\n\t\t\t\t\t\tcontroller: function ($scope, student) {\r\n\t\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\t\tstudent: function () {\r\n\t\t\t\t\t\t\t\treturn student;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tmodalInstance.result.then(function (data) {// on SUBMIT\r\n\t\t\t\t\t\tvar student = data.student;\r\n\t\t\t\t\t\t// check what buttons were present  and what assignments were completed\r\n\t\t\t\t\t\t// to set the color and the attendance \r\n\r\n\t\t\t\t\t\tvar status = {class: '', action: ''};\r\n\t\t\t\t\t\tif (student.radioModel == 64 ) {// present , check what assignments were completed\r\n\t\t\t\t\t\t\t//\r\n\r\n\t\t\t\t\t\t\tstatus.action = 'Present: ';\r\n\t\t\t\t\t\t\tstatus.class = 'bg-green';\r\n\t\t\t\t\t\t\tstatus.action += 'complete';\r\n\r\n\r\n\t\t\t\t\t\t} else if (student.radioModel == 75) {\r\n\t\t\t\t\t\t\tconsole.log('sent out');\r\n\t\t\t\t\t\t\tstatus.action = 'Sent Out: Oroom-today';\r\n\t\t\t\t\t\t\tstatus.class = 'bg-danger';\r\n\t\t\t\t\t\t} else if (student.radioModel == 70) {\r\n\t\t\t\t\t\t\tconsole.log('walked out');\r\n\t\t\t\t\t\t\tstatus.action = 'Walked Out: Oroom-tomorrow';\r\n\t\t\t\t\t\t\tstatus.class = 'bg-danger';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstudent.status = status;\r\n\r\n\r\n\r\n\t\t\t\t\t\t// post the comment and other things to the database \r\n\r\n\t\t\t\t\t\tconsole.log(student);\r\n\t\t\t\t\t\t// sent when present\r\n\t\t\t\t\t\tvar referrals = student.referred.map(function (o) {\r\n\t\t\t\t\t\t\treturn {Id: o.Id, AssignmentCompleted: o.AssignmentCompleted}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// sent otherwhise\r\n\t\t\t\t\t\tvar referralIds = student.referred.map(function (o) {\r\n\t\t\t\t\t\t\treturn o.Id;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar urlEncoded = {id: student.Id};\r\n\t\t\t\t\t\tvar payload = {\r\n\t\t\t\t\t\t\tparam: 'attendance',\r\n\t\t\t\t\t\t\tActionType: student.radioModel,\r\n\t\t\t\t\t\t\tComment: student.comment,\r\n\t\t\t\t\t\t\tDate: $scope.currentDate,\r\n\t\t\t\t\t\t\tReferrals: student.radioModel == 64 ? referrals : referralIds\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\taec.update(urlEncoded, payload, function (data) {\r\n\t\t\t\t\t\t\tnotify(data.msg);\r\n\t\t\t\t\t\t}, function (err) {\r\n\t\t\t\t\t\t\tnotify('error, Before continuing please contact an admin');\r\n\t\t\t\t\t\t});\r\n\r\n\r\n\r\n\t\t\t\t\t\t// Do Not Remove From List\r\n//\t\t\t\t\t\tif ($index)\r\n//\t\t\t\t\t\t\t$scope.refTable.splice($index, 1);\r\n//\t\t\t\t\t\telse\r\n//\t\t\t\t\t\t\r\n\t\t\t\t\t\t// only clears the field\r\n\t\t\t\t\t\t$scope.selected.student = null;\r\n\t\t\t\t\t}, function () {// on modal DISMISS\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t/** Reschedule Modal\r\n\t\t\t\t * Opens the Reschedule modal and passes in the student selected to be available\r\n\t\t\t\t * in the modal context, calls submitReschedule function when modal \r\n\t\t\t\t * submit button is clicked,does nothing otherwise\r\n\t\t\t\t */\r\n\t\t\t\t$scope.openReschedule = function () {\r\n\t\t\t\t\tvar resModal = $modal.open({\r\n\t\t\t\t\t\ttemplateUrl: 'views/modals/RescheduleModal.html',\r\n\t\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\t\tcontroller: function ($scope, student) {\r\n\t\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t\t$scope.date = new Date();\r\n\r\n\t\t\t\t\t\t\t$scope.$watch('form.date.$viewValue', function (newValue, oldValue) {\r\n\t\t\t\t\t\t\t\tif (newValue) { //when date has a valid date request the List from that date\r\n\t\t\t\t\t\t\t\t\t$scope.date = newValue;\r\n\t\t\t\t\t\t\t\t\tconsole.log('date changed');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\t\tstudent: function () {\r\n\t\t\t\t\t\t\t\treturn $scope.selected.student;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});// end modalInstance\r\n\r\n\t\t\t\t\tresModal.result.then(submitReschedule);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t/** Clear Modal\r\n\t\t\t\t * Opens the Clear modal and passes in the student selected to be available\r\n\t\t\t\t * in the modal context, calls submitClear function when modal \r\n\t\t\t\t * submit button is clicked,does nothing otherwise\r\n\t\t\t\t */\r\n\t\t\t\t$scope.openClear = function (studentInfo) {\r\n\r\n\t\t\t\t\tvar clrModal = $modal.open({\r\n\t\t\t\t\t\ttemplateUrl: 'views/modals/ClearModal.html',\r\n\t\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\t\tcontroller: function ($scope, student) {\r\n\t\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t\t$scope.title = 'clear'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\t\tstudent: function () {\r\n\t\t\t\t\t\t\t\treturn $scope.selected.student;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})// End clrModal\r\n\r\n\t\t\t\t\tclrModal.result.then(submitClear)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/** Parent Notified Modal\r\n\t\t\t\t * Opens the Parent Notified modal and passes in the student selected to be \r\n\t\t\t\t * available in the modal context, as well as the current date. \r\n\t\t\t\t * calls submitParentNotified function when modal submit \r\n\t\t\t\t * button is clicked,does nothing otherwise\r\n\t\t\t\t * @param {object} stu: student selected for parent notified\r\n\t\t\t\t */\r\n\t\t\t\t$scope.parentNotifiedModal = function (stu) {\r\n\t\t\t\t\tvar parentModal = $modal.open({\r\n\t\t\t\t\t\ttemplateUrl: \"views/modals/ParentModal.html\",\r\n\t\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\t\tcontroller: function ($scope, $modalInstance, student, date) {\r\n\t\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t\t$scope.date = date;\r\n\r\n\t\t\t\t\t\t\t$scope.$watch('form.date.$viewValue', function (newValue) {\r\n\t\t\t\t\t\t\t\tif (newValue) { //when date has a valid date request the List from that date\r\n\t\t\t\t\t\t\t\t\t$scope.date = newValue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\t\tstudent: function () {\r\n\t\t\t\t\t\t\t\treturn stu\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tdate: function () {\r\n\t\t\t\t\t\t\t\treturn $scope.currentDate\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})// end modal\r\n\r\n\t\t\t\t\tparentModal.result.then(submitParentNotified,\r\n\t\t\t\t\t\tfunction () {\r\n\t\t\t\t\t\t\t// change parent notified button it back to what it was\r\n\t\t\t\t\t\t\tstu.student.ParentNotified = !stu.student.ParentNotified;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Removes $scope.selected student from the refTable and then\r\n\t\t\t\t * sets it to null (clear field)\r\n\t\t\t\t * \r\n\t\t\t\t */\r\n\t\t\t\tvar removeSelectedStudentFromTableAndClear = function () {\r\n//\t\t\t\t\tfor (var i = 0; i < $scope.refTable.length; i++)\r\n//\t\t\t\t\t\tif ($scope.selected.student.id === $scope.refTable[i].id) {\r\n//\t\t\t\t\t\t\t$scope.refTable.splice(i, 1);\r\n//\t\t\t\t\t\t\tbreak;\r\n//\t\t\t\t\t\t}\r\n\t\t\t\t\t$scope.selected.student = null;\r\n\t\t\t\t};\r\n\t\t\t}]);\r\n\r\n}(angular.module('Argus')));\t\t\t\t\t\t","(function (app) {\r\n\t\"use strict\";\r\n\tapp.\r\n\t\tcontroller(\"ReteachReferralCtrl\",\r\n\t\t\t[\"$scope\", \"assignmentsListService\", \"teachers\", \"referrals\", \"StudentsService\", '$modal', 'notify', '$http', 'ReteachListService', 'ProfessorClassesService',\r\n\t\t\t\tfunction ($scope, assignmentsService, teachers, referrals, students, $modal, notify, $http, reteach, ProfessorClassesService) {\r\n\t\t\t\t\t$scope.selected = {}; // model for the possible selections (selected.student,   or seleted.assignments)\r\n\t\t\t\t\t$scope.currentDate = new Date(); // date on the datepicker\r\n\t\t\t\t\t$scope.teacherStudents = []; // model for autocomplete  \r\n\t\t\t\t\t$scope.refTable = []; // model for dynamic table \r\n\t\t\t\t\t$scope.edits = [];\r\n\t\t\t\t\t$scope.eightPeriods = [];\r\n\r\n\r\n\t\t\t\t\t$scope.teachers = teachers.query();\r\n\t\t\t\t\t$scope.schoolStudents = students.query({admin: true, light: true}, function () {\r\n\t\t\t\t\t}, function (error) {\r\n\t\t\t\t\t\tdev.openError(error);\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\t$scope.classes = ProfessorClassesService.query();\r\n\r\n\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Watch for changes in the datepicker to add students to that date's\r\n\t\t\t\t\t * AEC List\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.$watch('form.date.$viewValue', function (newVal, oldVal) {\r\n\t\t\t\t\t\tif (newVal) {//when date has a valid date request the List from that date\r\n\t\t\t\t\t\t\tvar processReceivedReferrals = function (results) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Returned  refferals\");\r\n\t\t\t\t\t\t\t\tconsole.log(results);\r\n\r\n\t\t\t\t\t\t\t\t// adjust the returned referrals \r\n\r\n\r\n\t\t\t\t\t\t\t\tvar AlluniqueTeachers = {};\r\n\t\t\t\t\t\t\t\tvar results_length = results.length;\r\n\t\t\t\t\t\t\t\tvar referrals = [];\r\n\t\t\t\t\t\t\t\tfor (var i = 0; i < results_length; i++) {\r\n\t\t\t\t\t\t\t\t\tvar student = results[i];\r\n\t\t\t\t\t\t\t\t\tvar uniqueTeachers = {};\r\n\t\t\t\t\t\t\t\t\tangular.forEach(student.referred, function (referral, $index2) {\r\n\t\t\t\t\t\t\t\t\t\tuniqueTeachers[referral.UserId] = referral.user;\r\n\t\t\t\t\t\t\t\t\t\tdelete referral.user;\r\n\t\t\t\t\t\t\t\t\t\t//AlluniqueTeachers[referral.StudentId] = uniqueTeachers;\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tvar teachersNo = Object.keys(uniqueTeachers).length;\r\n\t\t\t\t\t\t\t\t\tvar teachersKeys = Object.keys(uniqueTeachers);\r\n\t\t\t\t\t\t\t\t\tfor (var j = 0; j < teachersNo; j++) {\r\n\t\t\t\t\t\t\t\t\t\tvar studentCopy = angular.copy(student);\r\n\t\t\t\t\t\t\t\t\t\tvar studentReferrals = [];\r\n\t\t\t\t\t\t\t\t\t\tstudentCopy.teacher = uniqueTeachers[teachersKeys[j]];\r\n\t\t\t\t\t\t\t\t\t\tfor (var k = 0; k < student.referred.length; k++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tvar referral = student.referred[k];\r\n\t\t\t\t\t\t\t\t\t\t\tif (referral.assignment.TeacherId === teachersKeys[j])\r\n\t\t\t\t\t\t\t\t\t\t\t\tstudentReferrals.push(referral.assignment);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tstudentCopy.referred = studentReferrals;\r\n\t\t\t\t\t\t\t\t\t\tstudentCopy.old = true;\r\n\t\t\t\t\t\t\t\t\t\treferrals.push(studentCopy);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tresults = referrals\r\n\t\t\t\t\t\t\t\tconsole.log(results);\r\n\t\t\t\t\t\t\t\tvar data = results;\r\n\t\t\t\t\t\t\t\tconsole.log(\"Data For the ref table\");\r\n\t\t\t\t\t\t\t\tconsole.log(results);\r\n\t\t\t\t\t\t\t\t// console.log(data);\r\n\t\t\t\t\t\t\t\tif (!data) {\r\n\t\t\t\t\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t\t\t\t\t\talert(\"No students for current date\");\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t$scope.refTable = data;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//                referrals.query({id:newVal},processReceivedReferrals, function(error) {\r\n\t\t\t\t\t\t\t//                    console.log(error);\r\n\t\t\t\t\t\t\t//                });\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tconsole.log(\"New Date : \" + newVal);\r\n\t\t\t\t\t\t\tconsole.log(\"Old Date : \" + oldVal);\r\n\t\t\t\t\t\t\t//console.log(\"New Date : \" +formatDate(newVal) );\r\n\t\t\t\t\t\t\t$scope.currentDate = newVal;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/* REFER A STUDENT LOGIC */\r\n\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Called when a student is selected or deselected \r\n\t\t\t\t\t * no action for now \r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.onSelectedStudent = function () {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t// add to the list\r\n\t\t\t\t\t\tvar alreadyInList = false;\r\n\t\t\t\t\t\tfor (var i = 0; i < $scope.refTable.length; i++) {\r\n\t\t\t\t\t\t\tif ($scope.refTable[i].id === $scope.selected.student.user.id) {\r\n\t\t\t\t\t\t\t\talreadyInList = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!alreadyInList)\r\n\t\t\t\t\t\t\t$scope.refTable.push($scope.selected.student.user);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\talert('student is already in the list');\r\n\t\t\t\t\t\t// clear the field\r\n\t\t\t\t\t\t//$scope.selected.student = null;\r\n\t\t\t\t\t};\r\n\r\n\t\t\r\n\r\n\r\n\t\t\t\t\t/** New Assignment Modal\r\n\t\t\t\t\t * Opens the New Assignment modal and passes in the teacher selected to be available\r\n\t\t\t\t\t * in the modal context, on submit makes a post call to assignments\r\n\t\t\t\t\t * to add the current assignment to the teacher \r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.openCreateNewAssignment = function () {\r\n\t\t\t\t\t\tvar modalInstance = $modal.open({\r\n\t\t\t\t\t\t\ttemplateUrl: 'views/modals/addNewAssignmentModal.html',\r\n\t\t\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\t\t\tcontroller: function ($scope, teacher) {\r\n\t\t\t\t\t\t\t\t$scope.teacher = teacher;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tresolve: {// variables that get injected into the controller (taken from current $scope)\r\n\t\t\t\t\t\t\t\tteacher: function () {\r\n\t\t\t\t\t\t\t\t\treturn $scope.selected.teacher;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}) // End modalInstace\r\n\r\n\t\t\t\t\t\tmodalInstance.result.then(function (data) {\r\n\t\t\t\t\t\t\tassignmentsService.save({teacher: $scope.selected.teacher, assignment: data}, function (response) {\r\n\t\t\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\t\t\tvar teacher = $scope.selected.teacher;\r\n\t\t\t\t\t\t\t\tresponse.assignment.Id = response.assignment.Id + \"\";\r\n\t\t\t\t\t\t\t\t$scope.selected.teacher.assignments.push(response.assignment);\r\n\r\n\t\t\t\t\t\t\t\tconsole.log('assignment successfully added');\r\n\t\t\t\t\t\t\t\tconsole.log($scope.selected.teacher.assignments)\r\n\t\t\t\t\t\t\t}, function (response) {\r\n\t\t\t\t\t\t\t\tconsole.warn('assignment unseccessfuly added');\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Adds selected.student with selected.assignments to the refTable\r\n\t\t\t\t\t * then clears selected.student\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.addToList = function () {\r\n\t\t\t\t\t\t//var selectedAssignments = $scope.selected.assignments;\r\n\t\t\t\t\t\tvar referralToAdd = $scope.selected.student;\r\n\t\t\t\t\t\tvar selectedTeacher = $scope.selected.teacher;\r\n\t\t\t\t\t\t$http.get('api/classes/' + $scope.selected.student.Id).then(function (response) {\r\n\t\t\t\t\t\t\tvar last = response.data[7];\r\n\t\t\t\t\t\t\t$scope.eightPeriods.push(last)\r\n\t\t\t\t\t\t\tconsole.log($scope.eightPeriods);\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t//addAssignmentsToStudent(selectedAssignments, referralToAdd);\r\n\t\t\t\t\t\treferralToAdd.teacher = $scope.selected.teacher;\r\n\t\t\t\t\t\t$scope.refTable.push(referralToAdd);\r\n\t\t\t\t\t\tconsole.log($scope.refTable);\r\n\t\t\t\t\t\t$scope.selected.student = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Adds assignments to the student object \r\n\t\t\t\t\t * @param  {[objects]} assignments\t: list of assignment objects to be added\r\n\t\t\t\t\t * @param \t{object} \tstudent\t\t: \r\n\t\t\t\t\t */\r\n\t\t\t\t\tfunction addAssignmentsToStudent(assignments, student) {\r\n\r\n\t\t\t\t\t\tif (!student.referred) {// current student doesnt have any assignments, add all the selected assignments\t\r\n\t\t\t\t\t\t\t//  copy assignments into referred\r\n\t\t\t\t\t\t\tstudent.referred = assignments.slice();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var i = 0; i < assignments.length; i++) {\r\n\t\t\t\t\t\t\tvar j = false;\r\n\t\t\t\t\t\t\tfor (j = 0; j < student.referred.length; j++) {\r\n\t\t\t\t\t\t\t\tif (student.referred[j].Id === assignments[i].Id)\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (j === student.referred.length)// assignment is not already in the student\r\n\t\t\t\t\t\t\t\tstudent.referred.unshift(assignments[i]);\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tdelete student.selected; // delete the selected property;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * POST API call to referrals. adds all the students in the refTable to the \r\n\t\t\t\t\t * current date's AEC list.\r\n\t\t\t\t\t * Despite the number of assignmets only 1 entry should be loged in \r\n\t\t\t\t\t * into user activities with information containig the assignments\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.submitReferedStudents = function () {\r\n\t\t\t\t\t\t// format the data so it an be easily insterted in the database\r\n\t\t\t\t\t\tvar studentsReferred = [];\r\n\t\t\t\t\t\tangular.forEach($scope.refTable, function (student) {\r\n\t\t\t\t\t\t\tconsole.log(student);\r\n\t\t\t\t\t\t\tvar referral = {\r\n\t\t\t\t\t\t\t\tStudentId: student.Id,\r\n\t\t\t\t\t\t\t\tTeacherId: student.teacher.id,\r\n\t\t\t\t\t\t\t\tAssignmentId: 0,\r\n\t\t\t\t\t\t\t\tRefferalStatus: 0,\r\n\t\t\t\t\t\t\t\tReferralTypeId: 18,\r\n\t\t\t\t\t\t\t\tProfessorClassId: student.ProfessorClassId ? student.ProfessorClassId.Id : 0,\r\n\t\t\t\t\t\t\t\tDate: $scope.currentDate\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tstudentsReferred.push(referral);\r\n\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (studentsReferred.length) {\r\n\t\t\t\t\t\t\treteach.save({data: studentsReferred, date: $scope.currentDate},\r\n\t\t\t\t\t\t\tfunction (response) {\r\n\t\t\t\t\t\t\t\tnotify({message: \"Reteach List Was Submitted Successfully\",\r\n\t\t\t\t\t\t\t\t\tclasses: 'alert-success', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t\t\t}, function (response) {\r\n\t\t\t\t\t\t\t\tnotify({message: \"Submit Failed, Please Contact The Admin\",\r\n\t\t\t\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//ServerDataModel.createAECList($scope.currentDate, $scope.refTable);\r\n\t\t\t\t\t\t$scope.refTable = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}])\r\n\r\n}(angular.module('Argus')));","/* global angular */\r\n\r\n(function (app) {\r\n\t\"use strict\";\r\n\tapp\r\n\t\t.controller(\"ManageASPStudentsDunbarCtrl\", [\"$scope\", \"$modal\",\"notify\",\"ASPService\", \"$timeout\", '$rootScope',\r\n\t\t\tfunction ($scope,  $modal,  notify,  asp, $timeout, $rootScope) {\r\n\t\t\t\t$scope.selected = {student: null};\r\n\t\t\t\t$scope.refTable = [];// table model\r\n\t\t\t\t$scope.currentDate = new Date();\r\n\r\n\t\t\t\t$scope.refTable = asp.query();\r\n\r\n\t\t\t\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t$scope.getStudents = function () {\r\n\t\t\t\t\t$scope.refTable = asp.query({Date: $scope.currentDate});\r\n\t\t\t\t};\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t}]);\r\n\r\n}(angular.module('Argus')));\t\t\t\t\t\t","/* global angular */\r\n\r\n(function (app) {\r\n\t\"use strict\";\r\n\tapp\r\n\t\t.controller(\"ManageASPStudentsEstacadoCtrl\", [\"$scope\", \"$modal\",\"notify\",\"ASPService\", \"$timeout\", '$rootScope','ReferralTypesService',\r\n\t\t\tfunction ($scope,  $modal,  notify,  asp, $timeout, $rootScope,utils) {\r\n\t\t\t\t$scope.selected = {student: null};\r\n\t\t\t\t$scope.refTable = [];// table model\r\n\t\t\t\t$scope.currentDate = new Date();\r\n\r\n//\t\t\t\t$scope.programs = [\r\n//\t\t\t\t\t{Name: 'Art', Id: 76},\r\n//\t\t\t\t\t{Name: 'Bikes (PE)', Id: 77},\r\n//\t\t\t\t\t{Name: 'Board Games (PE)', Id: 78},\r\n//\t\t\t\t\t{Name: 'Cooking (Class)', Id: 79},\r\n//\t\t\t\t\t{Name: 'Cooking (Kitchen)', Id: 80},\r\n//\t\t\t\t\t{Name: 'Hip-Hop (PE)', Id: 81},\r\n//\t\t\t\t\t{Name: 'Math Music (PE)', Id: 82},\r\n//\t\t\t\t\t{Name: 'Music', Id: 83},\r\n//\t\t\t\t\t{Name: 'PE', Id: 84},\r\n//\t\t\t\t\t{Name: 'Theatre', Id: 85}\r\n//\t\t\t\t];\r\n\r\n\t\t\t\t$scope.rotations = [\r\n\t\t\t\t\t{Name: 'Rotation 1', Value: 1},\r\n\t\t\t\t\t{Name: 'Rotation 2', Value: 2}\r\n\r\n\t\t\t\t];\r\n\r\n\t\t\t\t$scope.refTable = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuser: {FirstName: 'First', LastName: 'Last'},\r\n\t\t\t\t\t\tStudentId: '888',\r\n\t\t\t\t\t\tGrade: 99, Id: '1', attendance: 1\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Watch for changes in the datepicker then load the AECList \r\n\t\t\t\t * For the selected Date. Also adjusts data received\r\n\t\t\t\t * to be easily shown in the view\r\n\t\t\t\t */\r\n\t\t\t\t$scope.$watch('form.date.$viewValue', function (newVal) {\r\n\t\t\t\t\tif (newVal) {//when date has a valid date request the List from that date\r\n\t\t\t\t\t\t$scope.currentDate = newVal;\r\n\t\t\t\t\t\t$scope.selected.rotation = null;\r\n\t\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t\t\tconsole.log($rootScope.schoolId);\r\n\t\t\t\t\t\tif ($rootScope.currentUser.schoolId === 2) {\r\n\t\t\t\t\t\t\t$scope.refTable = asp.query({Date: $scope.currentDate}, markOverlaps);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.onSelectedRotation = function (rotation) {\r\n\t\t\t\t\tif (!rotation) {\r\n\t\t\t\t\t\t$scope.selected.program = null;\r\n\t\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$scope.selected.program = null;\r\n\t\t\t\t\t$scope.refTable = null;\r\n\t\t\t\t\tasp.query({select: 1, rotation: rotation.Value, Date: $scope.currentDate},\r\n\t\t\t\t\tfunction (data) {\r\n\t\t\t\t\t\t// check for date and group all the PE into 1 PE \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$scope.programs = data;\r\n\t\t\t\t\t}, function (err) {\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfunction markOverlaps(data) {\r\n\t\t\t\t\tangular.forEach(data, function (stu) {\r\n\t\t\t\t\t\tvar hasiss = false, hasaec = false, hasoroom = false;\r\n\t\t\t\t\t\tangular.forEach(stu.student.user.referred, function (ref) {\r\n\t\t\t\t\t\t\tif (ref.ReferralTypeId === 12) {\r\n\t\t\t\t\t\t\t\thasaec = true;\r\n\r\n\t\t\t\t\t\t\t} else if ((ref.ReferralTypeId === 5 || ref.ReferralTypeId === 6 || ref.ReferralTypeId === 7\r\n\t\t\t\t\t\t\t\t|| ref.ReferralTypeId === 10 || ref.ReferralTypeId === 17 || ref.ReferralTypeId === 15)) {\r\n\t\t\t\t\t\t\t\thasiss = true;\r\n\r\n\t\t\t\t\t\t\t} else if ((ref.ReferralTypeId === 1 || ref.ReferralTypeId === 2 || ref.ReferralTypeId === 3 || ref.ReferralTypeId === 16 || ref.ReferralTypeId === 10 || ref.ReferralTypeId === 19)) {\r\n\t\t\t\t\t\t\t\thasoroom = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (hasiss) {\r\n\t\t\t\t\t\t\tstu.overlap = {class: 'bg-danger', msg: 'Has ISS'};\r\n\r\n\t\t\t\t\t\t} else if (hasoroom) {\r\n\t\t\t\t\t\t\tstu.overlap = {class: 'bg-warning', msg: 'Has ORoom'};\r\n\t\t\t\t\t\t} else if (hasaec) {\r\n\t\t\t\t\t\t\tstu.overlap = {class: 'bg-warning', msg: 'Has AEC'};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$scope.onSelectedProgram = function (program, rotation) {\r\n\t\t\t\t\tif (!program) {\r\n\t\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$scope.refTable = asp.query({select: 2, rotation: rotation.Value, program: program.Id, Date: $scope.currentDate},\r\n\t\t\t\t\tmarkOverlaps, function (err) {\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.getStudents = function () {\r\n\t\t\t\t\t$scope.refTable = asp.query({Date: $scope.currentDate}, markOverlaps);\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t$scope.changeAttendance = function (stu_att, att) {\r\n\t\t\t\t\tasp.update({id: stu_att.Id}, {attendance: att},\r\n\t\t\t\t\tfunction (data) {\r\n\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t}, function (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Makes a download prompt of the current AEC list as a csv file\r\n\t\t\t\t * @param {string} text\r\n\t\t\t\t */\r\n\t\t\t\tvar download = function (text) {\r\n\r\n\t\t\t\t\t//console.log(text);\r\n\t\t\t\t\tvar element = document.createElement('a');\r\n\t\t\t\t\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n\t\t\t\t\telement.setAttribute('download', 'ASPList-' + $scope.currentDate + '.csv');\r\n\t\t\t\t\telement.style.display = 'none';\r\n\t\t\t\t\tdocument.body.appendChild(element);\r\n\t\t\t\t\telement.click();\r\n\t\t\t\t\tdocument.body.removeChild(element);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Converts the current AEC list into a csv text format so it can\r\n\t\t\t\t * be passed to the download method \r\n\t\t\t\t */\r\n\t\t\t\t$scope.listCSV = function () {\r\n\t\t\t\t\tvar text = 'FirstName,LastName,StudentId, Grade,Overlap, Attendance\\n';\r\n\t\t\t\t\tangular.forEach($scope.refTable, function (item) {\r\n\t\t\t\t\t\ttext += item.student.user.FirstName + ',' + item.student.user.LastName\r\n\t\t\t\t\t\t\t+ ',' + item.student.StudentId + ','\r\n\t\t\t\t\t\t\t+ item.student.Grade + ','\r\n\t\t\t\t\t\t\t+ (item.overlap ? item.overlap.msg : 'N/A')\r\n\t\t\t\t\t\t\t+ ',' + (item.student.asp_attendance[0].Attendance)\r\n\t\t\t\t\t\t\t+ ' \\n';\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdownload(text);\r\n\t\t\t\t};\r\n\r\n\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Removes $scope.selected student from the refTable and then\r\n\t\t\t\t * sets it to null (clear field)\r\n\t\t\t\t * \r\n\t\t\t\t */\r\n\t\t\t\tvar removeSelectedStudentFromTableAndClear = function () {\r\n//\t\t\t\t\tfor (var i = 0; i < $scope.refTable.length; i++)\r\n//\t\t\t\t\t\tif ($scope.selected.student.id === $scope.refTable[i].id) {\r\n//\t\t\t\t\t\t\t$scope.refTable.splice(i, 1);\r\n//\t\t\t\t\t\t\tbreak;\r\n//\t\t\t\t\t\t}\r\n\t\t\t\t\t$scope.selected.student = null;\r\n\t\t\t\t};\r\n\t\t\t}]);\r\n\r\n}(angular.module('Argus')));\t\t\t\t\t\t","/* global angular */\r\n\r\n(function (app) {\r\n\t\"use strict\";\r\n\tapp\r\n\t\t.controller(\"ManageCtrl\", [\"$scope\", \"$filter\", \"$modal\", \"referrals\", \"PassesService\",\r\n\t\t\t\"StudentsService\", \"notify\", \"AECListService\", \"ASPService\", \"$timeout\", '$rootScope',\r\n\t\t\tfunction ($scope, $filter, $modal, referrals, passes, students, notify, aec, asp, $timeout, $rootScope) {\r\n\t\t\t\t$scope.selected = {student: null};\r\n\t\t\t\t$scope.refTable = [];// table model\r\n\t\t\t\t$scope.currentDate = new Date();\r\n\r\n//\t\t\t\t$scope.programs = [\r\n//\t\t\t\t\t{Name: 'Art', Id: 76},\r\n//\t\t\t\t\t{Name: 'Bikes (PE)', Id: 77},\r\n//\t\t\t\t\t{Name: 'Board Games (PE)', Id: 78},\r\n//\t\t\t\t\t{Name: 'Cooking (Class)', Id: 79},\r\n//\t\t\t\t\t{Name: 'Cooking (Kitchen)', Id: 80},\r\n//\t\t\t\t\t{Name: 'Hip-Hop (PE)', Id: 81},\r\n//\t\t\t\t\t{Name: 'Math Music (PE)', Id: 82},\r\n//\t\t\t\t\t{Name: 'Music', Id: 83},\r\n//\t\t\t\t\t{Name: 'PE', Id: 84},\r\n//\t\t\t\t\t{Name: 'Theatre', Id: 85}\r\n//\t\t\t\t];\r\n\r\n\t\t\t\t$scope.rotations = [\r\n\t\t\t\t\t{Name: 'Rotation 1', Value: 1},\r\n\t\t\t\t\t{Name: 'Rotation 2', Value: 2}\r\n\r\n\t\t\t\t];\r\n\r\n\t\t\t\t$scope.refTable = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuser: {FirstName: 'First', LastName: 'Last'},\r\n\t\t\t\t\t\tStudentId: '888',\r\n\t\t\t\t\t\tGrade: 99, Id: '1', attendance: 1\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Watch for changes in the datepicker then load the AECList \r\n\t\t\t\t * For the selected Date. Also adjusts data received\r\n\t\t\t\t * to be easily shown in the view\r\n\t\t\t\t */\r\n\t\t\t\t$scope.$watch('form.date.$viewValue', function (newVal) {\r\n\t\t\t\t\tif (newVal) {//when date has a valid date request the List from that date\r\n\t\t\t\t\t\t$scope.currentDate = newVal;\r\n\t\t\t\t\t\t$scope.selected.rotation = null;\r\n\t\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t\t\tconsole.log($rootScope.schoolId);\r\n\t\t\t\t\t\tif ($rootScope.currentUser.schoolId === 2) {\r\n\t\t\t\t\t\t\t$scope.refTable = asp.query({Date: $scope.currentDate}, markOverlaps);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.onSelectedRotation = function (rotation) {\r\n\t\t\t\t\tif (!rotation) {\r\n\t\t\t\t\t\t$scope.selected.program = null;\r\n\t\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$scope.selected.program = null;\r\n\t\t\t\t\t$scope.refTable = null;\r\n\t\t\t\t\tasp.query({select: 1, rotation: rotation.Value, Date: $scope.currentDate},\r\n\t\t\t\t\tfunction (data) {\r\n\t\t\t\t\t\t// check for date and group all the PE into 1 PE \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$scope.programs = data;\r\n\t\t\t\t\t}, function (err) {\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfunction markOverlaps(data) {\r\n\t\t\t\t\tangular.forEach(data, function (stu) {\r\n\t\t\t\t\t\tvar hasiss = false, hasaec = false, hasoroom = false;\r\n\t\t\t\t\t\tangular.forEach(stu.student.user.referred, function (ref) {\r\n\t\t\t\t\t\t\tif (ref.ReferralTypeId === 12) {\r\n\t\t\t\t\t\t\t\thasaec = true;\r\n\r\n\t\t\t\t\t\t\t} else if ((ref.ReferralTypeId === 5 || ref.ReferralTypeId === 6 || ref.ReferralTypeId === 7\r\n\t\t\t\t\t\t\t\t|| ref.ReferralTypeId === 10 || ref.ReferralTypeId === 17 || ref.ReferralTypeId === 15)) {\r\n\t\t\t\t\t\t\t\thasiss = true;\r\n\r\n\t\t\t\t\t\t\t} else if ((ref.ReferralTypeId === 1 || ref.ReferralTypeId === 2 || ref.ReferralTypeId === 3 || ref.ReferralTypeId === 16 || ref.ReferralTypeId === 10 || ref.ReferralTypeId === 19)) {\r\n\t\t\t\t\t\t\t\thasoroom = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (hasiss) {\r\n\t\t\t\t\t\t\tstu.overlap = {class: 'bg-danger', msg: 'Has ISS'};\r\n\r\n\t\t\t\t\t\t} else if (hasoroom) {\r\n\t\t\t\t\t\t\tstu.overlap = {class: 'bg-danger', msg: 'Has ORoom'};\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (hasaec) {\r\n\t\t\t\t\t\t\tstu.overlap = {class: 'bg-warning', msg: 'Has AEC'};\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$scope.onSelectedProgram = function (program, rotation) {\r\n\t\t\t\t\tif (!program) {\r\n\t\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$scope.refTable = asp.query({select: 2, rotation: rotation.Value, program: program.Id, Date: $scope.currentDate},\r\n\t\t\t\t\tmarkOverlaps, function (err) {\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.getStudents = function () {\r\n\t\t\t\t\t$scope.refTable = asp.query({Date: $scope.currentDate}, markOverlaps);\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t$scope.changeAttendance = function (stu_att, att) {\r\n\t\t\t\t\tasp.update({id: stu_att.Id}, {attendance: att},\r\n\t\t\t\t\tfunction (data) {\r\n\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t}, function (err) {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Makes a download prompt of the current AEC list as a csv file\r\n\t\t\t\t * @param {string} text\r\n\t\t\t\t */\r\n\t\t\t\tvar download = function (text) {\r\n\r\n\t\t\t\t\t//console.log(text);\r\n\t\t\t\t\tvar element = document.createElement('a');\r\n\t\t\t\t\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n\t\t\t\t\telement.setAttribute('download', 'ASPList-' + $scope.currentDate + '.csv');\r\n\t\t\t\t\telement.style.display = 'none';\r\n\t\t\t\t\tdocument.body.appendChild(element);\r\n\t\t\t\t\telement.click();\r\n\t\t\t\t\tdocument.body.removeChild(element);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Converts the current AEC list into a csv text format so it can\r\n\t\t\t\t * be passed to the download method \r\n\t\t\t\t */\r\n\t\t\t\t$scope.listCSV = function () {\r\n\t\t\t\t\tvar text = 'FirstName,LastName,StudentId, Grade,Overlap, Attendance\\n';\r\n\t\t\t\t\tangular.forEach($scope.refTable, function (item) {\r\n\t\t\t\t\t\ttext += item.student.user.FirstName + ',' + item.student.user.LastName\r\n\t\t\t\t\t\t\t+ ',' + item.student.StudentId + ','\r\n\t\t\t\t\t\t\t+ item.student.Grade + ','\r\n\t\t\t\t\t\t\t+ (item.overlap ? item.overlap.msg : 'N/A')\r\n\t\t\t\t\t\t\t+ ',' + (item.student.asp_attendance[0].Attendance)\r\n\t\t\t\t\t\t\t+ ' \\n';\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdownload(text);\r\n\t\t\t\t};\r\n\r\n\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Removes $scope.selected student from the refTable and then\r\n\t\t\t\t * sets it to null (clear field)\r\n\t\t\t\t * \r\n\t\t\t\t */\r\n\t\t\t\tvar removeSelectedStudentFromTableAndClear = function () {\r\n//\t\t\t\t\tfor (var i = 0; i < $scope.refTable.length; i++)\r\n//\t\t\t\t\t\tif ($scope.selected.student.id === $scope.refTable[i].id) {\r\n//\t\t\t\t\t\t\t$scope.refTable.splice(i, 1);\r\n//\t\t\t\t\t\t\tbreak;\r\n//\t\t\t\t\t\t}\r\n\t\t\t\t\t$scope.selected.student = null;\r\n\t\t\t\t};\r\n\t\t\t}]);\r\n\r\n}(angular.module('Argus')));\t\t\t\t\t\t","/* global angular, URL */\r\n\r\n(function (app) {\r\n\t\"use strict\";\r\n\tapp\r\n\t\t.controller(\"manageAECAbsenceController\",\r\n\t\t\t[\"$scope\", \"$modal\", \"referrals\", \"PassesService\", \"UserActionsService\", 'notify', 'AECAbsenceListService','UtilService',\r\n\t\t\t\tfunction ($scope, $modal, referrals, passes, useractions, notify, aec,utils) {\r\n\t\t\t\t\t$scope.selected = {};\r\n\t\t\t\t\t$scope.refTable = [];// table model\r\n\t\t\t\t\t$scope.currentDate = new Date(); // date on the date picker\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Watch for changes in the datepicker then load the AECAbsence list\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.$watch('form.date.$viewValue', function (newVal, oldVal) {\r\n\r\n\t\t\t\t\t\tif (newVal) {//when date has a valid date request the List from that date\r\n\t\t\t\t\t\t\t$scope.currentDate = newVal;\r\n\t\t\t\t\t\t\tconsole.log(\"newVal = \" + $scope.form.date.$viewValue);\r\n\r\n\t\t\t\t\t\t\treferrals.query({id: newVal, absence: true}, function (data) {\r\n\r\n\t\t\t\t\t\t\t\tif (!data.length) {\r\n\t\t\t\t\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t\t\t\t\t\tnotify({message: \"No students for current date\",\r\n\t\t\t\t\t\t\t\t\t\tclasses: 'alert-warning', templateUrl: 'views/common/notify.html'});\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t$scope.refTable = data;\r\n\t\t\t\t\t\t\t\t\t$scope.passesTable = data;\r\n\t\t\t\t\t\t\t\t\tangular.forEach($scope.refTable, function (student) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tstudent.status = [false, true];\r\n\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Makes API call to get a pdf of the AECAbsence passes for the students\r\n\t\t\t\t\t * assigned AEC for the current date\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.getPasses = function () {\r\n\t\t\t\t\t\tnotify({message: \"Now Generating Passes\",\r\n\t\t\t\t\t\t\tclasses: 'alert-successs', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t\t$scope.getPasses = function () {\r\n\t\t\t\t\t\t\tpasses.pdf({date: $scope.currentDate, param: 'absence'}, function (data) {\r\n\t\t\t\t\t\t\t\tvar fileURL = URL.createObjectURL(data.response);\r\n\t\t\t\t\t\t\t\twindow.open(fileURL);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Select the student that is clicked in the table so that the user doesn't \r\n\t\t\t\t\t * have to type it \r\n\t\t\t\t\t * @param {int} $index: reftable index of the clicked student \r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.onSelect = function ($index) {\r\n\t\t\t\t\t\t$scope.selected.student = $scope.refTable[$index];\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Converts the Kids that were marked with SentOut or Walkout  into a csv text \r\n\t\t\t\t\t * format so it can downloaded and Referred to O-Room\r\n\t\t\t\t\t * be passed to the download method \r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.AECFollowupToCSV = function () {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//headings\r\n\t\t\t\t\t\t\tvar text = 'Teacher FirstName, Teacher LastName, FirstName,LastName,StudentId, Grade, Assignment\\n';\r\n\t\t\t\t\t\t\tangular.forEach($scope.refTable, function (student) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tangular.forEach(student.referred, function(ref){\r\n\t\t\t\t\t\t\t\t\ttext += ref.teacher.FirstName + ',' + ref.teacher.LastName + ',' ;\r\n\t\t\t\t\t\t\t\t\ttext += student.FirstName + ','+student.LastName +',';\r\n\t\t\t\t\t\t\t\t\ttext += student.student.StudentId + ',' + student.student.Grade + ',';\r\n\t\t\t\t\t\t\t\t\ttext += ref.assignment.Name\r\n\t\t\t\t\t\t\t\t\ttext += ' \\n';\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tutils.downloadCSV(text, 'AEC-Followup-List_'+$scope.currentDate);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t/******** MANAGE AEC Absence **********/\r\n\t\t\t\t\t// for the next submit functions remove student from list self-reducing list.\r\n\t\t\t\t\t// To avoid duplicate profile entries only 1 entry should be created in\r\n\t\t\t\t\t// useractions table and all referrals must be changed in referrals \r\n\t\t\t\t\t// table (see backend implementation)\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * PUT API call to change the referral status to referred (ReferralStatus 0)\r\n\t\t\t\t\t * as well as loggin it in the user actions for the profile \r\n\t\t\t\t\t * @param {object} data: information returned by modal \r\n\t\t\t\t\t * \t(noShow,walkOut, SentOut, schoolAbsent, disciplinary, clear,comment )\r\n\t\t\t\t\t */\r\n\t\t\t\t\tvar submitComment = function (data) {// data:{comment, noShow, walkOut, sentOut}\r\n\t\t\t\t\t\tvar student = $scope.selected.student;\r\n\t\t\t\t\t\tvar status = data.noShow ? 0 : data.walkOut ? 1 : data.sentOut ? 2 : data.schoolAbsent ? 3 : data.disciplinary ? 4 : data.clear ? 5 : -1;\r\n\r\n\t\t\t\t\t\t// submit info of student '$scope.selected.student' to database\r\n\t\t\t\t\t\tvar dataToSent = {param: 'AbsentComment', comment: data.comment, status: status};\r\n\t\t\t\t\t\treferrals.update({id: student.id}, dataToSent);\r\n\r\n\t\t\t\t\t\tvar indexOfStudent = $scope.refTable.indexOf($scope.selected.student);\r\n\t\t\t\t\t\t$scope.refTable.splice(indexOfStudent, 1);\r\n\t\t\t\t\t\t$scope.selected.student = null;\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t/********** MODALS   **********/\r\n\t\t\t\t\t/** Comment Modal\r\n\t\t\t\t\t * Opens the Comment modal and passes in the student selected to be available\r\n\t\t\t\t\t * in the modal context, calls the SubmitComment function when modal\r\n\t\t\t\t\t * submit button is clicked, does nothing otherwise\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$scope.openComment = function (student) {\r\n\r\n\t\t\t\t\t\tvar commentModal = $modal.open({\r\n\t\t\t\t\t\t\ttemplateUrl: 'views/modals/CommentAbsenceModal.html',\r\n\t\t\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\t\t\tcontroller: function ($scope, student) {\r\n\t\t\t\t\t\t\t\t$scope.title = \"Reteach Followup Attendance\";\r\n\t\t\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\t\t\tstudent: function () {\r\n\t\t\t\t\t\t\t\t\treturn student;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});// End commentModal\r\n\r\n\t\t\t\t\t\tcommentModal.result.then(function (data) {\r\n\t\t\t\t\t\t\t// present or clear\r\n\t\t\t\t\t\t\tif (student.radioModel == 51 || student.radioModel == 52) { // one request\r\n\t\t\t\t\t\t\t\tvar referralIds = student.referred.map(function (o) {\r\n\t\t\t\t\t\t\t\t\treturn o.Id;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar payload = {\r\n\t\t\t\t\t\t\t\t\tActionType: student.radioModel,\r\n\t\t\t\t\t\t\t\t\tComment: student.comment,\r\n\t\t\t\t\t\t\t\t\tDate: $scope.currentDate,\r\n\t\t\t\t\t\t\t\t\treferrals: referralIds,\r\n\t\t\t\t\t\t\t\t\treferred: student.referred\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\taec.update({id: student.id}, payload, function (data) {\r\n\t\t\t\t\t\t\t\t\tnotify(data.msg);\r\n\t\t\t\t\t\t\t\t\tclearInputAndRemoveFromTable();\r\n\t\t\t\t\t\t\t\t}, function (error) {\r\n\t\t\t\t\t\t\t\t\tnotify('error, Before continuing please contact a System Administrator');\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar referred = student.referred.map(function(o){\r\n\t\t\t\t\t\t\t\t\treturn {Id: o.Id, Folders:o.selected?true:false};\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tvar urlEncoded  = {id:student.id};\r\n\t\t\t\t\t\t\t\tvar payload = {\r\n\t\t\t\t\t\t\t\t\tparam:'attendance',\r\n\t\t\t\t\t\t\t\t\tReferrals : referred,\r\n\t\t\t\t\t\t\t\t\tActionType:student.radioModel,\r\n\t\t\t\t\t\t\t\t\tComment:student.comment,\r\n\t\t\t\t\t\t\t\t\tDate: $scope.currentDate\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\taec.update(urlEncoded, payload, function(data){\r\n\t\t\t\t\t\t\t\t\tnotify(data.msg);\r\n\t\t\t\t\t\t\t\t\tclearInputAndRemoveFromTable();\r\n\t\t\t\t\t\t\t\t},function(){\r\n\t\t\t\t\t\t\t\t\tnotify('error');\r\n\t\t\t\t\t\t\t\t});\r\n//\t\t\t\t\t\t\t\tangular.forEach(student.referred, function (item) { // multiple requests\r\n//\t\t\t\t\t\t\t\t\tvar urlEncoded = {id: item.Id};\r\n//\t\t\t\t\t\t\t\t\tvar payload = {\r\n//\t\t\t\t\t\t\t\t\t\tparam: 'attendance',\r\n//\t\t\t\t\t\t\t\t\t\tFolders: item.selected ? true : false,\r\n//\t\t\t\t\t\t\t\t\t\tActionType: student.radioModel,\r\n//\t\t\t\t\t\t\t\t\t\tComment: student.comment,\r\n//\t\t\t\t\t\t\t\t\t\tDate: $scope.currentDate,\r\n//\t\t\t\t\t\t\t\t\t\tReferrals: referred\r\n//\t\t\t\t\t\t\t\t\t};\r\n//\t\t\t\t\t\t\t\t\taec.update(urlEncoded, payload, function (data) {\r\n//\t\t\t\t\t\t\t\t\t\t//notify(data.msg);\r\n//\t\t\t\t\t\t\t\t\t\tclearInputAndRemoveFromTable()\r\n//\t\t\t\t\t\t\t\t\t}, function (error) {\r\n//\t\t\t\t\t\t\t\t\t\tnotify('error, Before continuing please contact an admin');\r\n//\t\t\t\t\t\t\t\t\t});\r\n//\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n//\r\n//\t\t\t\t\t\tvar indexOfStudent = $scope.refTable.indexOf($scope.selected.student);\r\n//\t\t\t\t\t\t$scope.refTable.splice(indexOfStudent, 1);\r\n//\t\t\t\t\t\t$scope.selected.student = null;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tfunction clearInputAndRemoveFromTable(){\r\n\t\t\t\t\t\tvar indexOfSelected = $scope.refTable.indexOf($scope.selected.student);\r\n\t\t\t\t\t\t$scope.refTable.splice(indexOfSelected,1);\r\n\t\t\t\t\t\t$scope.selected.student = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}]);\r\n}(angular.module('Argus')));","/* global angular, URL */\r\n\r\n(function (app) {\r\n\t\"use strict\";\r\n\tapp\r\n\t\t.controller(\"manageAECController\", [\"$scope\", \"$filter\", \"$modal\", \"referrals\", \"PassesService\",\r\n\t\t\t\"StudentsService\", \"notify\", \"AECListService\",'UtilService',\r\n\t\t\tfunction ($scope, $filter, $modal, referrals, passes, students, notify, aec,utils) {\r\n\t\t\t\t$scope.selected = {student: null};\r\n\t\t\t\t$scope.refTable = [];// table model\r\n\t\t\t\t$scope.currentDate = new Date();\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Watch for changes in the datepicker then load the AECList \r\n\t\t\t\t * For the selected Date. Also adjusts data received\r\n\t\t\t\t * to be easily shown in the view\r\n\t\t\t\t */\r\n\t\t\t\t$scope.$watch('form.date.$viewValue', function (newVal) {\r\n\r\n\t\t\t\t\tif (newVal) {//when date has a valid date request the List from that date\r\n\t\t\t\t\t\t$scope.currentDate = newVal;\r\n\t\t\t\t\t\tconsole.log(\"newVal = \" + $scope.form.date.$viewValue);\r\n\t\t\t\t\t\t$scope.refTable = aec.getList(newVal);\r\n\t\t\t\t\t\t/*\taec.query({id: newVal}, function (data) {\r\n\t\t\t\t\t\t\tvar someFoldersMarked = false;\r\n\t\t\t\t\t\t\tangular.forEach(data, function (student) {\r\n\t\t\t\t\t\t\t\tvar assignments = {completed: [], incomplete: []};\r\n\t\t\t\t\t\t\t\tstudent.status = {classs: '', action: ''};\r\n\t\t\t\t\t\t\t\tstudent.ActivityTypeId = 0;\r\n\t\t\t\t\t\t\t\tangular.forEach(student.referred, function (ref) {\r\n\t\t\t\t\t\t\t\t\tvar counters = student.counters;\r\n\r\n\t\t\t\t\t\t\t\t\tif (counters && counters.ORoomsToBeServed > 0) {\r\n\t\t\t\t\t\t\t\t\t\tstudent.overlap = {place: 'Has Oroom', class: 'bg-danger'};\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (counters && counters.ISSDays > 0) {\r\n\t\t\t\t\t\t\t\t\t\tstudent.overlap = {place: 'Has ISS', class: 'bg-danger'};\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// check for present\r\n\r\n\t\t\t\t\t\t\t\t\tstudent.ActivityTypeId = ref.ActivityTypeId;\r\n\t\t\t\t\t\t\t\t\tref.HasFolder = ref.HasFolder === 1 ? true : false;\r\n\t\t\t\t\t\t\t\t\tif (ref.HasFlder) {\r\n\t\t\t\t\t\t\t\t\t\tsomeFoldersMarked = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (ref.ActivityTypeId === 49) {// present , check what assignments were completed\r\n\t\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\t\tref.AssignmentCompleted = ref.AssignmentCompleted === 1 ? true : false;\r\n\t\t\t\t\t\t\t\t\t\tif (ref.AssignmentCompleted)\r\n\t\t\t\t\t\t\t\t\t\t\tassignments.completed.push(ref);\r\n\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\tassignments.incomplete.push(ref);\r\n\r\n\t\t\t\t\t\t\t\t\t\tstudent.status.action = 'Present: ';\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tif (student.ActivityTypeId === 49) {// present , check what assignments were completed\r\n\t\t\t\t\t\t\t\t\tif (assignments.incomplete.length === 0) {\r\n\t\t\t\t\t\t\t\t\t\tstudent.status.class = 'bg-green';\r\n\t\t\t\t\t\t\t\t\t\tstudent.status.action += 'complete';\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tstudent.status.class = 'bg-warning';\r\n\t\t\t\t\t\t\t\t\t\tstudent.status.action += 'incomplete';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (student.ActivityTypeId === 55) { // sent out\r\n\t\t\t\t\t\t\t\t\tstudent.status.action = 'Sent Out: Oroom-today';\r\n\t\t\t\t\t\t\t\t\tstudent.status.class = 'bg-danger';\r\n\r\n\r\n\t\t\t\t\t\t\t\t} else if (student.ActivityTypeId === 56) { // walked out\r\n\t\t\t\t\t\t\t\t\tconsole.log('walked out');\r\n\t\t\t\t\t\t\t\t\tstudent.status.action = 'Walked Out: Oroom-tomorrow';\r\n\t\t\t\t\t\t\t\t\tstudent.status.class = 'bg-danger';\r\n\t\t\t\t\t\t\t\t} else if (student.ActivityTypeId === 50) { // rescheduled\r\n\t\t\t\t\t\t\t\t\tstudent.status = {action: 'Rescheduled', class: 'bg-green'};\r\n\t\t\t\t\t\t\t\t} else if (student.ActivityTypeId === 51) {\r\n\t\t\t\t\t\t\t\t\tstudent.status = {action: 'Cleared', class: 'bg-green'};\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (someFoldersMarked) {\r\n\t\t\t\t\t\t\t\t\tconsole.log('marked');\r\n\t\t\t\t\t\t\t\t\tstudent.status.action = 'Folders Marked';\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t});\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tif (!data.length) {\r\n\t\t\t\t\t\t\t\tnotify({message: \"No students for current date\",\r\n\t\t\t\t\t\t\t\t\tclasses: 'alert-warning', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});*/\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Makes API call to get a pdf of the AEC passes for the students\r\n\t\t\t\t * assigned AEC for the current date\r\n\t\t\t\t */\r\n\t\t\t\t$scope.getPasses = function () {\r\n\t\t\t\t\tnotify({message: \"Now Generating Passes\",\r\n\t\t\t\t\t\tclasses: 'alert-successs', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\tpasses.pdf({date: $scope.currentDate, param: 'AECList'}, function (data) {\r\n\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\tvar fileURL = URL.createObjectURL(data.response);\r\n\t\t\t\t\t\twindow.open(fileURL);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Select the student that is clicked in the table so that the user doesn't \r\n\t\t\t\t * have to type it \r\n\t\t\t\t * @param {int} $index: reftable index of the clicked student \r\n\t\t\t\t */\r\n\t\t\t\t$scope.onSelect = function ($index) {\r\n\t\t\t\t\t$scope.selected.student = $scope.refTable[$index];\r\n\t\t\t\t};\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Converts the current AEC list into a csv text format so it can\r\n\t\t\t\t * be passed to the download method \r\n\t\t\t\t */\r\n\t\t\t\t$scope.AECListToCSV = function () {\r\n\t\t\t\t\tvar text = 'TeacherFirst,TeacherLast,FirstName,LastName,StudentId, Grade, Assignment,Overlap, Attendance\\n';\r\n\t\t\t\t\tangular.forEach($scope.refTable, function (item) {\r\n\t\t\t\t\t\tangular.forEach(item.referred, function (referred) {\r\n\t\t\t\t\t\t\ttext += referred.teacher.FirstName + ',' + referred.teacher.LastName + \",\"\r\n\t\t\t\t\t\t\t\t+ item.user.FirstName + ',' + item.user.LastName + ',' + item.StudentId + ','\r\n\t\t\t\t\t\t\t\t+ item.Grade + ',' + referred.assignment.Name + ','\r\n\t\t\t\t\t\t\t\t+ (item.overlap ? item.overlap.place : 'N/A')+',' \r\n\t\t\t\t\t\t\t\t+  item.status.action\r\n\t\t\t\t\t\t\t\t+ ' \\n';\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tutils.downloadCSV(text, 'AEC-List_' + $scope.currentDate );\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t/******** MANAGE AEC **********/\r\n\t\t\t\t// To avoid duplicate profile entries only 1 entry should be created in\r\n\t\t\t\t// useractions table and all referrals must be changed in referrals \r\n\t\t\t\t// table (see backend implementation)\r\n\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * PUT API call to change the referral status to reschedule (ReferralStatus 2), \r\n\t\t\t\t * rescheduling all the referrals as well as loggin the reschedule \r\n\t\t\t\t * into user actions for the profile \r\n\t\t\t\t * @param {object} data: information returned by modal (date,comment,student,excused)\r\n\t\t\t\t */\r\n\t\t\t\tvar submitReschedule = function (data) {\r\n\t\t\t\t\tvar student = data.student;\r\n\t\t\t\t\t// get info from comment box and DatePicker       \r\n\t\t\t\t\t// submit information of student '$scope.selected.student' to the database\r\n\t\t\t\t\tstudent.status = {action: 'Rescheduled',\r\n\t\t\t\t\t\tclass: 'bg-green'};\r\n\r\n\t\t\t\t\tvar referrals = student.referred.map(function (o) {\r\n\t\t\t\t\t\treturn o.Id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar urlEncoded = {id: student.Id};\r\n\t\t\t\t\tvar payload = {\r\n\t\t\t\t\t\tparam: 'reschedule',\r\n\t\t\t\t\t\tComment: data.comment,\r\n\t\t\t\t\t\tnewDate: data.date,\r\n\t\t\t\t\t\tDate: $scope.currentDate,\r\n\t\t\t\t\t\tReferralIds: referrals,\r\n\t\t\t\t\t\texcused: data.excused\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\taec.update(urlEncoded, payload, function (data) {\r\n\t\t\t\t\t\tnotify(data.msg);\r\n\t\t\t\t\t}, function (err) {\r\n\t\t\t\t\t\tnotify({message: \"Reschedule Failed, Please Contact The Admin\",\r\n\t\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tremoveSelectedStudentFromTableAndClear();\r\n\t\t\t\t};\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * PUT API call to change the referral status to clear(ReferralStatus 3), \r\n\t\t\t\t * rescheduling all the referrals as well as loggin the reschedule \r\n\t\t\t\t * into user actions for the profile \r\n\t\t\t\t * @param {object} data: information returned by modal (comment, student)\r\n\t\t\t\t */\r\n\t\t\t\tvar submitClear = function (data) {\r\n\t\t\t\t\tvar student = data.student;\r\n\t\t\t\t\tstudent.status = {action: 'Cleared',\r\n\t\t\t\t\t\tclass: 'bg-green'};\r\n\r\n\t\t\t\t\t// submit information of student '$scope.selected.student' to the database\r\n\r\n\t\t\t\t\tvar referralsIds = student.referred.map(function (o) {\r\n\t\t\t\t\t\treturn o.Id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar urlEncoded = {id: student.Id};\r\n\t\t\t\t\tvar payload = {\r\n\t\t\t\t\t\tparam: 'clear',\r\n\t\t\t\t\t\tComment: data.comment,\r\n\t\t\t\t\t\tReferralIds: referralsIds\r\n\t\t\t\t\t};\r\n\t\t\t\t\taec.update(urlEncoded, payload, function (data) {\r\n\t\t\t\t\t\tnotify(data.msg);\r\n\t\t\t\t\t}, function (data) {\r\n\t\t\t\t\t\tnotify({message: \"Clear Failed, Please Contact The System Admin\",\r\n\t\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tremoveSelectedStudentFromTableAndClear();\r\n\t\t\t\t};\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * PUT API call to change the all unprocessed referrals to absent(ReferralStatus 4)\r\n\t\t\t\t * as well as logging the absent into user actions for the profile \r\n\t\t\t\t */\r\n\t\t\t\t$scope.finishManageAEC = function () {\r\n\t\t\t\t\t/*var prom = submitList($scope.refTable, $scope.currentDate);\r\n\t\t\t\t\tprom.then();*/\r\n\t\t\t\t\tangular.forEach($scope.refTable, function (student) {\r\n\t\t\t\t\t\tif (!(student.ActivityTypeId === 0 && !student.overlap)) {\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tangular.forEach(student.referred, function (ref) {\r\n\t\t\t\t\t\t\t\treferrals.update({'id': ref.Id},\r\n\t\t\t\t\t\t\t\t\t{'param': 'absent', Date: $scope.currentDate},\r\n\t\t\t\t\t\t\t\t\tfunction (response) {\r\n\r\n\t\t\t\t\t\t\t\t\t}, function (response) {\r\n\t\t\t\t\t\t\t\t\t\tnotify({\r\n\t\t\t\t\t\t\t\t\t\t\tmessage: \"Finish Failed, Please Contact The Admin\",\r\n\t\t\t\t\t\t\t\t\t\t\tclasses: 'alert-danger', templateUrl: 'views/common/notify.html'\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$scope.refTable = [];\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfunction isOverlap(student) {\r\n\t\t\t\t\tvar overlap = false;\r\n\t\t\t\t\tvar overlapPlace = '';\r\n\r\n\t\t\t\t\tif (student.counters.ORoomsToBeServed > 0) {\r\n\t\t\t\t\t\toverlapPlace = 'O-Room';\r\n\t\t\t\t\t\toverlap = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (student.counters.ISSDays > 0) {\r\n\t\t\t\t\t\toverlapPlace = 'ISS';\r\n\t\t\t\t\t\toverlap = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (student.counters.OSSPMP > 0) {\r\n\t\t\t\t\t\toverlapPlace = 'OSS';\r\n\t\t\t\t\t\toverlap = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (overlap) {\r\n\r\n\t\t\t\t\t\tif (overlapPlace === 'OSS') {\r\n\t\t\t\t\t\t\tvar modalInstance = $modal.open({\r\n\t\t\t\t\t\t\t\ttemplateUrl: 'views/modals/AttendanceUnavailableModal2.html',\r\n\t\t\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\r\n\t\t\t\t\t\t\t\tsize: 'lg',\r\n\t\t\t\t\t\t\t\tcontroller: function ($scope, student, activity) {\r\n\t\t\t\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t\t\t\tconsole.log(student);\r\n\t\t\t\t\t\t\t\t\t$scope.activity = activity;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\t\t\t\tstudent: function () {\r\n\t\t\t\t\t\t\t\t\t\treturn student;\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tactivity: function () {\r\n\t\t\t\t\t\t\t\t\t\treturn overlapPlace;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar modalInstance = $modal.open({\r\n\t\t\t\t\t\t\t\ttemplateUrl: 'views/modals/attendanceAECFoldersModal.html',\r\n\t\t\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\r\n\t\t\t\t\t\t\t\tsize: 'lg',\r\n\t\t\t\t\t\t\t\tcontroller: function ($scope, student, activity) {\r\n\t\t\t\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t\t\t\tconsole.log(student);\r\n\t\t\t\t\t\t\t\t\t$scope.activity = activity;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\t\t\t\tstudent: function () {\r\n\t\t\t\t\t\t\t\t\t\treturn student;\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tactivity: function () {\r\n\t\t\t\t\t\t\t\t\t\treturn overlapPlace;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tmodalInstance.result.then(function () {\r\n\t\t\t\t\t\t\t\tvar referrals = student.referred.map(function (o) {\r\n\t\t\t\t\t\t\t\t\treturn {Id: o.Id, HasFolder: o.HasFolder || false};\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tvar payload = {\r\n\t\t\t\t\t\t\t\t\tparam: 'attendance',\r\n\t\t\t\t\t\t\t\t\tparam2: 'hasFolders',\r\n\t\t\t\t\t\t\t\t\tActionType: student.ActivityTypeId,\r\n\t\t\t\t\t\t\t\t\tComment: student.comment,\r\n\t\t\t\t\t\t\t\t\tDate: $scope.currentDate,\r\n\t\t\t\t\t\t\t\t\tReferrals: referrals\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tvar urlEncoded = {id: student.Id};\r\n\t\t\t\t\t\t\t\taec.update(urlEncoded, payload, function (data) {\r\n\t\t\t\t\t\t\t\t\tnotify(data.msg);\r\n\t\t\t\t\t\t\t\t\tvar status = {class: 'bg-warning', action: 'foldersMarked'};\r\n\t\t\t\t\t\t\t\t\tstudent.status = status;\r\n\t\t\t\t\t\t\t\t}, function (err) {\r\n\t\t\t\t\t\t\t\t\tnotify('error, Before continuing please contact an admin');\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t/********************************************** MODALS   **************************/\r\n\r\n\t\t\t\t/** Attendance Modal\r\n\t\t\t\t * opens the attendance modal with 3 buttons (present, sent out, walked out \r\n\t\t\t\t */\r\n\t\t\t\t$scope.AECAttendance = function (student, $index) {\r\n\r\n\t\t\t\t\tif (isOverlap(student)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.log(student);\r\n\t\t\t\t\tvar modalInstance = $modal.open({\r\n\t\t\t\t\t\ttemplateUrl: 'views/modals/attendanceAECModal.html',\r\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\r\n\t\t\t\t\t\tsize: 'lg',\r\n\t\t\t\t\t\tcontroller: function ($scope, student) {\r\n\t\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\t\tstudent: function () {\r\n\t\t\t\t\t\t\t\treturn student;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tmodalInstance.result.then(function (data) {// on SUBMIT\r\n\t\t\t\t\t\tvar student = data.student;\r\n\t\t\t\t\t\taec.markActions([student])\r\n\t\t\t\t\t\t/*// check what buttons were present  and what assignments were completed\r\n\t\t\t\t\t\t// to set the color and the attendance \r\n\t\t\t\t\t\tvar assignments = {completed: [], incomplete: []};\r\n\t\t\t\t\t\tvar status = {class: '', action: ''};\r\n\t\t\t\t\t\tif (student.ActivityTypeId == 49) {// present , check what assignments were completed\r\n\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\tangular.forEach(student.referred, function (ref) {\r\n\t\t\t\t\t\t\t\tif (ref.AssignmentCompleted)\r\n\t\t\t\t\t\t\t\t\tassignments.completed.push(ref);\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\tassignments.incomplete.push(ref);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tstatus.action = 'Present: ';\r\n\t\t\t\t\t\t\tvar aecComplete = false;\r\n\r\n\t\t\t\t\t\t\tif (assignments.incomplete.length === 0) {\r\n\t\t\t\t\t\t\t\tstatus.class = 'bg-green';\r\n\t\t\t\t\t\t\t\tstatus.action += 'complete';\r\n\t\t\t\t\t\t\t\taecComplete = true;\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tstatus.class = 'bg-warning';\r\n\t\t\t\t\t\t\t\tstatus.action += 'incomplete';\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else if (student.ActivityTypeId == 55) {\r\n\t\t\t\t\t\t\tconsole.log('sent out');\r\n\t\t\t\t\t\t\tstatus.action = 'Sent Out: Oroom-today';\r\n\t\t\t\t\t\t\tstatus.class = 'bg-danger';\r\n\t\t\t\t\t\t} else if (student.ActivityTypeId == 56) {\r\n\t\t\t\t\t\t\tconsole.log('walked out');\r\n\t\t\t\t\t\t\tstatus.action = 'Walked Out: Oroom-tomorrow';\r\n\t\t\t\t\t\t\tstatus.class = 'bg-danger';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstudent.assignments = assignments;\r\n\t\t\t\t\t\tstudent.status = status;*/\r\n\r\n\r\n\r\n\t\t\t\t\t\t// post the comment and other things to the database \r\n\r\n\t\t\t\t\t\tconsole.log(student);\r\n\t\t\t\t\t\t// sent when present\r\n\t\t\t\t\t\tvar referrals = student.referred.map(function (o) {\r\n\t\t\t\t\t\t\treturn {Id: o.Id, AssignmentCompleted: o.AssignmentCompleted};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// sent otherwise\r\n\t\t\t\t\t\tvar referralIds = student.referred.map(function (o) {\r\n\t\t\t\t\t\t\treturn o.Id;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvar urlEncoded = {id: student.Id};\r\n\t\t\t\t\t\tvar payload = {\r\n\t\t\t\t\t\t\tparam: 'attendance',\r\n\t\t\t\t\t\t\tActionType: student.ActivityTypeId,\r\n\t\t\t\t\t\t\tComment: student.comment,\r\n\t\t\t\t\t\t\tDate: $scope.currentDate,\r\n\t\t\t\t\t\t\tReferrals: student.ActivityTypeId == 49 ? referrals : referralIds\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\taec.update(urlEncoded, payload, function (data) {\r\n\t\t\t\t\t\t\tnotify(data.msg);\r\n\t\t\t\t\t\t}, function (err) {\r\n\t\t\t\t\t\t\tnotify('error, Before continuing please contact an admin');\r\n\t\t\t\t\t\t});\r\n\r\n\r\n\r\n\t\t\t\t\t\t// Do Not Remove From List\r\n//\t\t\t\t\t\tif ($index)\r\n//\t\t\t\t\t\t\t$scope.refTable.splice($index, 1);\r\n//\t\t\t\t\t\telse\r\n//\t\t\t\t\t\t\r\n\t\t\t\t\t\t// only clears the field\r\n\t\t\t\t\t\t$scope.selected.student = null;\r\n\t\t\t\t\t}, function () {// on modal DISMISS\r\n\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t};\r\n\r\n\r\n\t\t\t\t/** Reschedule Modal\r\n\t\t\t\t * Opens the Reschedule modal and passes in the student selected to be available\r\n\t\t\t\t * in the modal context, calls submitReschedule function when modal \r\n\t\t\t\t * submit button is clicked,does nothing otherwise\r\n\t\t\t\t */\r\n\t\t\t\t$scope.openReschedule = function () {\r\n\t\t\t\t\tvar resModal = $modal.open({\r\n\t\t\t\t\t\ttemplateUrl: 'views/modals/RescheduleModal.html',\r\n\t\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\t\tcontroller: function ($scope, student) {\r\n\t\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t\t$scope.date = new Date();\r\n\r\n\t\t\t\t\t\t\t$scope.$watch('form.date.$viewValue', function (newValue, oldValue) {\r\n\t\t\t\t\t\t\t\tif (newValue) { //when date has a valid date request the List from that date\r\n\t\t\t\t\t\t\t\t\t$scope.date = newValue;\r\n\t\t\t\t\t\t\t\t\tconsole.log('date changed');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\t\tstudent: function () {\r\n\t\t\t\t\t\t\t\treturn $scope.selected.student;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});// end modalInstance\r\n\r\n\t\t\t\t\tresModal.result.then(submitReschedule);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t/** Clear Modal\r\n\t\t\t\t * Opens the Clear modal and passes in the student selected to be available\r\n\t\t\t\t * in the modal context, calls submitClear function when modal \r\n\t\t\t\t * submit button is clicked,does nothing otherwise\r\n\t\t\t\t */\r\n\t\t\t\t$scope.openClear = function (studentInfo) {\r\n\r\n\t\t\t\t\tvar clrModal = $modal.open({\r\n\t\t\t\t\t\ttemplateUrl: 'views/modals/ClearModal.html',\r\n\t\t\t\t\t\tsize: 'md',\r\n\t\t\t\t\t\tcontroller: function ($scope, student) {\r\n\t\t\t\t\t\t\t$scope.student = student;\r\n\t\t\t\t\t\t\t$scope.title = 'clear';\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\t\tstudent: function () {\r\n\t\t\t\t\t\t\t\treturn $scope.selected.student;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});// End clrModal\r\n\r\n\t\t\t\t\tclrModal.result.then(submitClear);\r\n\t\t\t\t};\r\n\r\n\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Removes $scope.selected student from the refTable and then\r\n\t\t\t\t * sets it to null (clear field)\r\n\t\t\t\t * \r\n\t\t\t\t */\r\n\t\t\t\tvar removeSelectedStudentFromTableAndClear = function () {\r\n//\t\t\t\t\tfor (var i = 0; i < $scope.refTable.length; i++)\r\n//\t\t\t\t\t\tif ($scope.selected.student.id === $scope.refTable[i].id) {\r\n//\t\t\t\t\t\t\t$scope.refTable.splice(i, 1);\r\n//\t\t\t\t\t\t\tbreak;\r\n//\t\t\t\t\t\t}\r\n\t\t\t\t\t$scope.selected.student = null;\r\n\t\t\t\t};\r\n\t\t\t}]);\r\n\r\n}(angular.module('Argus')));\t\t\t\t\t\t","/* global angular */\r\n\r\n(function (app) {\r\n    \"use strict\";\r\n    app.controller(\"admin1referalController\",\r\n        [\"$scope\", \"assignmentsListService\", \"teachers\", \"AECListService\", \"StudentsService\", '$modal', 'notify', '$http', '$localStorage',\r\n            function ($scope, assignmentsService, teachers, aec, students, $modal, notify, $http, $localStorage) {\r\n                $scope.selected = {}; // model for the possible selections (selected.student,   or seleted.assignments)\r\n                $scope.currentDate = new Date(); // date on the datepicker\r\n                $scope.teacherStudents = []; // model for autocomplete\r\n\r\n                $scope.$storage = $localStorage;\r\n\r\n                // set ref table\r\n                $scope.$storage.refTable = $scope.$storage.refTable || [];\r\n\r\n                $scope.refTable = $scope.$storage.refTable; // model for dynamic table\r\n                $scope.edits = [];\r\n                $scope.$storage.eightPeriods = $scope.$storage.eightPeriods || [];\r\n                $scope.eightPeriods = $scope.$storage.eightPeriods;\r\n\r\n                $scope.$storage.ninethPeriods = $scope.$storage.ninethPeriods || [];\r\n                $scope.ninethPeriods = $scope.$storage.ninethPeriods;\r\n\r\n                $scope.teachers = teachers.query();\r\n\r\n                /**\r\n                 * Watch for changes in the datepicker to add students to that date's\r\n                 * AEC List\r\n                 */\r\n                $scope.$watch('form.date.$viewValue', function (newVal, oldVal) {\r\n                    if (newVal) {//when date has a valid date request the List from that date\r\n                        $scope.currentDate = newVal;\r\n                    }\r\n                });\r\n\r\n                /* REFER A STUDENT LOGIC */\r\n\r\n                /**\r\n                 * Called when a student is selected or deselected\r\n                 * no action for now\r\n                 */\r\n                $scope.onSelectedStudent = function () {\r\n                    return;\r\n                    // add to the list\r\n                    var alreadyInList = false;\r\n                    for (var i = 0; i < $scope.refTable.length; i++) {\r\n                        if ($scope.refTable[i].id === $scope.selected.student.user.id) {\r\n                            alreadyInList = true;\r\n                        }\r\n                    }\r\n                    if (!alreadyInList)\r\n                        $scope.refTable.push($scope.selected.student.user);\r\n                    else\r\n                        alert('student is already in the list');\r\n                    // clear the field\r\n                    //$scope.selected.student = null;\r\n                };\r\n\r\n                /**\r\n                 * Called when teacher is selected or deselected. Retrieves the selected\r\n                 * teacher's students if a teacher is selected.  If deselected\r\n                 * set teacherStudents to null\r\n                 */\r\n                $scope.onSelectedTeacher = function () {\r\n                    if (!$scope.selected.teacher) {// if teacher deselected\r\n                        $scope.teacherStudents = null;\r\n                        return;\r\n                    }\r\n                    $scope.teacherStudents = null;\r\n                    var teacherId = $scope.selected.teacher.id;\r\n                    students.query({teacherId: teacherId}, function (results) {\r\n                        console.log(\"Teacher students\");\r\n                        console.log(results);\r\n\r\n                        $scope.teacherStudents = results;\r\n                    }, function (error) {\r\n                        console.log(error);\r\n                    });\r\n\r\n                };\r\n\r\n\r\n                /** New Assignment Modal\r\n                 * Opens the New Assignment modal and passes in the teacher selected to be available\r\n                 * in the modal context, on submit makes a post call to assignments\r\n                 * to add the current assignment to the teacher\r\n                 */\r\n                $scope.openCreateNewAssignment = function () {\r\n                    var modalInstance = $modal.open({\r\n                        templateUrl: 'views/modals/addNewAssignmentModal.html',\r\n                        size: 'md',\r\n                        controller: function ($scope, teacher) {\r\n                            $scope.teacher = teacher;\r\n                        },\r\n                        resolve: {// variables that get injected into the controller (taken from current $scope)\r\n                            teacher: function () {\r\n                                return $scope.selected.teacher;\r\n                            }\r\n                        }\r\n                    }); // End modalInstace\r\n\r\n                    modalInstance.result.then(function (data) {\r\n                        assignmentsService.save({\r\n                            teacher: $scope.selected.teacher,\r\n                            assignment: data\r\n                        }, function (response) {\r\n                            var teacher = $scope.selected.teacher;\r\n                            response.assignment.Id = response.assignment.Id + \"\";\r\n                            $scope.selected.teacher.assignments.push(response.assignment);\r\n\r\n                            var assign = $scope.selected.assignments;\r\n                            assign = assign ? assign : [];\r\n                            assign.push(response.assignment);\r\n                        }, function (response) {\r\n                        });\r\n                    });\r\n                };\r\n\r\n                /**\r\n                 * Adds selected.student with selected.assignments to the refTable\r\n                 * then clears selected.student\r\n                 */\r\n                $scope.addToList = function () {\r\n                    var selectedAssignments = $scope.selected.assignments;\r\n                    var referralToAdd = $scope.selected.student;\r\n                    var selectedTeacher = $scope.selected.teacher;\r\n                    console.log($scope.selected.student);\r\n                    $http.get('api/classes/' + $scope.selected.student.id).then(function (response) {\r\n                        var last = response.data[7];\r\n                        var lastlast = response.data[8];\r\n                        $scope.eightPeriods.push(last);\r\n                        $scope.ninethPeriods.push(lastlast);\r\n                        console.log($scope.eightPeriods);\r\n                        console.log($scope.ninethPeriods);\r\n                    });\r\n\r\n                    addAssignmentsToStudent(selectedAssignments, referralToAdd);\r\n                    referralToAdd.teacher = $scope.selected.teacher;\r\n                    $scope.refTable.push(referralToAdd);\r\n                    console.log($scope.refTable);\r\n                    $scope.selected.student = null;\r\n                };\r\n\r\n                /**\r\n                 * Adds assignments to the student object\r\n                 * @param  {[objects]} assignments    : list of assignment objects to be added\r\n                 * @param    {object}    student        :\r\n                 */\r\n                function addAssignmentsToStudent(assignments, student) {\r\n\r\n                    if (!student.referred) {// current student doesnt have any assignments, add all the selected assignments\r\n                        //  copy assignments into referred\r\n                        student.referred = assignments.slice();\r\n                        return;\r\n                    }\r\n\r\n                    for (var i = 0; i < assignments.length; i++) {\r\n                        var j = false;\r\n                        for (j = 0; j < student.referred.length; j++) {\r\n                            if (student.referred[j].Id === assignments[i].Id)\r\n                                break;\r\n                        }\r\n\r\n                        if (j === student.referred.length)// assignment is not already in the student\r\n                            student.referred.unshift(assignments[i]);\r\n                    }\r\n\r\n\r\n                    delete student.selected; // delete the selected property;\r\n\r\n                }\r\n\r\n                /**\r\n                 * POST API call to referrals. adds all the students in the refTable to the\r\n                 * current date's AEC list.\r\n                 * Despite the number of assignmets only 1 entry should be loged in\r\n                 * into user activities with information containig the assignments\r\n                 */\r\n                $scope.submitReferedStudents = function () {\r\n                    // format the data so it an be easily insterted in the database\r\n                    var studentsReferred = [];\r\n                    angular.forEach($scope.refTable, function (student) {\r\n                        angular.forEach(student.referred, function (assignment) {\r\n\r\n\r\n                            var referral = {\r\n                                StudentId: student.id,\r\n                                TeacherId: assignment.TeacherId,\r\n                                AssignmentId: assignment.Id,\r\n                                Date: $scope.currentDate\r\n                            };\r\n                            studentsReferred.push(referral);\r\n                        });\r\n                    });\r\n                    if (studentsReferred.length)\r\n                        aec.save({data: studentsReferred, date: $scope.currentDate},\r\n                            function (response) {\r\n                                notify({\r\n                                    message: \"AEC List Was Submitted Successfully\",\r\n                                    classes: 'alert-success', templateUrl: 'views/common/notify.html'\r\n                                });\r\n                            }, function (response) {\r\n                                notify({\r\n                                    message: \"Submit Failed, Please Contact The Admin\",\r\n                                    classes: 'alert-danger', templateUrl: 'views/common/notify.html'\r\n                                });\r\n                            });\r\n                    $scope.$storage.refTable = [];\r\n                    $scope.refTable = $scope.$storage.refTable;\r\n                };\r\n\r\n            }]);\r\n\r\n}(angular.module('Argus')));","/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\n/* global angular */\n\n(function (app) {\n\tapp.controller('oRoomActivityLogAdminCtrl',\n\t\t['$scope', 'notify', 'StudentsService', 'teachers', '$modal', 'PeriodsService', '$interval', 'OroomService', 'ActivitiesService', 'referrals', 'ISSService','$rootScope','DevService','CountersService',\n\t\t\tfunction ($scope, notify, students, teachers, $modal, periods, $interval, orooms, activities, referrals, isss,$rootScope, dev, counters) {\n\t\t\t\tfunction footable_redraw(){\n\t\t\t\t\t$('.footable').trigger('footable_redraw');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$rootScope.$on('studentsUpdated', function(stu){\n\t\t\t\t\t$scope.schoolStudents = students.students;\n\t\t\t\t});\n\t\t\t\tvar intervalPromise = $interval(interval, 2000);\n\t\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t\t$interval.cancel(intervalPromise); \n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t$scope.mouseOnTable = false;\n\t\t\t\tfunction interval() {\n\t\t\t\t\tvar now = new Date();\n\t\t\t\t\t$scope.currentTime = formatAMPM(now);\n\t\t\t\t\t$scope.currentDate = formatDate(now);\n\t\t\t\t\t$scope.currentPeriod = getPeriod(now);\n\t\t\t\t\tif (!$scope.mouseOnTable) {\n\t\t\t\t\t\torooms.get({}, function (data) {\n\t\t\t\t\t\t\tangular.forEach(data.reftable, function (item) {\n\t\t\t\t\t\t\t\titem.ReferralIn = item.ReferralIn === 1 ? true : false;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tangular.forEach(data.OroomList, function(item){\n\t\t\t\t\t\t\t\tif(item.counters.ISSDays > 0){\n\t\t\t\t\t\t\t\t\titem.class =  'bg-danger';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t$scope.refTable2 = data.OroomList;\n\t\t\t\t\t\t\t$scope.refTable1 = data.reftable;\n\t\t\t\t\t\t\tfootable_redraw();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t//console.log($scope.currentPeriod)\n\t\t\t\t\t// check time and change period accordingly \n//\t\t\t\tif ($scope.currentPeriod) {// period changed programatically\n//\t\t\t\t\tgetORoomLists($scope.currentPeriod);\n//\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t;\n\t\t\t\t\n\t\t\t\t$scope.refresh = getORoomLists;\n\t\t\t\t$scope.selected = {student: null};\n\t\t\t\t$scope.refTable1 = [];\n\t\t\t\t$scope.refTable2 = [];\n\t\t\t\t$scope.activities = [\n\t\t\t\t\t{Name: \"In O-Room\", Id: 1},\n\t\t\t\t\t{Name: \"Assign ISS\", Id: 2},\n\t\t\t\t\t{Name: \"Walked-Out\", Id: 3},\n\t\t\t\t\t{Name: \"No Show\", Id: 4},\n\t\t\t\t\t{Name: \"Other\", Id: 5}\n\t\t\t\t];\n\n\n\t\t\t\t$scope.periods = periods.query(function (data) {\n\t\t\t\t\t$scope.currentPeriod = data[6];\n\n\t\t\t\t\tinterval();\n\t\t\t\t});\n\n\t\t\t\t$scope.schoolStudents = students.students;\n\t\t\t\t$scope.teachers = teachers.query();\n\n\n\n\t\t\t\t$scope.changePeriodTables = function (newPeriod) {\n\t\t\t\t\t$scope.currentPeriod = newPeriod;\n\n\t\t\t\t};\n\n\n\n\n\t\t\t\t$scope.onSelectedStudent = function () {\n\t\t\t\t\t// default activity to In O-Room\n\t\t\t\t\t$scope.selected.student.activity = $scope.activities[0];\n\n\t\t\t\t\t// preprocess the data to send\n\t\t\t\t\tvar date = formatDate(new Date);\n\t\t\t\t\tvar dataToSend = {\n\t\t\t\t\t\t\"StudentId\": $scope.selected.student.user.id,\n\t\t\t\t\t\t\"PeriodId\": $scope.currentPeriod ? $scope.currentPeriod.Id : 14,\n\t\t\t\t\t\t\"ActivityId\": $scope.selected.student.activity.Id,\n\t\t\t\t\t\t\"Date\": date\n\t\t\t\t\t};\n\n\t\t\t\t\t//post data to oroomactivity \n\t\t\t\t\torooms.save({reftable: true}, dataToSend, function (data) {\n\t\t\t\t\t\tconsole.log('data saved');\n\t\t\t\t\t\tconsole.log(data);\n\n\t\t\t\t\t\t// add too the left table\n\t\t\t\t\t\t$scope.refTable1.unshift(data);\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tnotify('Error');\n\t\t\t\t\t});\n\n\t\t\t\t\t// clear field\n\t\t\t\t\t$scope.selected.student = null;\n\n\t\t\t\t};\n\n\t\t\t\t$scope.onTeacherChanged = function (item) {\n\t\t\t\t\tupdateTable1Record(item);\n\t\t\t\t};\n\n\t\t\t\t$scope.onActivitySelected = function (student, oldActivity) {\n\t\t\t\t\t//console.log(student.activity);\n\t\t\t\t\t//console.log(angular.fromJson(oldActivity));\n\t\t\t\t\tif (student.activity.Id !== 2) {\n\t\t\t\t\t\tupdateTable1Record(student);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// go here if Assign ISS is not selected\n\t\t\t\t\tvar modalInstance = $modal.open({\n\t\t\t\t\t\ttemplateUrl: 'views/modals/ISSReferralModal.html',\n\t\t\t\t\t\t//template: '<div> MODAL: assignISS selected</div>',\n\t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t\tcontroller: function ($scope, student, currentUser) {\n\t\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t\t$scope.currentUser = currentUser;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\t\treturn student;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcurrentUser: function () {\n\t\t\t\t\t\t\t\treturn JSON.parse(localStorage.getItem('user'));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tmodalInstance.result.then(function () {//on SUBMIT\n\t\t\t\t\t\t// post the ISS referral to the database \n\t\t\t\t\t\tisss.save({\n\t\t\t\t\t\t\tStudentId: student.student.id,\n\t\t\t\t\t\t\tReferralTypeId: 5,\n\t\t\t\t\t\t\tActionType: 20,\n\t\t\t\t\t\t\tComment: student.comment\n\t\t\t\t\t\t},function(data){\n\t\t\t\t\t\t\tnotify('success');\n\t\t\t\t\t\t}, dev.openError);\n\n\t\t\t\t\t\tupdateTable1Record(student);\n\n\t\t\t\t\t\t// change row to non removable\n\t\t\t\t\t\tstudent.nonRemovable = true;\n\n\t\t\t\t\t\tstudent.staticActivity = true;\n\n\t\t\t\t\t}, function () {// modal dismissed\n\t\t\t\t\t\t// change the activity back to what it was\n\t\t\t\t\t\tstudent.activity = angular.fromJson(oldActivity);\n\t\t\t\t\t\t//updateTable1Record(student);\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t$scope.onReferralInTrue = function (student) {\n\t\t\t\t\tif (student.ReferralIn === false) {\n\t\t\t\t\t\tupdateTable1Record(student);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!student.teacher || student.teacher.id == 0) {\n\t\t\t\t\t\tnotify({message: 'Please Select A Teacher First'});\n\t\t\t\t\t\tstudent.ReferralIn = false;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// check referral type \n\t\t\t\t\tstudents.get({id: student.student.id}, function (data) {\n\t\t\t\t\t\tvar oroomsToBeSeved = data.counters.ORoomsToBeServed;\n//\t\t\t\t\tif(oroomsToBeSeved === 0)\n\t\t\t\t\t\tstudent.referralType = \"First Time - Teacher\";\n//\t\t\t\t\telse{\n//\t\t\t\t\t\tstudent.referralType = \"\"\n//\t\t\t\t\t}\n\n\t\t\t\t\t\tangular.forEach(data.activitiesAffected, function (item) {\n\t\t\t\t\t\t\tif (item.Date === $scope.currentDate)\n\t\t\t\t\t\t\t\tstudent.referralType = \"O-Room Referral → ISS\";\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tvar modalInstance = $modal.open({\n\t\t\t\t\t\ttemplateUrl: 'views/modals/oRoomReferralModal.html',\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t\tcontroller: function ($scope, student) {\n\t\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\t\treturn student;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\n\n\t\t\t\t\tmodalInstance.result.then(function () {// on SUBMIT\n\t\t\t\t\t\t// post the comment and other things to the database \n\n\n\t\t\t\t\t\t// put reftable\n\t\t\t\t\t\tupdateTable1Record(student);\n\t\t\t\t\t\tvar dataToSend = {\n\t\t\t\t\t\t\tDate: $scope.currentDate,\n\t\t\t\t\t\t\tPeriodId: $scope.currentPeriod? $scope.currentPeriod.Id:0 ,\n\t\t\t\t\t\t\tStudentId: student.StudentId,\n\t\t\t\t\t\t\tTeacherId: student.teacher.id,\n\t\t\t\t\t\t\tReferralType: student.referralType,\n\t\t\t\t\t\t\tComment: student.comment\n\t\t\t\t\t\t};\n\t\t\t\t\t\torooms.save({ormlist: true}, dataToSend, function (data) {\n\t\t\t\t\t\t\tnotify('success');\n\t\t\t\t\t\t\t$scope.refTable2.unshift(data);\n\t\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t\tnotify('error');\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//change switch  to static \n\t\t\t\t\t\tstudent.staticRef = true;\n\t\t\t\t\t\t// change teacher to static\n\t\t\t\t\t\tstudent.staticTeacher = true;\n\t\t\t\t\t\t// change row to non removable\n\t\t\t\t\t\tstudent.nonRemovable = true;\n\n\t\t\t\t\t}, function () {// on modal DISMISS\n\t\t\t\t\t\tstudent.ReferralIn = false;\n\t\t\t\t\t});\n\n\t\t\t\t};\n\n\t\t\t\t$scope.onDeleteTable1 = function ($index) {\n\t\t\t\t\t// perform a DELETE request\n\t\t\t\t\tvar obj = $scope.refTable1[$index];\n\t\t\t\t\torooms.delete({id: obj.Id, reftable: true}, function (data) {\n\t\t\t\t\t\tnotify('success');\n\t\t\t\t\t\t$scope.refTable1.splice($index, 1);\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tnotify('error');\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t$scope.onDeleteTable2 = function ($index) {\n\t\t\t\t\tvar item = $scope.refTable2[$index];\n\t\t\t\t\t//checks before opening the modal \n\n\t\t\t\t\tvar modalInstance = $modal.open({\n\t\t\t\t\t\ttemplateUrl: 'views/modals/oRoomCoordinatorUpdateModal.html',\n\t\t\t\t\t\t//template:'<div> MODAL : true in Referral IN </div>',\n\t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t\tcontroller: function ($scope, student) {\n\t\t\t\t\t\t\t$scope.student = student;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tstudent: function () {\n\t\t\t\t\t\t\t\treturn $scope.refTable2[$index];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tmodalInstance.result.then(function () {// on SUBMIT\n\t\t\t\t\t\t// post the comment and other things to the database \n\t\t\t\t\t\tvar payload = {\n\t\t\t\t\t\t\tcounters: item.counters,\n\t\t\t\t\t\t\tComment: item.comment\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcounters.update({id:item.Id}, payload,function(data){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}, dev.openError);\n\n\t\t\t\t\t\t//add student to the list on the right\n\t\t\t\t\t\t$scope.refTable2.splice($index, 1);\n\n\t\t\t\t\t}, function () {// on modal DISMISS\n\t\t\t\t\t});\n\t\t\t\t};\n\n\n\t\t\t\tfunction formatAMPM(date) {\n\t\t\t\t\tvar hours = date.getHours();\n\t\t\t\t\tvar minutes = date.getMinutes();\n\t\t\t\t\tvar seconds = date.getSeconds();\n\t\t\t\t\tvar ampm = hours >= 12 ? 'pm' : 'am';\n\t\t\t\t\thours = hours % 12;\n\t\t\t\t\thours = hours ? hours : 12; // the hour '0' should be '12'\n\t\t\t\t\thours = hours < 10 ? '0' + hours : hours;\n\t\t\t\t\tminutes = minutes < 10 ? '0' + minutes : minutes;\n\t\t\t\t\tseconds = seconds < 10 ? '0' + seconds : seconds;\n\t\t\t\t\tvar strTime = hours + ':' + minutes + ':' + seconds + ' ' + ampm;\n\t\t\t\t\treturn strTime;\n\t\t\t\t}\n\n\t\t\t\tfunction formatTime24(date) {\n\t\t\t\t\tvar hours = date.getHours();\n\t\t\t\t\tvar minutes = date.getMinutes();\n\t\t\t\t\tvar seconds = '00';\n\t\t\t\t\thours = hours < 10 ? '0' + hours : hours;\n\t\t\t\t\tminutes = minutes < 10 ? '0' + minutes : minutes;\n\t\t\t\t\tvar strTime = hours + \":\" + minutes + \":\" + seconds;\n\t\t\t\t\treturn strTime;\n\t\t\t\t}\n\n\t\t\t\tfunction formatDate(date) {\n\t\t\t\t\tvar month = date.getMonth() + 1;\n\t\t\t\t\tvar day = date.getDate();\n\t\t\t\t\tvar year = date.getFullYear();\n\t\t\t\t\tvar strDate = month + '/' + day + \"/\" + year;\n\t\t\t\t\treturn strDate;\n\t\t\t\t}\n\n\t\t\t\tfunction getPeriod(date) {\n\t\t\t\t\tvar currentPeriod = null;\n\t\t\t\t\tvar datestr = formatTime24(date);\n\t\t\t\t\t//console.log(datestr);\n\t\t\t\t\tangular.forEach($scope.periods, function (item) {\n\t\t\t\t\t\tif (datestr > item.StartTime) {\n\t\t\t\t\t\t\t//console.log('datestr < ' + item.StartTime);\n\t\t\t\t\t\t\tif (datestr < item.EndTime) {\n\t\t\t\t\t\t\t\t//console.log('datestr < ' + item.EndTime);\n\t\t\t\t\t\t\t\tcurrentPeriod = item;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t});\n\t\t\t\t\treturn currentPeriod;\n\t\t\t\t}\n\n\t\t\t\tfunction updateTable1Record(item) {\n\t\t\t\t\tconsole.log(item);\n\t\t\t\t\tvar dataToSent = {\n\t\t\t\t\t\tSentOutById: item.teacher ? item.teacher.id : 0,\n\t\t\t\t\t\tActivityId: item.activity ? item.activity.Id : 0,\n\t\t\t\t\t\tReferralIn: item.ReferralIn ? 1 : 0\n\t\t\t\t\t};\n\t\t\t\t\torooms.update({id: item.Id, reftable: true}, dataToSent);\n\t\t\t\t}\n\n\t\t\t\tfunction getORoomLists(period) {\n\t\t\t\t\torooms.get({}, function (data) {\n\t\t\t\t\t\tangular.forEach(data.reftable, function (item) {\n\t\t\t\t\t\t\titem.ReferralIn = item.ReferralIn === 1 ? true : false;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$scope.refTable1 = data.reftable;\n\t\t\t\t\t\t$scope.refTable2 = data.OroomList;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tgetORoomLists();\n\t\t\t}]);\n}(angular.module('Argus')));","/* global angular */\r\n\r\n(function(app){\r\n\t\"use strict\";\r\n\tapp\r\n\t.controller(\"studentInfoCtrl\", [\"$scope\", \"StudentsService\",  function ($scope, students) {\r\n\t\t$scope.students;  // model for autocomplete\r\n\t\t$scope.toShow = []; //list of profiles to show on the view\r\n\t\t//student information from the database \r\n\t\t\r\n\t\t$scope.students = students.query({admin:true, light:true});\r\n\t\t\r\n\t\t\r\n\t\t$scope.max = 4;\r\n\t\t$scope.profiles = ['', '', '', ''];\r\n\t\t$scope.selected = {};\r\n\t\t$scope.active = 0;\r\n\t\t$scope.onEnter = function () {\r\n\t\t\t// get more information of the selected student \r\n\t\t\tstudents.get({id:$scope.selected.student.Id}, function(data){\r\n\t\t\t\t$scope.selected.student = data;\r\n\t\t\t\t$scope.toShow.push($scope.selected.student);\r\n\t\t\t\t$scope.active++; // increase number of active profiles\r\n\t\t\t\t$scope.selected.student = null; // clear search field\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t//$scope.profiles[$scope.active] = $item; //\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t};\r\n\t\t$scope.remove = function ($index) {\r\n\t\t\t$scope.toShow.splice($index, 1);\r\n\t\t\t//$scope.profiles[$index] = '';\r\n\t\t\t$scope.active--;\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}]);\t\r\n}(angular.module('Argus')));"],"sourceRoot":"/source/"}